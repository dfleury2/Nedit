* comment *
PHP calltips for NEDIT
based on "funcsummary.txt" from the PHP Documentation Group
Date: 2004-11-28

* comment *
New versions can be found at
http://xmp.net/arno/php-calltips/

* comment *
Copyright (c) 2004 by Arno Hollosi and the PHP Documentation Group.
This material may be distributed only subject to the terms and
conditions set forth in the Open Publication License, v1.0 or
later (the latest version is presently available at http://www.opencontent.org/openpub/).

* language *
PHP

* version *
1.0

* comment *
functions start here

class_exists
bool class_exists(string classname [, bool autoload])
   Checks if the class exists

create_function
string create_function(string args, string code)
   Creates an anonymous function, and returns its name (funny, eh?)

debug_backtrace
array debug_backtrace(void)
   Return backtrace as array

debug_print_backtrace
void debug_print_backtrace(void)

define
bool define(string constant_name, mixed value, case_sensitive=true)
   Define a new constant

defined
bool defined(string constant_name)
   Check whether a constant exists

each
array each(array arr)
   Return the currently pointed key..value pair in the passed array,
   and advance the pointer to the next element

error_reporting
int error_reporting(int new_error_level=null)
   Return the current error_reporting level,
   and if an argument was passed - change to the new level

extension_loaded
bool extension_loaded(string extension_name)
   Returns true if the named extension is loaded

func_get_arg
mixed func_get_arg(int arg_num)
   Get the $arg_num'th argument that was passed to the function

func_get_args
array func_get_args()
   Get an array of the arguments that were passed to the function

func_num_args
int func_num_args(void)
   Get the number of arguments that were passed to the function

function_exists
bool function_exists(string function_name)
   Checks if the function exists

get_class
string get_class([object object])
   Retrieves the class name

get_class_methods
array get_class_methods(mixed class)
   Returns an array of method names for class or class instance.

get_class_vars
array get_class_vars(string class_name)
   Returns an array of default properties of the class

get_declared_classes
array get_declared_classes()
   Returns an array of all declared classes.

get_declared_interfaces
array get_declared_interfaces()
   Returns an array of all declared interfaces.

get_defined_constants
array get_defined_constants(void)
   Return an array containing the names and values of all defined constants

get_defined_functions
array get_defined_functions(void)
   Returns an array of all defined functions

get_defined_vars
array get_defined_vars(void)
   Returns an associative array of names and values
   of all currently defined variable names
   (variables in the current scope)

get_extension_funcs
array get_extension_funcs(string extension_name)
   Returns an array with the names of functions
   belonging to the named extension

get_included_files
array get_included_files(void)
   Returns an array with the file names that were include_once()'d

get_loaded_extensions
array get_loaded_extensions(void)
   Return an array containing names of loaded extensions

get_object_vars
array get_object_vars(object obj)
   Returns an array of object properties

get_parent_class
string get_parent_class(mixed object)
   Retrieves the parent class name for object or class.

get_resource_type
string get_resource_type(resource res)
   Get the resource type name for a given resource

interface_exists
bool interface_exists(string classname [, bool autoload])
   Checks if the class exists

is_a
bool is_a(object object, string class_name)
   Returns true if the object is of this class
   or has this class as one of its parents

is_subclass_of
bool is_subclass_of(object object, string class_name)
   Returns true if the object has this class as one of its parents

leak
void leak(int num_bytes=3)
   Cause an intentional memory leak,
   for testing/debugging purposes

method_exists
bool method_exists(object object, string method)
   Checks if the class method exists

restore_error_handler
void restore_error_handler(void)
   Restores the previously defined error handler function

restore_exception_handler
void restore_exception_handler(void)
   Restores the previously defined exception handler function

set_error_handler
string set_error_handler(string error_handler [, int error_types])
   Sets a user-defined error handler function.
   Returns the previously defined error handler, or false on error

set_exception_handler
string set_exception_handler(callable exception_handler)
   Sets a user-defined exception handler function.
   Returns the previously defined exception handler, or false on error

strcasecmp
int strcasecmp(string str1, string str2)
   Binary safe case-insensitive string comparison

strcmp
int strcmp(string str1, string str2)
   Binary safe string comparison

strlen
int strlen(string str)
   Get string length

strncasecmp
int strncasecmp(string str1, string str2, int len)
   Binary safe string comparison

strncmp
int strncmp(string str1, string str2, int len)
   Binary safe string comparison

trigger_error
void trigger_error(string messsage [, int error_type])
   Generates a user-level error/warning/notice message

zend_version
string zend_version(void)
   Get the version of the Zend Engine

ErrorException::getSeverity
int ErrorException::getSeverity()
   Get the exception severity

Exception::__clone
Exception Exception::__clone()
   Clone the exception object

Exception::__toString
string Exception::__toString()
   Obtain the string representation of the Exception object

Exception::getCode
int Exception::getCode()
   Get the exception code

Exception::getFile
string Exception::getFile()
   Get the file in which the exception occurred

Exception::getLine
int Exception::getLine()
   Get the line in which the exception occurred

Exception::getMessage
string Exception::getMessage()
   Get the exception message

Exception::getTrace
array Exception::getTrace()
   Get the stack trace for the location in which the exception occurred

Exception::getTraceAsString
string Exception::getTraceAsString()
   Obtain the backtrace for the exception as a string (instead of an array)

xception::__construct
Exception::__construct(string message, int code)
   Exception constructor

rrorException::__construct
ErrorException::__construct(string message, int code, int severity [, $filename [, $lineno]])
   ErrorException constructor

ReflectionClass::getParentClass
public ReflectionClass ReflectionClass::getParentClass()
   Returns the class' parent class, or, if none exists, FALSE

ReflectionMethod::getDeclaringClass
public ReflectionClass ReflectionMethod::getDeclaringClass()
   Get the declaring class

ReflectionParameter::getClass
public ReflectionClass ReflectionParameter::getClass()
   Returns this parameters's class hint or NULL if there is none

ReflectionProperty::getDeclaringClass
public ReflectionClass ReflectionProperty::getDeclaringClass()
   Get the declaring class

ReflectionClass::__construct
public ReflectionClass::__construct(mixed argument)
throws ReflectionException
   Constructor. Takes a string or an instance as an argument

ReflectionClass::getInterfaces
public ReflectionClass[] ReflectionClass::getInterfaces()
   Returns an array of interfaces this class implements

ReflectionExtension::getClasses
public ReflectionClass[] ReflectionExtension::getClasses()
   Returns an array containing Reflection_Class objects
   for all classes of this extension

ReflectionExtension::__construct
public ReflectionExtension::__construct(string name)
   Constructor. Throws an Exception in case the given
   extension does not exist

Reflection_Class::getExtension
public ReflectionExtension|NULL Reflection_Class::getExtension()
   Returns NULL or the extension the class belongs to

ReflectionFunction::__construct
public ReflectionFunction::__construct(string name)
   Constructor. Throws an Exception in case
   the given function does not exist

ReflectionExtension::getFunctions
public ReflectionFunction[] ReflectionExtension::getFunctions()
   Returns an array of this extension's fuctions

ReflectionClass::getConstructor
public ReflectionMethod ReflectionClass::getConstructor()
   Returns the class' constructor if there is one, NULL otherwise

ReflectionClass::getMethod
public ReflectionMethod ReflectionClass::getMethod(string name)
throws ReflectionException
   Returns the class' method specified by it's name

ReflectionMethod::__construct
public ReflectionMethod::__construct(mixed class, string name)
   Constructor. Throws an Exception in case
   the given method does not exist

ReflectionClass::getMethods
public ReflectionMethod[] ReflectionClass::getMethods()
   Returns an array of this class' methods

ReflectionObject::__construct
public ReflectionObject::__construct(mixed argument)
throws ReflectionException
   Constructor. Takes an instance as an argument

ReflectionParameter::__construct
public ReflectionParameter::__construct(mixed function, mixed parameter)
   Constructor. Throws an Exception in case
   the given method does not exist

Reflection_Function::getParameters
public ReflectionParameter[] Reflection_Function::getParameters()
   Returns an array of parameter objects for this function

ReflectionClass::getProperty
public ReflectionProperty ReflectionClass::getProperty(string name)
throws ReflectionException
   Returns the class' property specified by it's name

ReflectionProperty::__construct
public ReflectionProperty::__construct(mixed class, string name)
   Constructor. Throws an Exception in case
   the given property does not exist

ReflectionClass::getProperties
public ReflectionProperty[] ReflectionClass::getProperties()
   Returns an array of this class' properties

ReflectionClass::getConstants
public array ReflectionClass::getConstants()
   Returns an associative array containing
   this class' constants and their values

ReflectionClass::getDefaultProperties
public array ReflectionClass::getDefaultProperties()
   Returns an associative array containing copies
   of all default property values of the class

ReflectionClass::getStaticProperties
public array ReflectionClass::getStaticProperties()
   Returns an associative array containing
   all static property values of the class

ReflectionExtension::getClassNames
public array ReflectionExtension::getClassNames()
   Returns an array containing all names
   of all classes of this extension

ReflectionExtension::getConstants
public array ReflectionExtension::getConstants()
   Returns an associative array containing
   this extension's constants and their values

ReflectionExtension::getINIEntries
public array ReflectionExtension::getINIEntries()
   Returns an associative array containing
   this extension's INI entries and their values

ReflectionFunction::getStaticVariables
public array ReflectionFunction::getStaticVariables()
   Returns an associative array containing
   this function's static variables and their values

ReflectionClass::implementsInterface
public bool ReflectionClass::implementsInterface(string|reflection_class interface_name)
   Returns whether this class is a subclass of another class

ReflectionClass::isAbstract
public bool ReflectionClass::isAbstract()
   Returns whether this class is abstract

ReflectionClass::isFinal
public bool ReflectionClass::isFinal()
   Returns whether this class is final

ReflectionClass::isInstance
public bool ReflectionClass::isInstance(stdclass object)
   Returns whether the given object is an instance of this class

ReflectionClass::isInstantiable
public bool ReflectionClass::isInstantiable()
   Returns whether this class is instantiable

ReflectionClass::isInterface
public bool ReflectionClass::isInterface()
   Returns whether this is an interface or a class

ReflectionClass::isInternal
public bool ReflectionClass::isInternal()
   Returns whether this class is an internal class

ReflectionClass::isIterateable
public bool ReflectionClass::isIterateable()
   Returns whether this class is iterateable (can be used inside foreach)

ReflectionClass::isSubclassOf
public bool ReflectionClass::isSubclassOf(string|reflection_class class)
   Returns whether this class is a subclass of another class

ReflectionClass::isUserDefined
public bool ReflectionClass::isUserDefined()
   Returns whether this class is user-defined

ReflectionFunction::getNumberOfParameters
public bool ReflectionFunction::getNumberOfParameters()
   Gets the number of required parameters

ReflectionFunction::getNumberOfRequiredParameters
public bool ReflectionFunction::getNumberOfRequiredParameters()
   Gets the number of required parameters

ReflectionFunction::isInternal
public bool ReflectionFunction::isInternal()
   Returns whether this is an internal function

ReflectionFunction::isUserDefined
public bool ReflectionFunction::isUserDefined()
   Returns whether this is an user-defined function

ReflectionFunction::returnsReference
public bool ReflectionFunction::returnsReference()
   Gets whether this function returns a reference

ReflectionMethod::isAbstract
public bool ReflectionMethod::isAbstract()
   Returns whether this method is abstract

ReflectionMethod::isConstructor
public bool ReflectionMethod::isConstructor()
   Returns whether this method is the constructor

ReflectionMethod::isDestructor
public bool ReflectionMethod::isDestructor()
   Returns whether this method is static

ReflectionMethod::isFinal
public bool ReflectionMethod::isFinal()
   Returns whether this method is final

ReflectionMethod::isPrivate
public bool ReflectionMethod::isPrivate()
   Returns whether this method is private

ReflectionMethod::isProtected
public bool ReflectionMethod::isProtected()
   Returns whether this method is protected

ReflectionMethod::isPublic
public bool ReflectionMethod::isPublic()
   Returns whether this method is public

ReflectionMethod::isStatic
public bool ReflectionMethod::isStatic()
   Returns whether this method is static

ReflectionParameter::allowsNull
public bool ReflectionParameter::allowsNull()
   Returns whether NULL is allowed as this parameters's value

ReflectionParameter::getDefaultValue
public bool ReflectionParameter::getDefaultValue()
   Returns the default value of this parameter or throws an exception

ReflectionParameter::isDefaultValueAvailable
public bool ReflectionParameter::isDefaultValueAvailable()
   Returns whether the default value of this parameter is available

ReflectionParameter::isOptional
public bool ReflectionParameter::isOptional()
   Returns whether this parameter is an optional parameter

ReflectionParameter::isPassedByReference
public bool ReflectionParameter::isPassedByReference()
   Returns whether this parameters is passed to by reference

ReflectionProperty::isDefault
public bool ReflectionProperty::isDefault()
   Returns whether this property is default (declared at compilation time).

ReflectionProperty::isPrivate
public bool ReflectionProperty::isPrivate()
   Returns whether this property is private

ReflectionProperty::isProtected
public bool ReflectionProperty::isProtected()
   Returns whether this property is protected

ReflectionProperty::isPublic
public bool ReflectionProperty::isPublic()
   Returns whether this property is public

ReflectionProperty::isStatic
public bool ReflectionProperty::isStatic()
   Returns whether this property is static

ReflectionClass::getEndLine
public int ReflectionClass::getEndLine()
   Returns the line this class' declaration ends at

ReflectionClass::getModifiers
public int ReflectionClass::getModifiers()
   Returns a bitfield of the access modifiers for this class

ReflectionClass::getStartLine
public int ReflectionClass::getStartLine()
   Returns the line this class' declaration starts at

ReflectionFunction::getEndLine
public int ReflectionFunction::getEndLine()
   Returns the line this function's declaration ends at

ReflectionFunction::getStartLine
public int ReflectionFunction::getStartLine()
   Returns the line this function's declaration starts at

ReflectionMethod::getModifiers
public int ReflectionMethod::getModifiers()
   Returns a bitfield of the access modifiers for this method

ReflectionProperty::getModifiers
public int ReflectionProperty::getModifiers()
   Returns a bitfield of the access modifiers for this property

ReflectionClass::getConstant
public mixed ReflectionClass::getConstant(string name)
   Returns the class' constant specified by its name

ReflectionFunction::invoke
public mixed ReflectionFunction::invoke(mixed* args)
   Invokes the function

ReflectionMethod::invoke
public mixed ReflectionMethod::invoke(mixed object, mixed* args)
   Invokes the function. Pass a

ReflectionProperty::getValue
public mixed ReflectionProperty::getValue(stdclass object)
   Returns this property's value

Reflection::getModifierNames
public static array Reflection::getModifierNames(int modifiers)
   Returns an array of modifier names

Reflection::export
public static mixed Reflection::export(Reflector r [, bool return])
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionClass::export
public static mixed ReflectionClass::export(mixed argument, [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionExtension::export
public static mixed ReflectionExtension::export(string name, [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionFunction::export
public static mixed ReflectionFunction::export(string name, [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionMethod::export
public static mixed ReflectionMethod::export(mixed class, string name, [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionObject::export
public static mixed ReflectionObject::export(mixed argument, [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionParameter::export
public static mixed ReflectionParameter::export(mixed function, mixed parameter, [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionProperty::export
public static mixed ReflectionProperty::export(mixed class, string name [, bool return])
throws ReflectionException
   Exports a reflection object.
   Returns the output if TRUE is specified for return, printing it otherwise.

ReflectionClass::newInstance
public stdclass ReflectionClass::newInstance(mixed* args, ...)
   Returns an instance of this class

ReflectionClass::__toString
public string ReflectionClass::__toString()
   Returns a string representation

ReflectionClass::getDocComment
public string ReflectionClass::getDocComment()
   Returns the doc comment for this class

ReflectionClass::getFileName
public string ReflectionClass::getFileName()
   Returns the filename of the file this class was declared in

ReflectionClass::getName
public string ReflectionClass::getName()
   Returns the class' name

ReflectionExtension::__toString
public string ReflectionExtension::__toString()
   Returns a string representation

ReflectionExtension::getName
public string ReflectionExtension::getName()
   Returns this extension's name

ReflectionExtension::getVersion
public string ReflectionExtension::getVersion()
   Returns this extension's version

ReflectionFunction::__toString
public string ReflectionFunction::__toString()
   Returns a string representation

ReflectionFunction::getDocComment
public string ReflectionFunction::getDocComment()
   Returns the doc comment for this function

ReflectionFunction::getFileName
public string ReflectionFunction::getFileName()
   Returns the filename of the file this function was declared in

ReflectionFunction::getName
public string ReflectionFunction::getName()
   Returns this function's name

ReflectionMethod::__toString
public string ReflectionMethod::__toString()
   Returns a string representation

ReflectionParameter::__toString
public string ReflectionParameter::__toString()
   Returns a string representation

ReflectionParameter::getName
public string ReflectionParameter::getName()
   Returns this parameters's name

ReflectionProperty::__toString
public string ReflectionProperty::__toString()
   Returns a string representation

ReflectionProperty::getName
public string ReflectionProperty::getName()
   Returns the class' name

ReflectionClass::getExtensionName
public string|false ReflectionClass::getExtensionName()
   Returns false or the name of the extension the class belongs to

ReflectionProperty::setValue
public void ReflectionProperty::setValue(stdclass object, mixed value)
   Sets this property's value

bcadd
string bcadd(string left_operand, string right_operand [, int scale])
   Returns the sum of two arbitrary precision numbers

bccomp
int bccomp(string left_operand, string right_operand [, int scale])
   Compares two arbitrary precision numbers

bcdiv
string bcdiv(string left_operand, string right_operand [, int scale])
   Returns the quotient of two arbitrary precision numbers (division)

bcmod
string bcmod(string left_operand, string right_operand)
   Returns the modulus of the two arbitrary precision operands

bcmul
string bcmul(string left_operand, string right_operand [, int scale])
   Returns the multiplication of two arbitrary precision numbers

bcpow
string bcpow(string x, string y [, int scale])
   Returns the value of an arbitrary precision number
   raised to the power of another

bcpowmod
string bcpowmod(string x, string y, string mod [, int scale])
   Returns the value of an arbitrary precision number
   raised to the power of another reduced by a modulous

bcscale
bool bcscale(int scale)
   Sets default scale parameter for all bc math functions

bcsqrt
string bcsqrt(string operand [, int scale])
   Returns the square root of an arbitray precision number

bcsub
string bcsub(string left_operand, string right_operand [, int scale])
   Returns the difference between two arbitrary precision numbers

bzcompress
string bzcompress(string source [, int blocksize100k [, int workfactor]])
   Compresses a string into BZip2 encoded data

bzdecompress
string bzdecompress(string source [, int small])
   Decompresses BZip2 compressed data

bzerrno
int bzerrno(resource bz)
   Returns the error number

bzerror
array bzerror(resource bz)
   Returns the error number and error string in an associative array

bzerrstr
string bzerrstr(resource bz)
   Returns the error string

bzopen
resource bzopen(string|int file|fp, string mode)
   Opens a new BZip2 stream

bzread
string bzread(int bz[, int length])
   Reads up to length bytes from a BZip2 stream,
   or 1024 bytes if length is not specified

jdtounix
int jdtounix(int jday)
   Convert Julian Day to UNIX timestamp

unixtojd
int unixtojd([int timestamp])
   Convert UNIX timestamp to Julian Day

cal_days_in_month
int cal_days_in_month(int calendar, int month, int year)
   Returns the number of days in a month for a given year and calendar

cal_from_jd
array cal_from_jd(int jd, int calendar)
   Converts from Julian Day Count to a supported calendar
   and return extended information

cal_info
array cal_info(int calendar)
   Returns information about a particular calendar

cal_to_jd
int cal_to_jd(int calendar, int month, int day, int year)
   Converts from a supported calendar to Julian Day Count

frenchtojd
int frenchtojd(int month, int day, int year)
   Converts a french republic calendar date to julian day count

gregoriantojd
int gregoriantojd(int month, int day, int year)
   Converts a gregorian calendar date to julian day count

jddayofweek
mixed jddayofweek(int juliandaycount [, int mode])
   Returns name or number of day of week from julian day count

jdmonthname
string jdmonthname(int juliandaycount, int mode)
   Returns name of month for julian day count

jdtofrench
string jdtofrench(int juliandaycount)
   Converts a julian day count to a french republic calendar date

jdtogregorian
string jdtogregorian(int juliandaycount)
   Converts a julian day count to a gregorian calendar date

jdtojewish
string jdtojewish(int juliandaycount [, bool hebrew [, int fl]])
   Converts a julian day count to a jewish calendar date

jdtojulian
string jdtojulian(int juliandaycount)
   Convert a julian day count to a julian calendar date

jewishtojd
int jewishtojd(int month, int day, int year)
   Converts a jewish calendar date to a julian day count

juliantojd
int juliantojd(int month, int day, int year)
   Converts a julian calendar date to julian day count

easter_date
int easter_date([int year])
   Return the timestamp of midnight on Easter of a given year
   (defaults to current year)

easter_days
int easter_days([int year, [int method]])
   Return the number of days after March 21 that Easter falls on
   for a given year (defaults to current year)

com_create_guid
string com_create_guid()
   Generate a globally unique identifier (GUID)

com_event_sink
bool com_event_sink(object comobject, object sinkobject [, mixed sinkinterface])
   Connect events from a COM object to a PHP object

com_get_active_object
object com_get_active_object(string progid [, int code_page ])
   Returns a handle to an already running instance of a COM object

com_load_typelib
bool com_load_typelib(string typelib_name [, int case_insensitive])
   Loads a Typelibrary and registers its constants

com_message_pump
bool com_message_pump([int timeoutms])
   Process COM messages, sleeping for up to timeoutms milliseconds

com_print_typeinfo
bool com_print_typeinfo(object comobject | string typelib, string dispinterface, bool wantsink)
   Print out a PHP class definition for a dispatchable interface

COMPersistHelper::GetCurFile
string COMPersistHelper::GetCurFile()
   Determines the filename into which an object will be saved,
   or false if none is set, via IPersistFile::GetCurFile

COMPersistHelper::GetMaxStreamSize
int COMPersistHelper::GetMaxStreamSize()
   Gets maximum stream size required to store the object data,
   via IPersistStream::GetSizeMax (or IPersistStreamInit::GetSizeMax)

COMPersistHelper::InitNew
int COMPersistHelper::InitNew()
   Initializes the object to a default state,
   via IPersistStreamInit::InitNew

COMPersistHelper::LoadFromFile
bool COMPersistHelper::LoadFromFile(string filename [, int flags])
   Load object data from file, via IPersistFile::Load

COMPersistHelper::LoadFromStream
mixed COMPersistHelper::LoadFromStream(resource stream)
   Initializes an object from the stream where it was previously saved,
   via IPersistStream::Load or OleLoadFromStream

COMPersistHelper::SaveToFile
bool COMPersistHelper::SaveToFile(string filename [, bool remember])
   Persist object data to file, via IPersistFile::Save

COMPersistHelper::SaveToStream
int COMPersistHelper::SaveToStream(resource stream)
   Saves the object to a stream, via IPersistStream::Save

COMPersistHelper::__construct
int COMPersistHelper::__construct([object com_object])
   Creates a persistence helper object, usually associated with a com_object

variant_abs
mixed variant_abs(mixed left)
   Returns the absolute value of a variant

variant_add
mixed variant_add(mixed left, mixed right)
   "Adds" two variant values together and returns the result

variant_and
mixed variant_and(mixed left, mixed right)
   performs a bitwise AND operation between two variants
   and returns the result

variant_cast
object variant_cast(object variant, int type)
   Convert a variant into a new variant object of another type

variant_cat
mixed variant_cat(mixed left, mixed right)
   concatenates two variant values together and returns the result

variant_cmp
int variant_cmp(mixed left, mixed right [, int lcid [, int flags]])
   Compares two variants

variant_date_from_timestamp
object variant_date_from_timestamp(int timestamp)
   Returns a variant date representation of a unix timestamp

variant_date_to_timestamp
int variant_date_to_timestamp(object variant)
   Converts a variant date/time value to unix timestamp

variant_div
mixed variant_div(mixed left, mixed right)
   Returns the result from dividing two variants

variant_eqv
mixed variant_eqv(mixed left, mixed right)
   Performs a bitwise equivalence on two variants

variant_fix
mixed variant_fix(mixed left)
   Returns the integer part ? of a variant

variant_get_type
int variant_get_type(object variant)
   Returns the VT_XXX type code for a variant

variant_idiv
mixed variant_idiv(mixed left, mixed right)
   Converts variants to integers
   and then returns the result from dividing them

variant_imp
mixed variant_imp(mixed left, mixed right)
   Performs a bitwise implication on two variants

variant_int
mixed variant_int(mixed left)
   Returns the integer portion of a variant

variant_mod
mixed variant_mod(mixed left, mixed right)
   Divides two variants and returns only the remainder

variant_mul
mixed variant_mul(mixed left, mixed right)
   multiplies the values of the two variants and returns the result

variant_neg
mixed variant_neg(mixed left)
   Performs logical negation on a variant

variant_not
mixed variant_not(mixed left)
   Performs bitwise not negation on a variant

variant_or
mixed variant_or(mixed left, mixed right)
   Performs a logical disjunction on two variants

variant_pow
mixed variant_pow(mixed left, mixed right)
   Returns the result of performing the power function with two variants

variant_round
mixed variant_round(mixed left, int decimals)
   Rounds a variant to the specified number of decimal places

variant_set
void variant_set(object variant, mixed value)
   Assigns a new value for a variant object

variant_set_type
void variant_set_type(object variant, int type)
   Convert a variant into another type.
   Variant is modified "in-place"

variant_sub
mixed variant_sub(mixed left, mixed right)
   subtracts the value of the right variant from the left variant value
   and returns the result

variant_xor
mixed variant_xor(mixed left, mixed right)
   Performs a logical exclusion on two variants

cpdf_add_annotation
bool cpdf_add_annotation(int pdfdoc, float xll, float yll, float xur, float xur, string title, string text [, int mode])
   Sets annotation

cpdf_add_outline
int cpdf_add_outline(int pdfdoc, int lastoutline, int sublevel, int open, int pagenr, string title)
   Adds outline

cpdf_arc
bool cpdf_arc(int pdfdoc, float x, float y, float radius, float start, float end [, int mode])
   Draws an arc

cpdf_begin_text
bool cpdf_begin_text(int pdfdoc)
   Starts text section

cpdf_circle
bool cpdf_circle(int pdfdoc, float x, float y, float radius [, int mode])
   Draws a circle

cpdf_clip
bool cpdf_clip(int pdfdoc)
   Clips to current path

cpdf_close
bool cpdf_close(int pdfdoc)
   Closes the pdf document

cpdf_closepath
bool cpdf_closepath(int pdfdoc)
   Close path

cpdf_closepath_fill_stroke
bool cpdf_closepath_fill_stroke(int pdfdoc)
   Close, fill and stroke current path

cpdf_closepath_stroke
bool cpdf_closepath_stroke(int pdfdoc)
   Close path and draw line along path

cpdf_continue_text
bool cpdf_continue_text(int pdfdoc, string text)
   Outputs text in next line

cpdf_curveto
bool cpdf_curveto(int pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3 [, int mode])
   Draws a curve

cpdf_end_text
bool cpdf_end_text(int pdfdoc)
   Ends text section

cpdf_fill
bool cpdf_fill(int pdfdoc)
   Fills current path

cpdf_fill_stroke
bool cpdf_fill_stroke(int pdfdoc)
   Fills and stroke current path

cpdf_finalize
bool cpdf_finalize(int pdfdoc)
   Creates PDF doc in memory

cpdf_finalize_page
bool cpdf_finalize_page(int pdfdoc, int pagenr)
   Ends the page to save memory

cpdf_global_set_document_limits
bool cpdf_global_set_document_limits(int maxPages, int maxFonts, int maxImages, int maxAnnots, int maxObjects)
   Sets document settings for all documents

cpdf_import_jpeg
bool cpdf_import_jpeg(int pdfdoc, string filename, float x, float y, float angle, float width, float height,
	float x_scale, float y_scale, int gsave [, int mode])
   Includes JPEG image

cpdf_lineto
bool cpdf_lineto(int pdfdoc, float x, float y [, int mode])
   Draws a line

cpdf_moveto
bool cpdf_moveto(int pdfdoc, float x, float y [, int mode])
   Sets current point

cpdf_newpath
bool cpdf_newpath(int pdfdoc)
   Starts new path

cpdf_open
int cpdf_open(int compression [, string filename [, array doc_limits]])
   Opens a new pdf document

cpdf_output_buffer
bool cpdf_output_buffer(int pdfdoc)
   Returns the internal memory stream as string

cpdf_page_init
bool cpdf_page_init(int pdfdoc, int pagenr, int orientation, int height, int width [, float unit])
   Starts page

cpdf_place_inline_image
bool cpdf_place_inline_image(int pdfdoc, int gdimage, float x, float y, float angle,
	fload width, float height, int gsave [, int mode])
   Includes image

cpdf_rect
bool cpdf_rect(int pdfdoc, float x, float y, float width, float height [, int mode])
   Draws a rectangle

cpdf_restore
bool cpdf_restore(int pdfdoc)
   Restores formerly saved enviroment

cpdf_rlineto
bool cpdf_rlineto(int pdfdoc, float x, float y [, int mode])
   Draws a line relative to current point

cpdf_rmoveto
bool cpdf_rmoveto(int pdfdoc, float x, float y [, int mode])
   Sets current point

cpdf_rotate
bool cpdf_rotate(int pdfdoc, float angle)
   Sets rotation

cpdf_rotate_text
bool cpdf_rotate_text(int pdfdoc, float angle)
   Sets text rotation angle

cpdf_save
bool cpdf_save(int pdfdoc)
   Saves current enviroment

cpdf_save_to_file
bool cpdf_save_to_file(int pdfdoc, string filename)
   Saves the internal memory stream to a file

cpdf_scale
bool cpdf_scale(int pdfdoc, float x_scale, float y_scale)
   Sets scaling

cpdf_set_action_url
bool cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float xur, string url [, int mode])
   Sets hyperlink

cpdf_set_char_spacing
bool cpdf_set_char_spacing(int pdfdoc, float space)
   Sets character spacing

cpdf_set_creator
bool cpdf_set_creator(int pdfdoc, string creator)
   Sets the creator field

cpdf_set_current_page
bool cpdf_set_current_page(int pdfdoc, int pagenr)
   Sets page for output

cpdf_set_font
bool cpdf_set_font(int pdfdoc, string font, float size, string encoding)
   Selects the current font face, size and encoding

cpdf_set_font_directories
bool cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir)
   Sets directories to search when using external fonts

cpdf_set_font_map_file
bool cpdf_set_font_map_file(int pdfdoc, string filename)
   Sets fontname to filename translation map when using external fonts

cpdf_set_horiz_scaling
bool cpdf_set_horiz_scaling(int pdfdoc, float scale)
   Sets horizontal scaling of text

cpdf_set_keywords
bool cpdf_set_keywords(int pdfptr, string keywords)
   Fills the keywords field of the info structure

cpdf_set_leading
bool cpdf_set_leading(int pdfdoc, float distance)
   Sets distance between text lines

cpdf_set_page_animation
bool cpdf_set_page_animation(int pdfdoc, int transition, float duration, float direction, int orientation, int inout)
   Sets transition between pages

cpdf_set_subject
bool cpdf_set_subject(int pdfptr, string subject)
   Fills the subject field of the info structure

cpdf_set_text_matrix
bool cpdf_set_text_matrix(int pdfdoc, arry matrix)
   Sets the text matrix

cpdf_set_text_pos
bool cpdf_set_text_pos(int pdfdoc, float x, float y [, int mode])
   Sets the position of text for the next cpdf_show call

cpdf_set_text_rendering
bool cpdf_set_text_rendering(int pdfdoc, int rendermode)
   Determines how text is rendered

cpdf_set_text_rise
bool cpdf_set_text_rise(int pdfdoc, float value)
   Sets the text rise

cpdf_set_title
bool cpdf_set_title(int pdfptr, string title)
   Fills the title field of the info structure

cpdf_set_viewer_preferences
bool cpdf_set_viewer_preferences(int pdfdoc, array preferences)
   How to show the document in the viewer

cpdf_set_word_spacing
bool cpdf_set_word_spacing(int pdfdoc, float space)
   Sets spacing between words

cpdf_setdash
bool cpdf_setdash(int pdfdoc, long white, long black)
   Sets dash pattern

cpdf_setflat
bool cpdf_setflat(int pdfdoc, float value)
   Sets flatness

cpdf_setgray
bool cpdf_setgray(int pdfdoc, float value)
   Sets drawing and filling color to gray value

cpdf_setgray_fill
bool cpdf_setgray_fill(int pdfdoc, float value)
   Sets filling color to gray value

cpdf_setgray_stroke
bool cpdf_setgray_stroke(int pdfdoc, float value)
   Sets drawing color to gray value

cpdf_setlinecap
bool cpdf_setlinecap(int pdfdoc, int value)
   Sets linecap parameter

cpdf_setlinejoin
bool cpdf_setlinejoin(int pdfdoc, int value)
   Sets linejoin parameter

cpdf_setlinewidth
bool cpdf_setlinewidth(int pdfdoc, float width)
   Sets line width

cpdf_setmiterlimit
bool cpdf_setmiterlimit(int pdfdoc, float value)
   Sets miter limit

cpdf_setrgbcolor
bool cpdf_setrgbcolor(int pdfdoc, float red, float green, float blue)
   Sets drawing and filling color to RGB color value

cpdf_setrgbcolor_fill
bool cpdf_setrgbcolor_fill(int pdfdoc, float red, float green, float blue)
   Sets filling color to rgb color value

cpdf_setrgbcolor_stroke
bool cpdf_setrgbcolor_stroke(int pdfdoc, float red, float green, float blue)
   Sets drawing color to RGB color value

cpdf_show
bool cpdf_show(int pdfdoc, string text)
   Output text at current position

cpdf_show_xy
bool cpdf_show_xy(int pdfdoc, string text, float x-koor, float y-koor [, int mode])
   Output text at position

cpdf_stringwidth
float cpdf_stringwidth(int pdfdoc, string text)
   Returns width of text in current font

cpdf_stroke
bool cpdf_stroke(int pdfdoc)
   Draws line along path path

cpdf_text
bool cpdf_text(int pdfdoc, string text [, float x-koor, float y-koor [, int mode [, float orientation [, int alignmode]]]])
   Outputs text

cpdf_translate
bool cpdf_translate(int pdfdoc, float x, float y)
   Sets origin of coordinate system

ctype_alnum
bool ctype_alnum(mixed c)
   Checks for alphanumeric character(s)

ctype_alpha
bool ctype_alpha(mixed c)
   Checks for alphabetic character(s)

ctype_cntrl
bool ctype_cntrl(mixed c)
   Checks for control character(s)

ctype_digit
bool ctype_digit(mixed c)
   Checks for numeric character(s)

ctype_graph
bool ctype_graph(mixed c)
   Checks for any printable character(s) except space

ctype_lower
bool ctype_lower(mixed c)
   Checks for lowercase character(s)

ctype_print
bool ctype_print(mixed c)
   Checks for printable character(s)

ctype_punct
bool ctype_punct(mixed c)
   Checks for any printable character which is not whitespace
   or an alphanumeric character

ctype_space
bool ctype_space(mixed c)
   Checks for whitespace character(s)

ctype_upper
bool ctype_upper(mixed c)
   Checks for uppercase character(s)

ctype_xdigit
bool ctype_xdigit(mixed c)
   Checks for character(s) representing a hexadecimal digit

curl_close
void curl_close(resource ch)
   Close a CURL session

curl_copy_handle
resource curl_copy_handle(resource ch)
   Copy a cURL handle along with all of it's preferences

curl_errno
int curl_errno(resource ch)
   Return an integer containing the last error number

curl_error
string curl_error(resource ch)
   Return a string contain the last error for the current session

curl_exec
bool curl_exec(resource ch)
   Perform a CURL session

curl_getinfo
mixed curl_getinfo(resource ch, int opt)
   Get information regarding a specific transfer

curl_init
resource curl_init([string url])
   Initialize a CURL session

curl_setopt
bool curl_setopt(resource ch, string option, mixed value)
   Set an option for a CURL transfer

curl_version
array curl_version([int version])
   Return cURL version information.

curl_multi_add_handle
int curl_multi_add_handle(resource multi, resource ch)
   Add a normal cURL handle to a cURL multi handle

curl_multi_close
void curl_multi_close(resource mh)
   Close a set of cURL handles

curl_multi_exec
int curl_multi_exec(resource mh, int &still_running)
   Run the sub-connections of the current cURL handle

curl_multi_getcontent
string curl_multi_getcontent(resource ch)
   Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set

curl_multi_info_read
array curl_multi_info_read(resource mh)
   Get information about the current transfers

curl_multi_init
resource curl_multi_init(void)
   Returns a new cURL multi handle

curl_multi_remove_handle
int curl_multi_remove_handle(resource mh, resource ch)
   Remove a multi handle from a set of cURL handles

curl_multi_select
int curl_multi_select(resource mh[, double timeout])
   Get all the sockets associated with the cURL extension,
   which can then be "selected"

dba_close
void dba_close(resource handle)
   Closes database

dba_delete
bool dba_delete(string key, resource handle)
   Deletes the entry associated with key
   If inifile: remove all other key lines

dba_exists
bool dba_exists(string key, resource handle)
   Checks, if the specified key exists

dba_fetch
string dba_fetch(string key, [int skip ,] resource handle)
   Fetches the data associated with key

dba_firstkey
string dba_firstkey(resource handle)
   Resets the internal key pointer and returns the first key

dba_handlers
array dba_handlers([bool full_info])
   List configured database handlers

dba_insert
bool dba_insert(string key, string value, resource handle)
   If not inifile: Insert value as key, return false, if key exists already
   If inifile: Add vakue as key (next instance of key)

dba_key_split
array|false dba_key_split(string key)
   Splits an inifile key into an array
   of the form array(0=>group,1=>value_name)
   but returns false if input is false or null

dba_list
array dba_list()
   List opened databases

dba_nextkey
string dba_nextkey(resource handle)
   Returns the next key

dba_open
resource dba_open(string path, string mode [, string handlername, string ...])
   Opens path using the specified handler in mode

dba_optimize
bool dba_optimize(resource handle)
   Optimizes (e.g. clean up, vacuum) database

dba_popen
resource dba_popen(string path, string mode [, string handlername, string ...])
   Opens path using the specified handler in mode persistently

dba_replace
bool dba_replace(string key, string value, resource handle)
   Inserts value as key, replaces key, if key exists already
   If inifile: remove all other key lines

dba_sync
bool dba_sync(resource handle)
   Synchronizes database

dbase_add_record
bool dbase_add_record(int identifier, array data)
   Adds a record to the database

dbase_close
bool dbase_close(int identifier)
   Closes an open dBase-format database file

dbase_create
bool dbase_create(string filename, array fields)
   Creates a new dBase-format database file

dbase_delete_record
bool dbase_delete_record(int identifier, int record)
   Marks a record to be deleted

dbase_get_header_info
array dbase_get_header_info(int database_handle)

dbase_get_record
array dbase_get_record(int identifier, int record)
   Returns an array representing a record from the database

dbase_get_record_with_names
array dbase_get_record_with_names(int identifier, int record)
   Returns an associative array representing a record from the database

dbase_numfields
int dbase_numfields(int identifier)
   Returns the number of fields (columns) in the database

dbase_numrecords
int dbase_numrecords(int identifier)
   Returns the number of records in the database

dbase_open
int dbase_open(string name, int mode)
   Opens a dBase-format database file

dbase_pack
bool dbase_pack(int identifier)
   Packs the database (deletes records marked for deletion)

dbase_replace_record
bool dbase_replace_record(int identifier, array data, int recnum)
   Replaces a record to the database

dbx_close
int dbx_close(dbx_link_object dbx_link)
   Returns success or failure

dbx_compare
int dbx_compare(array row_x, array row_y, string columnname [, int flags])
   Returns row_y[columnname] - row_x[columnname],
   converted to -1, 0 or 1

dbx_connect
dbx_link_object dbx_connect(string module_name, string host, string db, string username, string password [, bool persistent])
   Returns a dbx_link_object on success and returns 0 on failure

dbx_error
string dbx_error(dbx_link_object dbx_link)
   Returns success or failure

dbx_escape_string
string dbx_escape_string(dbx_link_object dbx_link, string sz)
   Returns escaped string or NULL on error

dbx_fetch_row
dbx_row dbx_fetch_row(dbx_query_object dbx_q)
   Returns a row (index and assoc based on query) on success
   and returns 0 on failure or no more rows

dbx_query
dbx_result_object dbx_query(dbx_link_object dbx_link, string sql_statement [, int flags])
   Returns a dbx_link_object on success and returns 0 on failure

dbx_sort
int dbx_sort(object dbx_result, string compare_function_name)
   Returns 0 on failure, 1 on success

dio_close
void dio_close(resource fd)
   Close the file descriptor given by fd

dio_fcntl
mixed dio_fcntl(resource fd, int cmd[, mixed arg])
   Perform a c library fcntl on fd

dio_open
resource dio_open(string filename, int flags[, int mode])
   Open a new filename with specified permissions of flags
   and creation permissions of mode

dio_read
string dio_read(resource fd[, int n])
   Read n bytes from fd and return them, if n is not specified, read 1k

dio_seek
int dio_seek(resource fd, int pos, int whence)
   Seek to pos on fd from whence

dio_stat
array dio_stat(resource fd)
   Get stat information about the file descriptor fd

dio_tcsetattr
mixed dio_tcsetattr(resource fd,  array args )
   Perform a c library tcsetattr on fd

dio_truncate
bool dio_truncate(resource fd, int offset)
   Truncate file descriptor fd to offset bytes

dio_write
int dio_write(resource fd, string data[, int len])
   Write data to fd with optional truncation at length

DOMAttr::__construct
void DOMAttr::__construct(string name, [string value]);

dom_attr_is_id
boolean dom_attr_is_id();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Attr-isId
   Since: DOM Level 3

DOMCdataSection::__construct
void DOMCdataSection::__construct(string value);

dom_characterdata_append_data
void dom_characterdata_append_data(string arg);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-32791A2F

dom_characterdata_delete_data
void dom_characterdata_delete_data(long offset, long count);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-7C603781

dom_characterdata_insert_data
void dom_characterdata_insert_data(long offset, string arg);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-3EDB695F

dom_characterdata_replace_data
void dom_characterdata_replace_data(long offset, long count, string arg);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-E5CBA7FB

dom_characterdata_substring_data
string dom_characterdata_substring_data(long offset, long count);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-6531BCCF

DOMComment::__construct
void DOMComment::__construct([string value]);

DOMDocument::__construct
void DOMDocument::__construct([string version], [string encoding]);

dom_document_adopt_node
DOMNode dom_document_adopt_node(DOMNode source);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Document3-adoptNode
   Since: DOM Level 3

dom_document_create_attribute
DOMAttr dom_document_create_attribute(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1084891198

dom_document_create_attribute_ns
DOMAttr dom_document_create_attribute_ns(string namespaceURI, string qualifiedName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-DocCrAttrNS
   Since: DOM Level 2

dom_document_create_cdatasection
DOMCdataSection dom_document_create_cdatasection(string data);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-D26C0AF8

dom_document_create_comment
DOMComment dom_document_create_comment(string data);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1334481328

dom_document_create_document_fragment
DOMDocumentFragment dom_document_create_document_fragment();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-35CB04B5

dom_document_create_element
DOMElement dom_document_create_element(string tagName [, string value]);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-2141741547

dom_document_create_element_ns
DOMElement dom_document_create_element_ns(string namespaceURI, string qualifiedName [,string value]);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-DocCrElNS
   Since: DOM Level 2

dom_document_create_entity_reference
DOMEntityReference dom_document_create_entity_reference(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-392B75AE

dom_document_create_processing_instruction
DOMProcessingInstruction dom_document_create_processing_instruction(string target, string data);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-135944439

dom_document_create_text_node
DOMText dom_document_create_text_node(string data);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1975348127

dom_document_get_element_by_id
DOMElement dom_document_get_element_by_id(string elementId);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-getElBId  Since: DOM Level 2

dom_document_get_elements_by_tag_name
DOMNodeList dom_document_get_elements_by_tag_name(string tagname);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-A6C9094

dom_document_get_elements_by_tag_name_ns
DOMNodeList dom_document_get_elements_by_tag_name_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-getElBTNNS  Since: DOM Level 2

dom_document_import_node
DOMNode dom_document_import_node(DOMNode importedNode, boolean deep);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Core-Document-importNode  Since: DOM Level 2

dom_document_load
boolean|DOMNode dom_document_load(string source);
   URL: http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DocumentLS-load  Since: DOM Level 3

dom_document_load_html
boolean|DOMNode dom_document_load_html(string source);
   Since: DOM extended

dom_document_load_html_file
boolean|DOMNode dom_document_load_html_file(string source);
   Since: DOM extended

dom_document_loadxml
boolean|DOMNode dom_document_loadxml(string source);
   URL: http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DocumentLS-loadXML  Since: DOM Level 3

dom_document_normalize_document
void dom_document_normalize_document();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Document3-normalizeDocument  Since: DOM Level 3

dom_document_relaxNG_validate_file
boolean dom_document_relaxNG_validate_file(string filename);

dom_document_relaxNG_validate_xml
boolean dom_document_relaxNG_validate_xml(string source);

dom_document_rename_node
DOMNode dom_document_rename_node(node n, string namespaceURI, string qualifiedName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Document3-renameNode  Since: DOM Level 3

dom_document_save
long dom_document_save(string file);
   Convenience method to save to file

dom_document_save_html
string dom_document_save_html();
   Convenience method to output as html

dom_document_save_html_file
long dom_document_save_html_file(string file);
   Convenience method to save to file as html

dom_document_savexml
string dom_document_savexml([node n]);
   URL: http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DocumentLS-saveXML  Since: DOM Level 3

dom_document_schema_validate
boolean dom_document_schema_validate(string source);

dom_document_schema_validate_file
boolean dom_document_schema_validate_file(string filename);

dom_document_validate
boolean dom_document_validate();
   Since: DOM extended

dom_document_xinclude
int dom_document_xinclude()
   Substitutues xincludes in a DomDocument

DOMDocumentFragment::__construct
void DOMDocumentFragment::__construct();

DOMDocumentFragment::appendXML
void DOMDocumentFragment::appendXML(string data);

dom_domconfiguration_can_set_parameter
boolean dom_domconfiguration_can_set_parameter(string name, domuserdata value);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMConfiguration-canSetParameter

dom_domconfiguration_get_parameter
domdomuserdata dom_domconfiguration_get_parameter(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMConfiguration-getParameter

dom_domconfiguration_set_parameter
dom_void dom_domconfiguration_set_parameter(string name, domuserdata value);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMConfiguration-property

dom_domerrorhandler_handle_error
dom_boolean dom_domerrorhandler_handle_error(domerror error);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-ERRORS-DOMErrorHandler-handleError

dom_domimplementation_create_document
DOMDocument dom_domimplementation_create_document(string namespaceURI, string qualifiedName, DOMDocumentType doctype);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Level-2-Core-DOM-createDocument  Since: DOM Level 2

dom_domimplementation_create_document_type
DOMDocumentType dom_domimplementation_create_document_type(string qualifiedName, string publicId, string systemId);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Level-2-Core-DOM-createDocType  Since: DOM Level 2

dom_domimplementation_get_feature
DOMNode dom_domimplementation_get_feature(string feature, string version);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMImplementation3-getFeature  Since: DOM Level 3

dom_domimplementation_has_feature
boolean dom_domimplementation_has_feature(string feature, string version);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-5CED94D7

dom_domimplementationlist_item
domdomimplementation dom_domimplementationlist_item(unsigned long index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMImplementationList-item

dom_domimplementationsource_get_domimplementation
domdomimplementation dom_domimplementationsource_get_domimplementation(string features);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-getDOMImpl

dom_domimplementationsource_get_domimplementations
domimplementationlist dom_domimplementationsource_get_domimplementations(string features);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-getDOMImpls

dom_domstringlist_item
domstring dom_domstringlist_item(unsigned long index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#DOMStringList-item

DOMElement::__construct
void DOMElement::__construct(string name, [string value], [string uri]);

dom_element_get_attribute
string dom_element_get_attribute(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-666EE0F9

dom_element_get_attribute_node
DOMAttr dom_element_get_attribute_node(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-217A91B8

dom_element_get_attribute_node_ns
DOMAttr dom_element_get_attribute_node_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElGetAtNodeNS  Since: DOM Level 2

dom_element_get_attribute_ns
string dom_element_get_attribute_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElGetAttrNS  Since: DOM Level 2

dom_element_get_elements_by_tag_name
DOMNodeList dom_element_get_elements_by_tag_name(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1938918D

dom_element_get_elements_by_tag_name_ns
DOMNodeList dom_element_get_elements_by_tag_name_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-A6C90942  Since: DOM Level 2

dom_element_has_attribute
boolean dom_element_has_attribute(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElHasAttr  Since: DOM Level 2

dom_element_has_attribute_ns
boolean dom_element_has_attribute_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElHasAttrNS  Since: DOM Level 2

dom_element_remove_attribute
void dom_element_remove_attribute(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-6D6AC0F9

dom_element_remove_attribute_node
DOMAttr dom_element_remove_attribute_node(DOMAttr oldAttr);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-D589198

dom_element_remove_attribute_ns
void dom_element_remove_attribute_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElRemAtNS  Since: DOM Level 2

dom_element_set_attribute
void dom_element_set_attribute(string name, string value);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-F68F082

dom_element_set_attribute_node
DOMAttr dom_element_set_attribute_node(DOMAttr newAttr);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-887236154

dom_element_set_attribute_node_ns
DOMAttr dom_element_set_attribute_node_ns(DOMAttr newAttr);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElSetAtNodeNS  Since: DOM Level 2

dom_element_set_attribute_ns
void dom_element_set_attribute_ns(string namespaceURI, string qualifiedName, string value);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElSetAttrNS  Since: DOM Level 2

dom_element_set_id_attribute
void dom_element_set_id_attribute(string name, boolean isId);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElSetIdAttr  Since: DOM Level 3

dom_element_set_id_attribute_node
void dom_element_set_id_attribute_node(attr idAttr, boolean isId);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElSetIdAttrNode  Since: DOM Level 3

dom_element_set_id_attribute_ns
void dom_element_set_id_attribute_ns(string namespaceURI, string localName, boolean isId);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-ElSetIdAttrNS  Since: DOM Level 3

DOMEntityReference::__construct
void DOMEntityReference::__construct(string name);

dom_namednodemap_get_named_item
DOMNode dom_namednodemap_get_named_item(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1074577549

dom_namednodemap_get_named_item_ns
DOMNode dom_namednodemap_get_named_item_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-getNamedItemNS  Since: DOM Level 2

dom_namednodemap_item
DOMNode dom_namednodemap_item(int index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-349467F9

dom_namednodemap_remove_named_item
DOMNode dom_namednodemap_remove_named_item(string name);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-D58B193

dom_namednodemap_remove_named_item_ns
DOMNode dom_namednodemap_remove_named_item_ns(string namespaceURI, string localName);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-removeNamedItemNS  Since: DOM Level 2

dom_namednodemap_set_named_item
DOMNode dom_namednodemap_set_named_item(DOMNode arg);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1025163788

dom_namednodemap_set_named_item_ns
DOMNode dom_namednodemap_set_named_item_ns(DOMNode arg);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-setNamedItemNS  Since: DOM Level 2

dom_namelist_get_name
string dom_namelist_get_name(int index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#NameList-getName

dom_namelist_get_namespace_uri
string dom_namelist_get_namespace_uri(int index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#NameList-getNamespaceURI

dom_node_append_child
DomNode dom_node_append_child(DomNode newChild);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-184E7107

dom_node_clone_node
DomNode dom_node_clone_node(boolean deep);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-3A0ED0A4

dom_node_compare_document_position
short dom_node_compare_document_position(DomNode other);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-compareDocumentPosition  Since: DOM Level 3

dom_node_get_feature
DomNode dom_node_get_feature(string feature, string version);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-getFeature  Since: DOM Level 3

dom_node_get_user_data
DomUserData dom_node_get_user_data(string key);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-getUserData  Since: DOM Level 3

dom_node_has_attributes
boolean dom_node_has_attributes();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-NodeHasAttrs  Since: DOM Level 2

dom_node_has_child_nodes
boolean dom_node_has_child_nodes();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-810594187

dom_node_insert_before
domnode dom_node_insert_before(DomNode newChild, DomNode refChild);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-952280727

dom_node_is_default_namespace
boolean dom_node_is_default_namespace(string namespaceURI);
   URL: http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace  Since: DOM Level 3

dom_node_is_equal_node
boolean dom_node_is_equal_node(DomNode arg);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-isEqualNode  Since: DOM Level 3

dom_node_is_same_node
boolean dom_node_is_same_node(DomNode other);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-isSameNode  Since: DOM Level 3

dom_node_is_supported
boolean dom_node_is_supported(string feature, string version);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Level-2-Core-Node-supports  Since: DOM Level 2

dom_node_lookup_namespace_uri
string dom_node_lookup_namespace_uri(string prefix);
   URL: http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI  Since: DOM Level 3

dom_node_lookup_prefix
string dom_node_lookup_prefix(string namespaceURI);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-lookupNamespacePrefix  Since: DOM Level 3

dom_node_normalize
void dom_node_normalize();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-normalize

dom_node_remove_child
DomNode dom_node_remove_child(DomNode oldChild);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-1734834066

dom_node_replace_child
DomNode dom_node_replace_child(DomNode newChild, DomNode oldChild);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-785887307

dom_node_set_user_data
DomUserData dom_node_set_user_data(string key, DomUserData data, userdatahandler handler);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#Node3-setUserData  Since: DOM Level 3

dom_nodelist_item
DOMNode dom_nodelist_item(int index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-844377136

dom_import_simplexml
somNode dom_import_simplexml(sxeobject node)
   Get a simplexml_element object from dom to allow for processing

DOMProcessingInstruction::__construct
void DOMProcessingInstruction::__construct(string name, [string value]);

dom_string_extend_find_offset16
int dom_string_extend_find_offset16(int offset32);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#i18n-methods-StringExtend-findOffset16

dom_string_extend_find_offset32
int dom_string_extend_find_offset32(int offset16);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#i18n-methods-StringExtend-findOffset32

DOMText::__construct
void DOMText::__construct([string value]);

dom_text_is_whitespace_in_element_content
boolean dom_text_is_whitespace_in_element_content();
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Text3-isWhitespaceInElementContent  Since: DOM Level 3

dom_text_replace_whole_text
DOMText dom_text_replace_whole_text(string content);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-Text3-replaceWholeText  Since: DOM Level 3

dom_text_split_text
DOMText dom_text_split_text(int offset);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#core-ID-38853C1D

dom_userdatahandler_handle
dom_void dom_userdatahandler_handle(unsigned short operation, string key, domobject data, node src, node dst);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#ID-handleUserDataEvent

DOMXPath::__construct
void DOMXPath::__construct(DOMDocument doc);

dom_xpath_query
DOMNodeList dom_xpath_query(string expr [,DOMNode context]);

dom_xpath_register_ns
boolean dom_xpath_register_ns(string prefix, string uri);

exif_imagetype
int exif_imagetype(string imagefile)
   Get the type of an image

exif_read_data
array exif_read_data(string filename [, sections_needed [, sub_arrays[, read_thumbnail]]])
   Reads header data from the JPEG/TIFF image filename
   and optionally reads the internal thumbnails

exif_tagname
string exif_tagname(index)
   Get headername for index or false if not defined

exif_thumbnail
string exif_thumbnail(string filename [, &width, &height [, &imagetype]])
   Reads the embedded thumbnail

fam_cancel_monitor
bool fam_cancel_monitor(resource id, resource monitor_id)
   Terminate monitoring

fam_close
void fam_close(resource id)
   Close FAM connection

fam_monitor_collection
resource fam_monitor_collection(resource id, string dirname, int depth, string mask)
   Monitor a collection of files in a directory for changes

fam_monitor_directory
resource fam_monitor_directory(resource id, string dirname)
   Monitor a directory for changes

fam_monitor_file
resource fam_monitor_file(resource id, string filename)
   Monitor a regular file for changes

fam_next_event
array fam_next_event(resource id)
   Get next pending FAM event

fam_open
resource fam_open([string appname])
   Open FAM connection

fam_pending
int fam_pending(resource id)
   Check for pending FAM events

fam_resume_monitor
bool fam_resume_monitor(resource id, resource monitor_id)
   Resume suspended monitoring

fam_suspend_monitor
bool fam_suspend_monitor(resource id, resource monitor_id)
   Temporary suspend monitoring

fbsql_affected_rows
int fbsql_affected_rows([resource link_identifier])
   Get the number of rows affected by the last statement

fbsql_autocommit
bool fbsql_autocommit(resource link_identifier [, bool OnOff])
   Turns on auto-commit

fbsql_blob_size
int fbsql_blob_size(string blob_handle [, resource link_identifier])
   Get the size of a BLOB identified by blob_handle

fbsql_change_user
int fbsql_change_user(string user, string password [, string database [, resource link_identifier]])
   Change the user for a session

fbsql_clob_size
int fbsql_clob_size(string clob_handle [, resource link_identifier])
   Get the size of a CLOB identified by clob_handle

fbsql_close
bool fbsql_close([resource link_identifier])
   Close a connection to a database server

fbsql_commit
bool fbsql_commit([resource link_identifier])
   Commit the transaction

fbsql_connect
resource fbsql_connect([string hostname [, string username [, string password]]])
   Create a connection to a database server

fbsql_create_blob
string fbsql_create_blob(string blob_data [, resource link_identifier])
   Create a BLOB in the database for use with an insert or update statement

fbsql_create_clob
string fbsql_create_clob(string clob_data [, resource link_identifier])
   Create a CLOB in the database for use with an insert or update statement

fbsql_create_db
bool fbsql_create_db(string database_name [, resource link_identifier])
   Create a new database on the server

fbsql_data_seek
bool fbsql_data_seek(int result, int row_number)
   Move the internal row counter to the specified row_number

fbsql_database
string fbsql_database(resource link_identifier [, string database])
   Get or set the database name used with a connection

fbsql_database_password
string fbsql_database_password(resource link_identifier [, string database_password])
   Get or set the databsae password used with a connection

fbsql_db_query
resource fbsql_db_query(string database_name, string query [, resource link_identifier])
   Send one or more SQL statements to a specified database on the server

fbsql_db_status
int fbsql_db_status(string database_name [, resource link_identifier])
   Gets the status (Stopped, Starting, Running, Stopping)
   for a given database

fbsql_drop_db
int fbsql_drop_db(string database_name [, resource link_identifier])
   Drop a database on the server

fbsql_errno
int fbsql_errno([resource link_identifier])
   Returns the last error code

fbsql_error
string fbsql_error([resource link_identifier])
   Returns the last error string

fbsql_fetch_array
array fbsql_fetch_array(resource result [, int result_type])
   Fetches a result row as an array (associative, numeric or both)

fbsql_fetch_assoc
object fbsql_fetch_assoc(resource result)
   Detch a row of data. Returns an assoc array

fbsql_fetch_field
object fbsql_fetch_field(int result [, int field_index])
   Get the field properties for a specified field_index

fbsql_fetch_lengths
array fbsql_fetch_lengths(int result)
   Returns an array of the lengths of each column in the result set

fbsql_fetch_object
object fbsql_fetch_object(resource result [, int result_type])
   Fetch a row of data. Returns an object

fbsql_fetch_row
array fbsql_fetch_row(resource result)
   Fetch a row of data. Returns an indexed array

fbsql_field_flags
string fbsql_field_flags(int result [, int field_index])
   ???

fbsql_field_len
mixed fbsql_field_len(int result [, int field_index])
   Get the column length for a specified field_index

fbsql_field_name
string fbsql_field_name(int result [, int field_index])
   Get the column name for a specified field_index

fbsql_field_seek
bool fbsql_field_seek(int result [, int field_index])
   ???

fbsql_field_table
string fbsql_field_table(int result [, int field_index])
   Get the table name for a specified field_index

fbsql_field_type
string fbsql_field_type(int result [, int field_index])
   Get the field type for a specified field_index

fbsql_free_result
bool fbsql_free_result(resource result)
   free the memory used to store a result

fbsql_get_autostart_info
array fbsql_get_autostart_info([resource link_identifier])
   ???

fbsql_hostname
string fbsql_hostname(resource link_identifier [, string host_name])
   Get or set the host name used with a connection

fbsql_insert_id
int fbsql_insert_id([resource link_identifier])
   Get the internal index for the last insert statement

fbsql_list_dbs
resource fbsql_list_dbs([resource link_identifier])
   Retreive a list of all databases on the server

fbsql_list_fields
resource fbsql_list_fields(string database_name, string table_name [, resource link_identifier])
   Retrieve a list of all fields for the specified database.table

fbsql_list_tables
resource fbsql_list_tables(string database [, int link_identifier])
   Retreive a list of all tables from the specifoied database

fbsql_next_result
bool fbsql_next_result(int result)
   Switch to the next result if multiple results are available

fbsql_num_fields
int fbsql_num_fields(int result)
   Get number of fields in the result set

fbsql_num_rows
int fbsql_num_rows(int result)
   Get number of rows

fbsql_password
string fbsql_password(resource link_identifier [, string password])
   Get or set the user password used with a connection

fbsql_pconnect
resource fbsql_pconnect([string hostname [, string username [, string password]]])
   Create a persistant connection to a database server

fbsql_query
resource fbsql_query(string query [, resource link_identifier [, long batch_size]])
   Send one or more SQL statements to the server and execute them

fbsql_read_blob
string fbsql_read_blob(string blob_handle [, resource link_identifier])
   Read the BLOB data identified by blob_handle

fbsql_read_clob
string fbsql_read_clob(string clob_handle [, resource link_identifier])
   Read the CLOB data identified by clob_handle

fbsql_result
mixed fbsql_result(int result [, int row [, mixed field]])
   ???

fbsql_rollback
bool fbsql_rollback([resource link_identifier])
   Rollback all statments since last commit

fbsql_select_db
bool fbsql_select_db([string database_name [, resource link_identifier]])
   Select the database to open

fbsql_set_lob_mode
bool fbsql_set_lob_mode(resource result, int lob_mode)
   Sets the mode for how LOB data re retreived
   (actual data or a handle)

fbsql_set_password
bool fbsql_set_password(resource link_identifier, string user, string password, string old_password)
   Change the password for a given user

fbsql_set_transaction
void fbsql_set_transaction(resource link_identifier, int locking, int isolation)
   Sets the transaction locking and isolation

fbsql_start_db
bool fbsql_start_db(string database_name [, resource link_identifier [, string database_options]])
   Start a database on the server

fbsql_stop_db
bool fbsql_stop_db(string database_name [, resource link_identifier])
   Stop a database on the server

fbsql_table_name
string fbsql_table_name(resource result, int index)
   Retreive the table name for index after a call to fbsql_list_tables()

fbsql_username
string fbsql_username(resource link_identifier [, string username])
   Get or set the host user used with a connection

fbsql_warnings
bool fbsql_warnings([int flag])
   Enable or disable FrontBase warnings

fdf_add_doc_javascript
bool fdf_add_doc_javascript(resource fdfdoc, string scriptname, string script)
   Add javascript code to the fdf file

fdf_add_template
bool fdf_add_template(resource fdfdoc, int newpage, string filename, string template, int rename)
   Adds a template into the FDF document

fdf_close
void fdf_close(resource fdfdoc)
   Closes the FDF document

fdf_create
resource fdf_create(void)
   Creates a new FDF document

fdf_enum_values
bool fdf_enum_values(resource fdfdoc, callback function [, mixed userdata])
   Call a user defined function for each document value

fdf_errno
int fdf_errno(void)
   Gets error code for last operation

fdf_error
string fdf_error([int errno])
   Gets error description for error code

fdf_get_ap
bool fdf_get_ap(resource fdfdoc, string fieldname, int face, string filename)
   Gets the appearance of a field and creates a PDF document out of it.

fdf_get_attachment
array fdf_get_attachment(resource fdfdoc, string fieldname, string savepath)
   Get attached uploaded file

fdf_get_encoding
string fdf_get_encoding(resource fdf)
   Gets FDF file encoding scheme

fdf_get_file
string fdf_get_file(resource fdfdoc)
   Gets the value of /F key

fdf_get_flags
int fdf_get_flags(resorce fdfdoc, string fieldname, int whichflags)
   Gets the flags of a field

fdf_get_opt
mixed fdf_get_opt(resource fdfdof, string fieldname [, int element])
   Gets a value from the opt array of a field

fdf_get_status
string fdf_get_status(resource fdfdoc)
   Gets the value of /Status key

fdf_get_value
string fdf_get_value(resource fdfdoc, string fieldname [, int which])
   Gets the value of a field as string

fdf_get_version
string fdf_get_version([resource fdfdoc])
   Gets version number for FDF api or file

fdf_header
void fdf_header(void)
   Set FDF specific HTTP headers

fdf_next_field_name
string fdf_next_field_name(resource fdfdoc [, string fieldname])
   Gets the name of the next field name or the first field name

fdf_open
resource fdf_open(string filename)
   Opens a new FDF document

fdf_open_string
resource fdf_open_string(string fdf_data)
   Opens a new FDF document from string

fdf_remove_item
bool fdf_remove_item(resource fdfdoc, string fieldname, int item)
   Sets target frame for form

fdf_save
bool fdf_save(resource fdfdoc [, string filename])
   Writes out the FDF file

fdf_save_string
string fdf_save_string(resource fdfdoc)
   Returns the FDF file as a string

fdf_set_ap
bool fdf_set_ap(resource fdfdoc, string fieldname, int face, string filename, int pagenr)
   Sets the appearence of a field

fdf_set_encoding
bool fdf_set_encoding(resource fdf_document, string encoding)
   Sets FDF encoding (either "Shift-JIS" or "Unicode")

fdf_set_file
bool fdf_set_file(resource fdfdoc, string filename [, string target_frame])
   Sets the value of /F key

fdf_set_flags
bool fdf_set_flags(resource fdfdoc, string fieldname, int whichflags, int newflags)
   Sets flags for a field in the FDF document

fdf_set_javascript_action
bool fdf_set_javascript_action(resource fdfdoc, string fieldname, int whichtrigger, string script)
   Sets the javascript action for a field

fdf_set_on_import_javascript
bool fdf_set_on_import_javascript(resource fdfdoc, string script [, bool before_data_import])
   Adds javascript code to be executed when Acrobat opens the FDF

fdf_set_opt
bool fdf_set_opt(resource fdfdoc, string fieldname, int element, string value, string name)
   Sets a value in the opt array for a field

fdf_set_status
bool fdf_set_status(resource fdfdoc, string status)
   Sets the value of /Status key

fdf_set_submit_form_action
bool fdf_set_submit_form_action(resource fdfdoc, string fieldname, int whichtrigger, string url, int flags)
   Sets the submit form action for a field

fdf_set_target_frame
bool fdf_set_target_frame(resource fdfdoc, string target)
   Sets target frame for form

fdf_set_value
bool fdf_set_value(resource fdfdoc, string fieldname, mixed value [, int isname])
   Sets the value of a field

fdf_set_version
bool fdf_set_version(resourece fdfdoc, string version)
   Sets FDF version for a file

filepro
bool filepro(string directory)
   Read and verify the map file

filepro_fieldcount
int filepro_fieldcount(void)
   Find out how many fields are in a filePro database

filepro_fieldname
string filepro_fieldname(int fieldnumber)
   Gets the name of a field

filepro_fieldtype
string filepro_fieldtype(int field_number)
   Gets the type of a field

filepro_fieldwidth
int filepro_fieldwidth(int field_number)
   Gets the width of a field

filepro_retrieve
string filepro_retrieve(int row_number, int field_number)
   Retrieves data from a filePro database

filepro_rowcount
int filepro_rowcount(void)
   Find out how many rows are in a filePro database

ftp_alloc
bool ftp_alloc(resource stream, int size[, &response])
   Attempt to allocate space on the remote FTP server

ftp_cdup
bool ftp_cdup(resource stream)
   Changes to the parent directory

ftp_chdir
bool ftp_chdir(resource stream, string directory)
   Changes directories

ftp_chmod
int ftp_chmod(resource stream, int mode, string filename)
   Sets permissions on a file

ftp_close
bool ftp_close(resource stream)
   Closes the FTP stream

ftp_connect
resource ftp_connect(string host [, int port [, int timeout]])
   Opens a FTP stream

ftp_delete
bool ftp_delete(resource stream, string file)
   Deletes a file

ftp_exec
bool ftp_exec(resource stream, string command)
   Requests execution of a program on the FTP server

ftp_fget
bool ftp_fget(resource stream, resource fp, string remote_file, int mode [, int resumepos])
   Retrieves a file from the FTP server and writes it to an open file

ftp_fput
bool ftp_fput(resource stream, string remote_file, resource fp, int mode [, int startpos])
   Stores a file from an open file to the FTP server

ftp_get
bool ftp_get(resource stream, string local_file, string remote_file, int mode [, int resume_pos])
   Retrieves a file from the FTP server and writes it to a local file

ftp_get_option
mixed ftp_get_option(resource stream, int option)
   Gets an FTP option

ftp_login
bool ftp_login(resource stream, string username, string password)
   Logs into the FTP server

ftp_mdtm
int ftp_mdtm(resource stream, string filename)
   Returns the last modification time of the file, or -1 on error

ftp_mkdir
string ftp_mkdir(resource stream, string directory)
   Creates a directory and returns the absolute path
   for the new directory or false on error

ftp_nb_continue
int ftp_nb_continue(resource stream)
   Continues retrieving/sending a file nbronously

ftp_nb_fget
int ftp_nb_fget(resource stream, resource fp, string remote_file, int mode [, int resumepos])
   Retrieves a file from the FTP server asynchronly
   and writes it to an open file

ftp_nb_fput
int ftp_nb_fput(resource stream, string remote_file, resource fp, int mode [, int startpos])
   Stores a file from an open file to the FTP server nbronly

ftp_nb_get
int ftp_nb_get(resource stream, string local_file, string remote_file, int mode [, int resume_pos])
   Retrieves a file from the FTP server nbhronly
   and writes it to a local file

ftp_nb_put
int ftp_nb_put(resource stream, string remote_file, string local_file, int mode [, int startpos])
   Stores a file on the FTP server

ftp_nlist
array ftp_nlist(resource stream, string directory)
   Returns an array of filenames in the given directory

ftp_pasv
bool ftp_pasv(resource stream, bool pasv)
   Turns passive mode on or off

ftp_put
bool ftp_put(resource stream, string remote_file, string local_file, int mode [, int startpos])
   Stores a file on the FTP server

ftp_pwd
string ftp_pwd(resource stream)
   Returns the present working directory

ftp_raw
array ftp_raw(resource stream, string command)
   Sends a literal command to the FTP server

ftp_rawlist
array ftp_rawlist(resource stream, string directory [, bool recursive])
   Returns a detailed listing of a directory as an array of output lines

ftp_rename
bool ftp_rename(resource stream, string src, string dest)
   Renames the given file to a new path

ftp_rmdir
bool ftp_rmdir(resource stream, string directory)
   Removes a directory

ftp_set_option
bool ftp_set_option(resource stream, int option, mixed value)
   Sets an FTP option

ftp_site
bool ftp_site(resource stream, string cmd)
   Sends a SITE command to the server

ftp_size
int ftp_size(resource stream, string filename)
   Returns the size of the file, or -1 on error

ftp_ssl_connect
resource ftp_ssl_connect(string host [, int port [, int timeout]])
   Opens a FTP-SSL stream

ftp_systype
string ftp_systype(resource stream)
   Returns the system type identifier

gd_info
array gd_info()

image2wbmp
bool image2wbmp(resource im [, string filename [, int threshold]])
   Output WBMP image to browser or file

imagealphablending
bool imagealphablending(resource im, bool on)
   Turn alpha blending mode on or off for the given image

imageantialias
bool imageantialias(resource im, bool on)
   Should antialiased functions used or not

imagearc
bool imagearc(resource im, int cx, int cy, int w, int h, int s, int e, int col)
   Draw a partial ellipse

imagechar
bool imagechar(resource im, int font, int x, int y, string c, int col)
   Draw a character

imagecharup
bool imagecharup(resource im, int font, int x, int y, string c, int col)
   Draw a character rotated 90 degrees counter-clockwise

imagecolorallocate
int imagecolorallocate(resource im, int red, int green, int blue)
   Allocate a color for an image

imagecolorallocatealpha
int imagecolorallocatealpha(resource im, int red, int green, int blue, int alpha)
   Allocate a color with an alpha level.
   Works for true color and palette based images

imagecolorat
int imagecolorat(resource im, int x, int y)
   Get the index of the color of a pixel

imagecolorclosest
int imagecolorclosest(resource im, int red, int green, int blue)
   Get the index of the closest color to the specified color

imagecolorclosestalpha
int imagecolorclosestalpha(resource im, int red, int green, int blue, int alpha)
   Find the closest matching colour with alpha transparency

imagecolorclosesthwb
int imagecolorclosesthwb(resource im, int red, int green, int blue)
   Get the index of the color which has the hue,
   white and blackness nearest to the given color

imagecolordeallocate
bool imagecolordeallocate(resource im, int index)
   De-allocate a color for an image

imagecolorexact
int imagecolorexact(resource im, int red, int green, int blue)
   Get the index of the specified color

imagecolorexactalpha
int imagecolorexactalpha(resource im, int red, int green, int blue, int alpha)
   Find exact match for colour with transparency

imagecolormatch
bool imagecolormatch(resource im1, resource im2)
   Makes the colors of the palette version of
   an image more closely match the true color version

imagecolorresolve
int imagecolorresolve(resource im, int red, int green, int blue)
   Get the index of the specified color or its closest possible alternative

imagecolorresolvealpha
int imagecolorresolvealpha(resource im, int red, int green, int blue, int alpha)
   Resolve/Allocate a colour with an alpha level.
   Works for true colour and palette based images

imagecolorset
void imagecolorset(resource im, int col, int red, int green, int blue)
   Set the color for the specified palette index

imagecolorsforindex
array imagecolorsforindex(resource im, int col)
   Get the colors for an index

imagecolorstotal
int imagecolorstotal(resource im)
   Find out the number of colors in an image's palette

imagecolortransparent
int imagecolortransparent(resource im [, int col])
   Define a color as transparent

imagecopy
bool imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)
   Copy part of an image

imagecopymerge
bool imagecopymerge(resource src_im, resource dst_im, int dst_x, int dst_y,
	int src_x, int src_y, int src_w, int src_h, int pct)
   Merge one part of an image with another

imagecopymergegray
bool imagecopymergegray(resource src_im, resource dst_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
   Merge one part of an image with another

imagecopyresampled
bool imagecopyresampled(resource dst_im, resource src_im, int dst_x, int dst_y,
	int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)
   Copy and resize part of an image using resampling to help ensure clarity

imagecopyresized
bool imagecopyresized(resource dst_im, resource src_im, int dst_x, int dst_y,
	int src_x, int src_y, int dst_w, int dst_h, int src_w, int src_h)
   Copy and resize part of an image

imagecreate
resource imagecreate(int x_size, int y_size)
   Create a new image

imagecreatefromgd
resource imagecreatefromgd(string filename)
   Create a new image from GD file or URL

imagecreatefromgd2
resource imagecreatefromgd2(string filename)
   Create a new image from GD2 file or URL

imagecreatefromgd2part
resource imagecreatefromgd2part(string filename, int srcX, int srcY, int width, int height)
   Create a new image from a given part of GD2 file or URL

imagecreatefromgif
resource imagecreatefromgif(string filename)
   Create a new image from GIF file or URL

imagecreatefromjpeg
resource imagecreatefromjpeg(string filename)
   Create a new image from JPEG file or URL

imagecreatefrompng
resource imagecreatefrompng(string filename)
   Create a new image from PNG file or URL

imagecreatefromstring
resource imagecreatefromstring(string image)
   Create a new image from the image stream in the string

imagecreatefromwbmp
resource imagecreatefromwbmp(string filename)
   Create a new image from WBMP file or URL

imagecreatefromxbm
resource imagecreatefromxbm(string filename)
   Create a new image from XBM file or URL

imagecreatefromxpm
resource imagecreatefromxpm(string filename)
   Create a new image from XPM file or URL

imagecreatetruecolor
resource imagecreatetruecolor(int x_size, int y_size)
   Create a new true color image

imagedashedline
bool imagedashedline(resource im, int x1, int y1, int x2, int y2, int col)
   Draw a dashed line

imagedestroy
bool imagedestroy(resource im)
   Destroy an image

imageellipse
bool imageellipse(resource im, int cx, int cy, int w, int h, int color)
   Draw an ellipse

imagefill
bool imagefill(resource im, int x, int y, int col)
   Flood fill

imagefilledarc
bool imagefilledarc(resource im, int cx, int cy, int w, int h, int s, int e, int col, int style)
   Draw a filled partial ellipse

imagefilledellipse
bool imagefilledellipse(resource im, int cx, int cy, int w, int h, int color)
   Draw an ellipse

imagefilledpolygon
bool imagefilledpolygon(resource im, array point, int num_points, int col)
   Draw a filled polygon

imagefilledrectangle
bool imagefilledrectangle(resource im, int x1, int y1, int x2, int y2, int col)
   Draw a filled rectangle

imagefilltoborder
bool imagefilltoborder(resource im, int x, int y, int border, int col)
   Flood fill to specific color

imagefilter
bool imagefilter(resource src_im, int filtertype, [args] )
   Applies Filter an image using a custom angle

imagefontheight
int imagefontheight(int font)
   Get font height

imagefontwidth
int imagefontwidth(int font)
   Get font width

imageftbbox
array imageftbbox(int size, int angle, string font_file, string text [, array extrainfo])
   Give the bounding box of a text using fonts via freetype2

imagefttext
array imagefttext(resource im, int size, int angle, int x, int y, int col, string font_file, string text, [array extrainfo])
   Write text to the image using fonts via freetype2

imagegammacorrect
bool imagegammacorrect(resource im, float inputgamma, float outputgamma)
   Apply a gamma correction to a GD image

imagegd
bool imagegd(resource im [, string filename])
   Output GD image to browser or file

imagegd2
bool imagegd2(resource im [, string filename, [, int chunk_size, [, int type]]])
   Output GD2 image to browser or file

imagegif
bool imagegif(resource im [, string filename])
   Output GIF image to browser or file

imageinterlace
int imageinterlace(resource im [, int interlace])
   Enable or disable interlace

imageistruecolor
bool imageistruecolor(resource im)
   return true if the image uses truecolor

imagejpeg
bool imagejpeg(resource im [, string filename [, int quality]])
   Output JPEG image to browser or file

imagelayereffect
bool imagelayereffect(resource im, int effect)
   Set the alpha blending flag to use the bundled libgd layering effects

imageline
bool imageline(resource im, int x1, int y1, int x2, int y2, int col)
   Draw a line

imageloadfont
int imageloadfont(string filename)
   Load a new font

imagepalettecopy
void imagepalettecopy(resource dst, resource src)
   Copy the palette from the src image onto the dst image

imagepng
bool imagepng(resource im [, string filename])
   Output PNG image to browser or file

imagepolygon
bool imagepolygon(resource im, array point, int num_points, int col)
   Draw a polygon

imagepsbbox
array imagepsbbox(string text, resource font, int size [, int space, int tightness, int angle])
   Return the bounding box needed by a string if rasterized

imagepscopyfont
int imagepscopyfont(int font_index)
   Make a copy of a font for purposes like extending or reenconding

imagepsencodefont
bool imagepsencodefont(resource font_index, string filename)
   To change a fonts character encoding vector

imagepsextendfont
bool imagepsextendfont(resource font_index, float extend)
   Extend or or condense (if extend < 1) a font

imagepsfreefont
bool imagepsfreefont(resource font_index)
   Free memory used by a font

imagepsloadfont
resource imagepsloadfont(string pathname)
   Load a new font from specified file

imagepsslantfont
bool imagepsslantfont(resource font_index, float slant)
   Slant a font

imagepstext
array imagepstext(resource image, string text, resource font, int size, int xcoord, int ycoord
	[, int space, int tightness, float angle, int antialias])
   Rasterize a string over an image

imagerectangle
bool imagerectangle(resource im, int x1, int y1, int x2, int y2, int col)
   Draw a rectangle

imagerotate
resource imagerotate(resource src_im, float angle, int bgdcolor)
   Rotate an image using a custom angle

imagesavealpha
bool imagesavealpha(resource im, bool on)
   Include alpha channel to a saved image

imagesetbrush
bool imagesetbrush(resource image, resource brush)
   Set the brush image to $brush when filling $image
   with the "IMG_COLOR_BRUSHED" color

imagesetpixel
bool imagesetpixel(resource im, int x, int y, int col)
   Set a single pixel

imagesetstyle
bool imagesetstyle(resource im, array styles)
   Set the line drawing styles for use with imageline and IMG_COLOR_STYLED.

imagesetthickness
bool imagesetthickness(resource im, int thickness)
   Set line thickness for drawing lines, ellipses, rectangles, polygons etc.

imagesettile
bool imagesettile(resource image, resource tile)
   Set the tile image to $tile when filling $image
   with the "IMG_COLOR_TILED" color

imagestring
bool imagestring(resource im, int font, int x, int y, string str, int col)
   Draw a string horizontally

imagestringup
bool imagestringup(resource im, int font, int x, int y, string str, int col)
   Draw a string vertically - rotated 90 degrees counter-clockwise

imagesx
int imagesx(resource im)
   Get image width

imagesy
int imagesy(resource im)
   Get image height

imagetruecolortopalette
void imagetruecolortopalette(resource im, bool ditherFlag, int colorsWanted)
   Convert a true colour image to a palette based image
   with a number of colours, optionally using dithering.

imagettfbbox
array imagettfbbox(int size, int angle, string font_file, string text)
   Give the bounding box of a text using TrueType fonts

imagettftext
array imagettftext(resource im, int size, int angle, int x, int y, int col, string font_file, string text)
   Write text to the image using a TrueType font

imagetypes
int imagetypes(void)
   Return the types of images supported in a bitfield -
   1=GIF, 2=JPEG, 4=PNG, 8=WBMP, 16=XPM

imagewbmp
bool imagewbmp(resource im [, string filename, [, int foreground]])
   Output WBMP image to browser or file

imagexbm
int imagexbm(int im, string filename [, int foreground])
   Output XBM image to browser or file

jpeg2wbmp
bool jpeg2wbmp(string f_org, string f_dest, int d_height, int d_width, int threshold)
   Convert JPEG image to WBMP image

png2wbmp
bool png2wbmp(string f_org, string f_dest, int d_height, int d_width, int threshold)
   Convert PNG image to WBMP image

bind_textdomain_codeset
string bind_textdomain_codeset(string domain, string codeset)
   Specify the character encoding in which the messages
   from the DOMAIN message catalog will be returned.

bindtextdomain
string bindtextdomain(string domain_name, string dir)
   Bind to the text domain domain_name,
   looking for translations in dir.
   Returns the current domain

dcgettext
string dcgettext(string domain_name, string msgid, long category)
   Return the translation of msgid for domain_name and category,
   or msgid unaltered if a translation does not exist

dcngettext
string dcngettext(string domain, string msgid1, string msgid2, int n, int category)
   Plural version of dcgettext()

dgettext
string dgettext(string domain_name, string msgid)
   Return the translation of msgid for domain_name,
   or msgid unaltered if a translation does not exist

dngettext
string dngettext(string domain, string msgid1, string msgid2, int count)
   Plural version of dgettext()

gettext
string gettext(string msgid)
   Return the translation of msgid for the current domain,
   or msgid unaltered if a translation does not exist

ngettext
string ngettext(string MSGID1, string MSGID2, int N)
   Plural version of gettext()

textdomain
string textdomain(string domain)
   Set the textdomain to "domain". Returns the current domain

gmp_abs
resource gmp_abs(resource a)
   Calculates absolute value

gmp_add
resource gmp_add(resource a, resource b)
   Add a and b

gmp_and
resource gmp_and(resource a, resource b)
   Calculates logical AND of a and b

gmp_clrbit
void gmp_clrbit(resource &a, int index)
   Clears bit in a

gmp_cmp
int gmp_cmp(resource a, resource b)
   Compares two numbers

gmp_com
resource gmp_com(resource a)
   Calculates one's complement of a

gmp_div_q
resource gmp_div_q(resource a, resource b [, int round])
   Divide a by b, returns quotient only

gmp_div_qr
array gmp_div_qr(resource a, resource b [, int round])
   Divide a by b, returns quotient and reminder

gmp_div_r
resource gmp_div_r(resource a, resource b [, int round])
   Divide a by b, returns reminder only

gmp_divexact
resource gmp_divexact(resource a, resource b)
   Divide a by b using exact division algorithm

gmp_fact
resource gmp_fact(int a)
   Calculates factorial function

gmp_gcd
resource gmp_gcd(resource a, resource b)
   Computes greatest common denominator (gcd) of a and b

gmp_gcdext
array gmp_gcdext(resource a, resource b)
   Computes G, S, and T, such that AS      BT = G = `gcd' (A, B)

gmp_hamdist
int gmp_hamdist(resource a, resource b)
   Calculates hamming distance between a and b

gmp_init
resource gmp_init(mixed number [, int base])
   Initializes GMP number

gmp_intval
int gmp_intval(resource gmpnumber)
   Gets signed long value of GMP number

gmp_invert
resource gmp_invert(resource a, resource b)
   Computes the inverse of a modulo b

gmp_jacobi
int gmp_jacobi(resource a, resource b)
   Computes Jacobi symbol

gmp_legendre
int gmp_legendre(resource a, resource b)
   Computes Legendre symbol

gmp_mod
resource gmp_mod(resource a, resource b)
   Computes a modulo b

gmp_mul
resource gmp_mul(resource a, resource b)
   Multiply a and b

gmp_neg
resource gmp_neg(resource a)
   Negates a number

gmp_or
resource gmp_or(resource a, resource b)
   Calculates logical OR of a and b

gmp_perfect_square
bool gmp_perfect_square(resource a)
   Checks if a is an exact square

gmp_popcount
int gmp_popcount(resource a)
   Calculates the population count of a

gmp_pow
resource gmp_pow(resource base, int exp)
   Raise base to power exp

gmp_powm
resource gmp_powm(resource base, resource exp, resource mod)
   Raise base to power exp and take result modulo mod

gmp_prob_prime
int gmp_prob_prime(resource a[, int reps])
   Checks if a is "probably prime"

gmp_random
resource gmp_random([int limiter])
   Gets random number

gmp_scan0
int gmp_scan0(resource a, int start)
   Finds first zero bit

gmp_scan1
int gmp_scan1(resource a, int start)
   Finds first non-zero bit

gmp_setbit
void gmp_setbit(resource &a, int index[, bool set_clear])
   Sets or clear bit in a

gmp_sign
int gmp_sign(resource a)
   Gets the sign of the number

gmp_sqrt
resource gmp_sqrt(resource a)
   Takes integer part of square root of a

gmp_sqrtrem
array gmp_sqrtrem(resource a)
   Square root with remainder

gmp_strval
string gmp_strval(resource gmpnumber [, int base])
   Gets string representation of GMP number

gmp_sub
resource gmp_sub(resource a, resource b)
   Subtract b from a

gmp_xor
resource gmp_xor(resource a, resource b)
   Calculates logical exclusive OR of a and b

iconv
string iconv(string in_charset, string out_charset, string str)
   Returns str converted to the out_charset character set

iconv_get_encoding
mixed iconv_get_encoding([string type])
   Get internal encoding and output encoding for ob_iconv_handler()

iconv_mime_decode
string iconv_mime_decode(string encoded_string [, int mode, string charset])
   Decodes a mime header field

iconv_mime_decode_headers
array iconv_mime_decode_headers(string headers [, int mode, string charset])
   Decodes multiple mime header fields

iconv_mime_encode
string iconv_mime_encode(string field_name, string field_value [, array preference])
   Composes a mime header field with field_name
   and field_value in a specified scheme

iconv_set_encoding
bool iconv_set_encoding(string type, string charset)
   Sets internal encoding and output encoding for ob_iconv_handler()

iconv_strlen
int iconv_strlen(string str [, string charset])
   Returns the character count of str

iconv_strpos
int iconv_strpos(string haystack, string needle, int offset [, string charset])
   Finds position of first occurrence of needle
   within part of haystack beginning with offset

iconv_strrpos
int iconv_strrpos(string haystack, string needle [, string charset])
   Finds position of last occurrence of needle
   within part of haystack beginning with offset

iconv_substr
string iconv_substr(string str, int offset, [int length, string charset])
   Returns specified part of a string

ob_iconv_handler
string ob_iconv_handler(string contents, int status)
   Returns str in output buffer converted to
   the iconv.output_encoding character set

imap_8bit
string imap_8bit(string text)
   Convert an 8-bit string to a quoted-printable string

imap_alerts
array imap_alerts(void)
   Returns an array of all IMAP alerts that have been
   generated since the last page load or since the
   last imap_alerts() call, whichever came last.
   The alert stack is cleared after imap_alerts() is called.

imap_append
bool imap_append(resource stream_id, string folder, string message [, string options])
   Append a new message to a specified mailbox

imap_base64
string imap_base64(string text)
   Decode BASE64 encoded text

imap_binary
string imap_binary(string text)
   Convert an 8bit string to a base64 string

imap_body
string imap_body(resource stream_id, int msg_no [, int options])
   Read the message body

imap_bodystruct
object imap_bodystruct(resource stream_id, int msg_no, int section)
   Read the structure of a specified body section of a specific message

imap_check
object imap_check(resource stream_id)
   Get mailbox properties

imap_clearflag_full
bool imap_clearflag_full(resource stream_id, string sequence, string flag [, int options])
   Clears flags on messages

imap_close
bool imap_close(resource stream_id [, int options])
   Close an IMAP stream

imap_createmailbox
bool imap_createmailbox(resource stream_id, string mailbox)
   Create a new mailbox

imap_delete
bool imap_delete(resource stream_id, int msg_no [, int options])
   Mark a message for deletion

imap_deletemailbox
bool imap_deletemailbox(resource stream_id, string mailbox)
   Delete a mailbox

imap_errors
array imap_errors(void)
   Returns an array of all IMAP errors generated
   since the last page load, or since the last
   imap_errors() call, whichever came last.
   The error stack is cleared after imap_errors() is called.

imap_expunge
bool imap_expunge(resource stream_id)
   Permanently delete all messages marked for deletion

imap_fetch_overview
array imap_fetch_overview(resource stream_id, int msg_no [, int options])
   Read an overview of the information in
   the headers of the given message sequence

imap_fetchbody
string imap_fetchbody(resource stream_id, int msg_no, int section [, int options])
   Get a specific body section

imap_fetchheader
string imap_fetchheader(resource stream_id, int msg_no [, int options])
   Get the full unfiltered header for a message

imap_fetchstructure
object imap_fetchstructure(resource stream_id, int msg_no [, int options])
   Read the full structure of a message

imap_get_quota
array imap_get_quota(resource stream_id, string qroot)
   Returns the quota set to the mailbox account qroot

imap_get_quotaroot
array imap_get_quotaroot(resource stream_id, string mbox)
   Returns the quota set to the mailbox account mbox

imap_getacl
array imap_getacl(resource stream_id, string mailbox)
   Gets the ACL for a given mailbox

imap_getmailboxes
array imap_getmailboxes(resource stream_id, string ref, string pattern)
   Reads the list of mailboxes and returns a full array
   of objects containing name, attributes, and delimiter

imap_getsubscribed
array imap_getsubscribed(resource stream_id, string ref, string pattern)
   Return a list of subscribed mailboxes,
   in the same format as imap_getmailboxes()

imap_headerinfo
object imap_headerinfo(resource stream_id, int msg_no [, int from_length [, int subject_length [, string default_host]]])
   Read the headers of the message

imap_headers
array imap_headers(resource stream_id)
   Returns headers for all messages in a mailbox

imap_last_error
string imap_last_error(void)
   Returns the last error that was generated by an IMAP function.
   The error stack is NOT cleared after this call.

imap_list
array imap_list(resource stream_id, string ref, string pattern)
   Read the list of mailboxes

imap_lsub
array imap_lsub(resource stream_id, string ref, string pattern)
   Return a list of subscribed mailboxes

imap_mail
bool imap_mail(string to, string subject, string message
	[, string additional_headers [, string cc [, string bcc [, string rpath]]]])
   Send an email message

imap_mail_compose
string imap_mail_compose(array envelope, array body)
   Create a MIME message based on given envelope and body sections

imap_mail_copy
bool imap_mail_copy(resource stream_id, int msg_no, string mailbox [, int options])
   Copy specified message to a mailbox

imap_mail_move
bool imap_mail_move(resource stream_id, int msg_no, string mailbox [, int options])
   Move specified message to a mailbox

imap_mailboxmsginfo
object imap_mailboxmsginfo(resource stream_id)
   Returns info about the current mailbox

imap_mime_header_decode
array imap_mime_header_decode(string str)
   Decode mime header element in accordance with RFC 2047
   and return array of objects containing 'charset' encoding
   and decoded 'text'

imap_msgno
int imap_msgno(resource stream_id, int unique_msg_id)
   Get the sequence number associated with a UID

imap_num_msg
int imap_num_msg(resource stream_id)
   Gives the number of messages in the current mailbox

imap_num_recent
int imap_num_recent(resource stream_id)
   Gives the number of recent messages in current mailbox

imap_open
resource imap_open(string mailbox, string user, string password [, int options])
   Open an IMAP stream to a mailbox

imap_ping
bool imap_ping(resource stream_id)
   Check if the IMAP stream is still active

imap_qprint
string imap_qprint(string text)
   Convert a quoted-printable string to an 8-bit string

imap_renamemailbox
bool imap_renamemailbox(resource stream_id, string old_name, string new_name)
   Rename a mailbox

imap_reopen
bool imap_reopen(resource stream_id, string mailbox [, int options])
   Reopen an IMAP stream to a new mailbox

imap_rfc822_parse_adrlist
array imap_rfc822_parse_adrlist(string address_string, string default_host)
   Parses an address string

imap_rfc822_parse_headers
object imap_rfc822_parse_headers(string headers [, string default_host])
   Parse a set of mail headers contained in a string,
   and return an object similar to imap_headerinfo()

imap_rfc822_write_address
string imap_rfc822_write_address(string mailbox, string host, string personal)
   Returns a properly formatted email address
   given the mailbox, host, and personal info

imap_scan
array imap_scan(resource stream_id, string ref, string pattern, string content)
   Read list of mailboxes containing a certain string

imap_search
array imap_search(resource stream_id, string criteria [, int options [, string charset]])
   Return a list of messages matching the given criteria

imap_set_quota
bool imap_set_quota(resource stream_id, string qroot, int mailbox_size)
   Will set the quota for qroot mailbox

imap_setacl
bool imap_setacl(resource stream_id, string mailbox, string id, string rights)
   Sets the ACL for a given mailbox

imap_setflag_full
bool imap_setflag_full(resource stream_id, string sequence, string flag [, int options])
   Sets flags on messages

imap_sort
array imap_sort(resource stream_id, int criteria, int reverse
	[, int options [, string search_criteria [, string charset]]])
   Sort an array of message headers, optionally including
   only messages that meet specified criteria.

imap_status
object imap_status(resource stream_id, string mailbox, int options)
   Get status info from a mailbox

imap_subscribe
bool imap_subscribe(resource stream_id, string mailbox)
   Subscribe to a mailbox

imap_thread
array imap_thread(resource stream_id [, int options])
   Return threaded by REFERENCES tree

imap_timeout
mixed imap_timeout(int timeout_type [, int timeout])
   Set or fetch imap timeout

imap_uid
int imap_uid(resource stream_id, int msg_no)
   Get the unique message id associated with
   a standard sequential message number

imap_undelete
bool imap_undelete(resource stream_id, int msg_no)
   Remove the delete flag from a message

imap_unsubscribe
bool imap_unsubscribe(resource stream_id, string mailbox)
   Unsubscribe from a mailbox

imap_utf7_decode
string imap_utf7_decode(string buf)
   Decode a modified UTF-7 string

imap_utf7_encode
string imap_utf7_encode(string buf)
   Encode a string in modified UTF-7

imap_utf8
string imap_utf8(string mime_encoded_text)
   Convert a mime-encoded text to UTF-8

ifx_affected_rows
int ifx_affected_rows(resource resultid)
   Returns the number of rows affected by query identified by resultid

ifx_blobinfile_mode
bool ifx_blobinfile_mode(int mode)
   Sets the default blob-mode for all select-queries

ifx_byteasvarchar
bool ifx_byteasvarchar(int mode)
   Sets the default byte-mode for all select-queries

ifx_close
bool ifx_close([resource connid])
   Close informix connection

ifx_connect
resource ifx_connect([string database [, string userid [, string password]]])
   Connects to database using userid/password, returns connection id

ifx_copy_blob
int ifx_copy_blob(int bid)
   Duplicates the given blob-object

ifx_create_blob
int ifx_create_blob(int type, int mode, string param)
   Creates a blob-object

ifx_create_char
int ifx_create_char(string param)
   Creates a char-object

ifx_do
bool ifx_do(resource resultid)
   Executes a previously prepared query or opens a cursor for it

ifx_error
string ifx_error([resource connection_id])
   Returns the Informix error codes (SQLSTATE & SQLCODE)

ifx_errormsg
string ifx_errormsg([int errorcode])
   Returns the Informix errormessage associated with

ifx_fetch_row
array ifx_fetch_row(resource resultid [, mixed position])
   Fetches the next row or <position> row if using a scroll cursor

ifx_fieldproperties
array ifx_fieldproperties(resource resultid)
   Returns an associative for query <resultid> array with fieldnames as key

ifx_fieldtypes
array ifx_fieldtypes(resource resultid)
   Returns an associative array with
   fieldnames as key for query <resultid>

ifx_free_blob
int ifx_free_blob(int bid)
   Deletes the blob-object

ifx_free_char
bool ifx_free_char(int bid)
   Deletes the char-object

ifx_free_result
bool ifx_free_result(resource resultid)
   Releases resources for query associated with resultid

ifx_get_blob
string ifx_get_blob(int bid)
   Returns the content of the blob-object

ifx_get_char
string ifx_get_char(int bid)
   Returns the content of the char-object

ifx_getsqlca
array ifx_getsqlca(resource resultid)
   Returns the sqlerrd[] fields of the sqlca struct for query resultid

ifx_htmltbl_result
int ifx_htmltbl_result(resource resultid [, string htmltableoptions])
   Formats all rows of the resultid query into a html table

ifx_nullformat
bool ifx_nullformat(int mode)
   Sets the default return value of a NULL-value on a fetch-row

ifx_num_fields
int ifx_num_fields(resource resultid)
   Returns the number of columns in query resultid

ifx_num_rows
int ifx_num_rows(resource resultid)
   Returns the number of rows already
   fetched for query identified by resultid

ifx_pconnect
resource ifx_pconnect([string database [, string userid [, string password]]])
   Connects to database using userid/password,
   returns connection id

ifx_prepare
resource ifx_prepare(string query, resource connid [, int cursortype] [, array idarray])
   Prepare a query on a given connection

ifx_query
resource ifx_query(string query, resource connid [, int cursortype] [, array idarray])
   Perform a query on a given connection

ifx_textasvarchar
bool ifx_textasvarchar(int mode)
   Sets the default text-mode for all select-queries

ifx_update_blob
int ifx_update_blob(int bid, string content)
   Updates the content of the blob-object

ifx_update_char
bool ifx_update_char(int bid, string content)
   Updates the content of the char-object

ifxus_close_slob
bool ifxus_close_slob(int bid)
   Deletes the slob-object

ifxus_create_slob
int ifxus_create_slob(int mode)
   Creates a slob-object and opens it

ifxus_free_slob
bool ifxus_free_slob(int bid)
   Deletes the slob-object

ifxus_open_slob
int ifxus_open_slob(int bid, int mode)
   Opens an slob-object

ifxus_read_slob
string ifxus_read_slob(int bid, int nbytes)
   Reads nbytes of the slob-object

ifxus_seek_slob
int ifxus_seek_slob(int bid, int mode, long offset)
   Sets the current file or seek position of an open slob-object

ifxus_tell_slob
int ifxus_tell_slob(int bid)
   Returns the current file or seek position of an open slob-object

ifxus_write_slob
int ifxus_write_slob(int bid, string content)
   Writes a string into the slob-object

ingres_autocommit
bool ingres_autocommit([resource link])
   Switch autocommit on or off

ingres_close
bool ingres_close([resource link])
   Close an Ingres II database connection

ingres_commit
bool ingres_commit([resource link])
   Commit a transaction

ingres_connect
resource ingres_connect([string database [, string username [, string password]]])
   Open a connection to an Ingres II database the syntax of
   database is [node_id::]dbname[/svr_class]

ingres_fetch_array
array ingres_fetch_array([int result_type [, resource link]])
   Fetch a row of result into an array result_type can be
   II_NUM for enumerated array, II_ASSOC for associative array,
   or II_BOTH (default)

ingres_fetch_object
array ingres_fetch_object([int result_type [, resource link]])
   Fetch a row of result into an object result_type
   can be II_NUM for enumerated object,
   II_ASSOC for associative object, or II_BOTH (default)

ingres_fetch_row
array ingres_fetch_row([resource link])
   Fetch a row of result into an enumerated array

ingres_field_length
string ingres_field_length(int index [, resource link])
   Return the length of a field in a query result index
   must be >0 and <= ingres_num_fields()

ingres_field_name
string ingres_field_name(int index [, resource link])
   Return the name of a field in a query result index
   must be >0 and <= ingres_num_fields()

ingres_field_nullable
string ingres_field_nullable(int index [, resource link])
   Return true if the field is nullable and false otherwise
   index must be >0 and <= ingres_num_fields()

ingres_field_precision
string ingres_field_precision(int index [, resource link])
   Return the precision of a field in a query result index
   must be >0 and <= ingres_num_fields()

ingres_field_scale
string ingres_field_scale(int index [, resource link])
   Return the scale of a field in a query result index
   must be >0 and <= ingres_num_fields()

ingres_field_type
string ingres_field_type(int index [, resource link])
   Return the type of a field in a query result index
   must be >0 and <= ingres_num_fields()

ingres_num_fields
int ingres_num_fields([resource link])
   Return the number of fields returned by the last query

ingres_num_rows
int ingres_num_rows([resource link])
   Return the number of rows affected/returned by the last query

ingres_pconnect
resource ingres_pconnect([string database [, string username [, string password]]])
   Open a persistent connection to an Ingres II database
   the syntax of database is [node_id::]dbname[/svr_class]

ingres_query
bool ingres_query(string query [, resource link])
   Send a SQL query to Ingres II

ingres_rollback
bool ingres_rollback([resource link])
   Roll back a transaction

ibase_blob_add
bool ibase_blob_add(resource blob_handle, string data)
   Add data into created blob

ibase_blob_cancel
bool ibase_blob_cancel(resource blob_handle)
   Cancel creating blob

ibase_blob_close
string ibase_blob_close(resource blob_handle)
   Close blob

ibase_blob_create
resource ibase_blob_create([resource link_identifier])
   Create blob for adding data

ibase_blob_echo
bool ibase_blob_echo([ resource link_identifier, ] string blob_id)
   Output blob contents to browser

ibase_blob_get
string ibase_blob_get(resource blob_handle, int len)
   Get len bytes data from open blob

ibase_blob_import
string ibase_blob_import([ resource link_identifier, ] resource file)
   Create blob, copy file in it, and close it

ibase_blob_info
array ibase_blob_info([ resource link_identifier, ] string blob_id)
   Return blob length and other useful info

ibase_blob_open
resource ibase_blob_open([ resource link_identifier, ] string blob_id)
   Open blob for retrieving data parts

ibase_free_event_handler
bool ibase_free_event_handler(resource event)
   Frees the event handler set by ibase_set_event_handler()

ibase_set_event_handler
resource ibase_set_event_handler([resource link_identifier,] callback handler, string event [, string event [, ...]])
   Register the callback for handling each of the named events

ibase_wait_event
string ibase_wait_event([resource link_identifier,] string event [, string event [, ...]])
   Waits for any one of the passed Interbase events to
   be posted by the database, and returns its name

ibase_affected_rows
int ibase_affected_rows( [ resource link_identifier ] )
   Returns the number of rows affected by the previous
   INSERT, UPDATE or DELETE statement

ibase_execute
mixed ibase_execute(resource query [, mixed bind_arg [, mixed bind_arg [, ...]]])
   Execute a previously prepared query

ibase_fetch_assoc
array ibase_fetch_assoc(resource result [, int fetch_flags])
   Fetch a row  from the results of a query

ibase_fetch_object
object ibase_fetch_object(resource result [, int fetch_flags])
   Fetch a object from the results of a query

ibase_fetch_row
array ibase_fetch_row(resource result [, int fetch_flags])
   Fetch a row  from the results of a query

ibase_field_info
array ibase_field_info(resource query_result, int field_number)
   Get information about a field

ibase_free_query
bool ibase_free_query(resource query)
   Free memory used by a query

ibase_free_result
bool ibase_free_result(resource result)
   Free the memory used by a result

ibase_name_result
bool ibase_name_result(resource result, string name)
   Assign a name to a result for use with ...
   WHERE CURRENT OF <name> statements

ibase_num_fields
int ibase_num_fields(resource query_result)
   Get the number of fields in result

ibase_num_params
int ibase_num_params(resource query)
   Get the number of params in a prepared query

ibase_num_rows
int ibase_num_rows( resource result_identifier )
   Return the number of rows that are available in a result

ibase_param_info
array ibase_param_info(resource query, int field_number)
   Get information about a parameter

ibase_prepare
resource ibase_prepare([resource link_identifier, ] string query)
   Prepare a query for later execution

ibase_query
mixed ibase_query([resource link_identifier, [ resource link_identifier, ]] string query [, mixed bind_arg [, mixed bind_arg [, ...]]])
   Execute a query

ibase_add_user
bool ibase_add_user(resource service_handle, string user_name, string password
	[, string first_name [, string middle_name [, string last_name]]])
   Add a user to security database

ibase_backup
mixed ibase_backup(resource service_handle, string source_db, string dest_file [, int options [, bool verbose]])
   Initiates a backup task in the service manager and returns immediately

ibase_db_info
string ibase_db_info(resource service_handle, string db, int action [, int argument])
   Request statistics about a database

ibase_delete_user
bool ibase_delete_user(resource service_handle, string user_name, string password
	[, string first_name [, string middle_name [, string last_name]]])
   Delete a user from security database

ibase_maintain_db
bool ibase_maintain_db(resource service_handle, string db, int action [, int argument])
   Execute a maintenance command on the database server

ibase_modify_user
bool ibase_modify_user(resource service_handle, string user_name, string password
	[, string first_name [, string middle_name [, string last_name]]])
   Modify a user in security database

ibase_restore
mixed ibase_restore(resource service_handle, string source_file, string dest_db [, int options [, bool verbose]])
   Initiates a restore task in the service manager
   and returns immediately

ibase_server_info
string ibase_server_info(resource service_handle, int action)
   Request information about a database server

ibase_service_attach
resource ibase_service_attach(string host, string dba_username, string dba_password)
   Connect to the service manager

ibase_service_detach
bool ibase_service_detach(resource service_handle)
   Disconnect from the service manager

ibase_close
bool ibase_close([resource link_identifier])
   Close an InterBase connection

ibase_commit
bool ibase_commit( resource link_identifier )
   Commit transaction

ibase_commit_ret
bool ibase_commit_ret( resource link_identifier )
   Commit transaction and retain the transaction context

ibase_connect
resource ibase_connect(string database [, string username [, string password
	[, string charset [, int buffers [, int dialect [, string role]]]]]])
   Open a connection to an InterBase database

ibase_drop_db
bool ibase_drop_db([resource link_identifier])
   Drop an InterBase database

ibase_errcode
int ibase_errcode(void)
   Return error code

ibase_errmsg
string ibase_errmsg(void)
   Return error message

ibase_gen_id
int ibase_gen_id(string generator [, int increment [, resource link_identifier ]])
   Increments the named generator and returns its new value

ibase_pconnect
resource ibase_pconnect(string database [, string username [, string password
	[, string charset [, int buffers [, int dialect [, string role]]]]]])
   Open a persistent connection to an InterBase database

ibase_rollback
bool ibase_rollback( resource link_identifier )
   Rollback transaction

ibase_rollback_ret
bool ibase_rollback_ret( resource link_identifier )
   Rollback transaction and retain the transaction context

ibase_trans
resource ibase_trans([int trans_args [, resource link_identifier [, ... ],
	int trans_args [, resource link_identifier [, ... ]] [, ...]]])
   Start a transaction over one or several databases

ircg_channel_mode
bool ircg_channel_mode(int connection, string channel, string mode_spec, string nick)
   Sets channel mode flags for user

ircg_disconnect
bool ircg_disconnect(int connection, string reason)
   Terminate IRC connection

ircg_eval_ecmascript_params
array ircg_eval_ecmascript_params(string params)
   Decodes a list of JS-encoded parameters into a native array

ircg_fetch_error_msg
array ircg_fetch_error_msg(int connection)
   Returns the error from previous ircg operation

ircg_get_username
string ircg_get_username(int connection)
   Gets username for connection

ircg_html_encode
string ircg_html_encode(string html_text)
   Encodes HTML preserving output

ircg_ignore_add
bool ircg_ignore_add(resource connection, string nick)
   Adds a user to your ignore list on a server

ircg_ignore_del
bool ircg_ignore_del(int connection, string nick)
   Removes a user from your ignore list

ircg_invite
bool ircg_invite(int connection, string channel, string nickname)
   INVITEs nickname to channel

ircg_is_conn_alive
bool ircg_is_conn_alive(int connection)
   Checks connection status

ircg_join
bool ircg_join(int connection, string channel [, string chan-key])
   Joins a channel on a connected server

ircg_kick
bool ircg_kick(int connection, string channel, string nick, string reason)
   Kicks user from channel

ircg_list
bool ircg_list(int connection, string channel)
   List topic/user count of channel(s)

ircg_lookup_format_messages
bool ircg_lookup_format_messages(string name)
   Selects a set of format strings for display of IRC messages

ircg_lusers
bool ircg_lusers(int connection)
   IRC network statistics

ircg_msg
bool ircg_msg(int connection, string recipient, string message [,bool loop-suppress])
   Delivers a message to the IRC network

ircg_names
bool ircg_names( int connection, string channel [, string target])
   Queries visible usernames

ircg_nick
bool ircg_nick(int connection, string newnick)
   Changes the nickname

ircg_nickname_escape
string ircg_nickname_escape(string nick)
   Escapes special characters in nickname to be IRC-compliant

ircg_nickname_unescape
string ircg_nickname_unescape(string nick)
   Decodes encoded nickname

ircg_notice
bool ircg_notice(int connection, string recipient, string message)
   Sends a one-way communication NOTICE to a target

ircg_oper
bool ircg_oper(int connection, string name, string password)
   Elevates privileges to IRC OPER

ircg_part
bool ircg_part(int connection, string channel)
   Leaves a channel

ircg_pconnect
int ircg_pconnect(string username [, string server [, int port
	[, string format-msg-set-name [, array ctcp-set [, array user-details [, bool bailout-on-trivial]]]]]])
   Create a persistent IRC connection

ircg_register_format_messages
bool ircg_register_format_messages(string name, array messages)
   Registers a set of format strings for display of IRC messages

ircg_set_current
bool ircg_set_current(int connection)
   Sets current connection for output

ircg_set_file
bool ircg_set_file(int connection, string path)
   Sets logfile for connection

ircg_set_on_die
bool ircg_set_on_die(int connection, string host, int port, string data)
   Sets hostaction to be executed when connection dies

ircg_set_on_read_data
bool ircg_set_on_read_data(int connection, string host, int port, string data)
   Set action to be executed when data is received from a HTTP client

ircg_topic
bool ircg_topic(int connection, string channel, string topic)
   Sets topic for channel

ircg_who
bool ircg_who(int connection, string mask [, bool ops_only])
   Queries server for WHO information

ircg_whois
bool ircg_whois( int connection, string nick)
   Queries user information for nick on server

ldap_rebind_proc
_ldap_rebind_proc()

ldap_8859_to_t61
string ldap_8859_to_t61(string value)
   Translate 8859 characters to t61 characters

ldap_add
bool ldap_add(resource link, string dn, array entry)
   Add entries to LDAP directory

ldap_bind
bool ldap_bind(resource link [, string dn, string password])
   Bind to LDAP directory

ldap_compare
bool ldap_compare(resource link, string dn, string attr, string value)
   Determine if an entry has a specific value for one of its attributes

ldap_connect
resource ldap_connect([string host [, int port]])
   Connect to an LDAP server

ldap_count_entries
int ldap_count_entries(resource link, resource result)
   Count the number of entries in a search result

ldap_delete
bool ldap_delete(resource link, string dn)
   Delete an entry from a directory

ldap_dn2ufn
string ldap_dn2ufn(string dn)
   Convert DN to User Friendly Naming format

ldap_err2str
string ldap_err2str(int errno)
   Convert error number to error string

ldap_errno
int ldap_errno(resource link)
   Get the current ldap error number

ldap_error
string ldap_error(resource link)
   Get the current ldap error string

ldap_explode_dn
array ldap_explode_dn(string dn, int with_attrib)
   Splits DN into its component parts

ldap_first_attribute
string ldap_first_attribute(resource link, resource result_entry, int ber)
   Return first attribute

ldap_first_entry
resource ldap_first_entry(resource link, resource result)
   Return first result id

ldap_first_reference
resource ldap_first_reference(resource link, resource result)
   Return first reference

ldap_free_result
bool ldap_free_result(resource result)
   Free result memory

ldap_get_attributes
array ldap_get_attributes(resource link, resource result_entry)
   Get attributes from a search result entry

ldap_get_dn
string ldap_get_dn(resource link, resource result_entry)
   Get the DN of a result entry

ldap_get_entries
array ldap_get_entries(resource link, resource result)
   Get all result entries

ldap_get_option
bool ldap_get_option(resource link, int option, mixed retval)
   Get the current value of various session-wide parameters

ldap_get_values
array ldap_get_values(resource link, resource result_entry, string attribute)
   Get all values from a result entry

ldap_get_values_len
array ldap_get_values_len(resource link, resource result_entry, string attribute)
   Get all values with lengths from a result entry

ldap_list
resource ldap_list(resource link, string base_dn, string filter
	[, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])
   Single-level search

ldap_mod_add
bool ldap_mod_add(resource link, string dn, array entry)
   Add attribute values to current

ldap_mod_del
bool ldap_mod_del(resource link, string dn, array entry)
   Delete attribute values

ldap_mod_replace
bool ldap_mod_replace(resource link, string dn, array entry)
   Replace attribute values with new ones

ldap_next_attribute
string ldap_next_attribute(resource link, resource result_entry, resource ber)
   Get the next attribute in result

ldap_next_entry
resource ldap_next_entry(resource link, resource result_entry)
   Get next result entry

ldap_next_reference
resource ldap_next_reference(resource link, resource reference_entry)
   Get next reference

ldap_parse_reference
bool ldap_parse_reference(resource link, resource reference_entry, array referrals)
   Extract information from reference entry

ldap_parse_result
bool ldap_parse_result(resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals)
   Extract information from result

ldap_read
resource ldap_read(resource link, string base_dn, string filter
	[, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])
   Read an entry

ldap_rename
bool ldap_rename(resource link, string dn, string newrdn, string newparent, bool deleteoldrdn);
   Modify the name of an entry

ldap_sasl_bind
bool ldap_sasl_bind(resource link)
   Bind to LDAP directory using SASL

ldap_search
resource ldap_search(resource link, string base_dn, string filter
	[, array attrs [, int attrsonly [, int sizelimit [, int timelimit [, int deref]]]]])
   Search LDAP tree under base_dn

ldap_set_option
bool ldap_set_option(resource link, int option, mixed newval)
   Set the value of various session-wide parameters

ldap_set_rebind_proc
bool ldap_set_rebind_proc(resource link, string callback)
   Set a callback function to do re-binds on referral chasing.

ldap_sort
bool ldap_sort(resource link, resource result, string sortfilter)
   Sort LDAP result entries

ldap_start_tls
bool ldap_start_tls(resource link)
   Start TLS

ldap_t61_to_8859
string ldap_t61_to_8859(string value)
   Translate t61 characters to 8859 characters

ldap_unbind
bool ldap_unbind(resource link)
   Unbind from LDAP directory

libxml_set_streams_context
void libxml_set_streams_context(resource streams_context)
   Set the streams context for the next libxml document load or write

mb_convert_case
string mb_convert_case(string sourcestring, int mode [, string encoding])
   Returns a case-folded version of sourcestring

mb_convert_encoding
string mb_convert_encoding(string str, string to-encoding [, mixed from-encoding])
   Returns converted string in desired encoding

mb_convert_kana
string mb_convert_kana(string str [, string option] [, string encoding])
   Conversion between full-width character
   and half-width character (Japanese)

mb_convert_variables
string mb_convert_variables(string to-encoding, mixed from-encoding [, mixed ...])
   Converts the string resource in variables to desired encoding

mb_decode_mimeheader
string mb_decode_mimeheader(string string)
   Decodes the MIME "encoded-word" in the string

mb_decode_numericentity
string mb_decode_numericentity(string string, array convmap [, string encoding])
   Converts HTML numeric entities to character code

mb_detect_encoding
string mb_detect_encoding(string str [, mixed encoding_list [, bool strict]])
   Encodings of the given string is returned (as a string)

mb_detect_order
bool|array mb_detect_order([mixed encoding-list])
   Sets the current detect_order or
   Return the current detect_order as a array

mb_encode_mimeheader
string mb_encode_mimeheader(string str [, string charset [, string transfer-encoding [, string linefeed]]])
   Converts the string to MIME "encoded-word"
   in the format of =?charset?(B|Q)?encoded_string?=

mb_encode_numericentity
string mb_encode_numericentity(string string, array convmap [, string encoding])
   Converts specified characters to HTML numeric entities

mb_get_info
string mb_get_info([string type])
   Returns the current settings of mbstring

mb_http_input
mixed mb_http_input([string type])
   Returns the input encoding

mb_http_output
string mb_http_output([string encoding])
   Sets the current output_encoding or
   returns the current output_encoding as a string

mb_internal_encoding
string mb_internal_encoding([string encoding])
   Sets the current internal encoding or
   Returns the current internal encoding as a string

mb_language
string mb_language([string language])
   Sets the current language or Returns the current language as a string

mb_list_encodings
array mb_list_encodings()
   Returns an array of all supported encodings

mb_output_handler
string mb_output_handler(string contents, int status)
   Returns string in output buffer converted to the http_output encoding

mb_parse_str
bool mb_parse_str(string encoded_string [, array result])
   Parses GET/POST/COOKIE data and sets global variables

mb_preferred_mime_name
string mb_preferred_mime_name(string encoding)
   Return the preferred MIME name (charset) as a string

mb_send_mail
int mb_send_mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])
   Sends an email message with MIME scheme

mb_strcut
string mb_strcut(string str, int start [, int length [, string encoding]])
   Returns part of a string

mb_strimwidth
string mb_strimwidth(string str, int start, int width [, string trimmarker [, string encoding]])
   Trim the string in terminal width

mb_strlen
int mb_strlen(string str [, string encoding])
   Get character numbers of a string

mb_strpos
int mb_strpos(string haystack, string needle [, int offset [, string encoding]])
   Find position of first occurrence of a string within another

mb_strrpos
int mb_strrpos(string haystack, string needle [, string encoding])
   Find the last occurrence of a character in a string within another

mb_strtolower
string mb_strtolower(string sourcestring [, string encoding])
   *  Returns a lowercased version of sourcestring

mb_strtoupper
string mb_strtoupper(string sourcestring [, string encoding])
   *  Returns a uppercased version of sourcestring

mb_strwidth
int mb_strwidth(string str [, string encoding])
   Gets terminal width of a string

mb_substitute_character
mixed mb_substitute_character([mixed substchar])
   Sets the current substitute_character
   or returns the current substitute_character

mb_substr
string mb_substr(string str, int start [, int length [, string encoding]])
   Returns part of a string

mb_substr_count
int mb_substr_count(string haystack, string needle [, string encoding])
   Count the number of substring occurrences

mb_ereg
int mb_ereg(string pattern, string string [, array registers])
   Regular expression match for multibyte string

mb_ereg_match
bool mb_ereg_match(string pattern, string string [,string option])
   Regular expression match for multibyte string

mb_ereg_replace
string mb_ereg_replace(string pattern, string replacement, string string [, string option])
   Replace regular expression for multibyte string

mb_ereg_search
bool mb_ereg_search([string pattern[, string option]])
   Regular expression search for multibyte string

mb_ereg_search_getpos
int mb_ereg_search_getpos(void)
   Get search start position

mb_ereg_search_getregs
array mb_ereg_search_getregs(void)
   Get matched substring of the last time

mb_ereg_search_init
bool mb_ereg_search_init(string string [, string pattern[, string option]])
   Initialize string and regular expression for search.

mb_ereg_search_pos
array mb_ereg_search_pos([string pattern[, string option]])
   Regular expression search for multibyte string

mb_ereg_search_regs
array mb_ereg_search_regs([string pattern[, string option]])
   Regular expression search for multibyte string

mb_ereg_search_setpos
bool mb_ereg_search_setpos(int position)
   Set search start position

mb_eregi
int mb_eregi(string pattern, string string [, array registers])
   Case-insensitive regular expression match for multibyte string

mb_eregi_replace
string mb_eregi_replace(string pattern, string replacement, string string)
   Case insensitive replace regular expression for multibyte string

mb_regex_encoding
string mb_regex_encoding([string encoding])
   Returns the current encoding for regex as a string.

mb_regex_set_options
string mb_regex_set_options([string options])
   Set or get the default options for mbregex functions

mb_split
array mb_split(string pattern, string string [, int limit])
   split multibyte string into array by regular expression

mcrypt_cbc
string mcrypt_cbc(int cipher, string key, string data, int mode, string iv)
   CBC crypt/decrypt data using key key
   with cipher cipher starting with iv

mcrypt_cfb
string mcrypt_cfb(int cipher, string key, string data, int mode, string iv)
   CFB crypt/decrypt data using key key
   with cipher cipher starting with iv

mcrypt_create_iv
string mcrypt_create_iv(int size, int source)
   Create an initialization vector (IV)

mcrypt_decrypt
string mcrypt_decrypt(string cipher, string key, string data, string mode, string iv)
   OFB crypt/decrypt data using key key
   with cipher cipher starting with iv

mcrypt_ecb
string mcrypt_ecb(int cipher, string key, string data, int mode, string iv)
   ECB crypt/decrypt data using key key
   with cipher cipher starting with iv

mcrypt_enc_get_algorithms_name
string mcrypt_enc_get_algorithms_name(resource td)
   Returns the name of the algorithm
   specified by the descriptor td

mcrypt_enc_get_block_size
int mcrypt_enc_get_block_size(resource td)
   Returns the block size of the cipher
   specified by the descriptor td

mcrypt_enc_get_iv_size
int mcrypt_enc_get_iv_size(resource td)
   Returns the size of the IV in bytes
   of the algorithm specified by the descriptor td

mcrypt_enc_get_key_size
int mcrypt_enc_get_key_size(resource td)
   Returns the maximum supported key size in bytes
   of the algorithm specified by the descriptor td

mcrypt_enc_get_modes_name
string mcrypt_enc_get_modes_name(resource td)
   Returns the name of the mode specified by the descriptor td

mcrypt_enc_get_supported_key_sizes
array mcrypt_enc_get_supported_key_sizes(resource td)
   This function decrypts the crypttext

mcrypt_enc_is_block_algorithm
bool mcrypt_enc_is_block_algorithm(resource td)
   Returns TRUE if the alrogithm is a block algorithms

mcrypt_enc_is_block_algorithm_mode
bool mcrypt_enc_is_block_algorithm_mode(resource td)
   Returns TRUE if the mode is for use with block algorithms

mcrypt_enc_is_block_mode
bool mcrypt_enc_is_block_mode(resource td)
   Returns TRUE if the mode outputs blocks

mcrypt_enc_self_test
int mcrypt_enc_self_test(resource td)
   This function runs the self test on the algorithm
   specified by the descriptor td

mcrypt_encrypt
string mcrypt_encrypt(string cipher, string key, string data, string mode, string iv)
   OFB crypt/decrypt data using key key
   with cipher cipher starting with iv

mcrypt_generic
string mcrypt_generic(resource td, string data)
   This function encrypts the plaintext

mcrypt_generic_deinit
bool mcrypt_generic_deinit(resource td)
   This function terminates encrypt specified by the descriptor td

mcrypt_generic_end
bool mcrypt_generic_end(resource td)
   This function terminates encrypt specified by the descriptor td

mcrypt_generic_init
int mcrypt_generic_init(resource td, string key, string iv)
   This function initializes all buffers for the specific module

mcrypt_get_block_size
int mcrypt_get_block_size(string cipher, string module)
   Get the key size of cipher

mcrypt_get_cipher_name
string mcrypt_get_cipher_name(string cipher)
   Get the key size of cipher

mcrypt_get_iv_size
int mcrypt_get_iv_size(string cipher, string module)
   Get the IV size of cipher (Usually the same as the blocksize)

mcrypt_get_key_size
int mcrypt_get_key_size(string cipher, string module)
   Get the key size of cipher

mcrypt_list_algorithms
array mcrypt_list_algorithms([string lib_dir])
   List all algorithms in "module_dir"

mcrypt_list_modes
array mcrypt_list_modes([string lib_dir])
   List all modes "module_dir"

mcrypt_module_close
bool mcrypt_module_close(resource td)
   Free the descriptor td

mcrypt_module_get_algo_block_size
int mcrypt_module_get_algo_block_size(string algorithm [, string lib_dir])
   Returns the block size of the algorithm

mcrypt_module_get_algo_key_size
int mcrypt_module_get_algo_key_size(string algorithm [, string lib_dir])
   Returns the maximum supported key size of the algorithm

mcrypt_module_get_supported_key_sizes
array mcrypt_module_get_supported_key_sizes(string algorithm [, string lib_dir])
   This function decrypts the crypttext

mcrypt_module_is_block_algorithm
bool mcrypt_module_is_block_algorithm(string algorithm [, string lib_dir])
   Returns TRUE if the algorithm is a block algorithm

mcrypt_module_is_block_algorithm_mode
bool mcrypt_module_is_block_algorithm_mode(string mode [, string lib_dir])
   Returns TRUE if the mode is for use with block algorithms

mcrypt_module_is_block_mode
bool mcrypt_module_is_block_mode(string mode [, string lib_dir])
   Returns TRUE if the mode outputs blocks of bytes

mcrypt_module_open
resource mcrypt_module_open(string cipher, string cipher_directory, string mode, string mode_directory)
   Opens the module of the algorithm and the mode to be used

mcrypt_module_self_test
bool mcrypt_module_self_test(string algorithm [, string lib_dir])
   Does a self test of the module "module"

mcrypt_ofb
string mcrypt_ofb(int cipher, string key, string data, int mode, string iv)
   OFB crypt/decrypt data using key key with cipher cipher starting with iv

mdecrypt_generic
string mdecrypt_generic(resource td, string data)
   This function decrypts the plaintext

m_adduser
int m_adduser(resource conn, string admin_password, int usersetup)
   Add an MCVE user using usersetup structure

m_adduserarg
int m_adduserarg(resource usersetup, int argtype, string argval)
   Add a value to user configuration structure

m_bt
int m_bt(resource conn, string username, string password)
   Get unsettled batch totals

m_checkstatus
int m_checkstatus(resource conn, int identifier)
   Check to see if a transaction has completed

m_chkpwd
int m_chkpwd(resource conn, string username, string password)
   Verify Password

m_chngpwd
int m_chngpwd(resource conn, string admin_password, string new_password)
   Change the system administrator's password

m_completeauthorizations
int m_completeauthorizations(resource conn, int &array)
   Number of complete authorizations in queue,
   returning an array of their identifiers

m_connect
int m_connect(resource conn)
   Establish the connection to MCVE

m_connectionerror
string m_connectionerror(resource conn)
   Get a textual representation of why a connection failed

m_deleteresponse
bool m_deleteresponse(resource conn, int identifier)
   Delete specified transaction from MCVE_CONN structure

m_deletetrans
bool m_deletetrans(resource conn, int identifier)
   Delete specified transaction from MCVE_CONN structure

m_deleteusersetup
void m_deleteusersetup(resource usersetup)
   Deallocate data associated with usersetup structure

m_deluser
int m_deluser(resource conn, string admin_password, string username)
   Delete an MCVE user account

m_destroyconn
void m_destroyconn(resource conn)
   Destroy the connection and MCVE_CONN structure

m_destroyengine
void m_destroyengine(void)
   Free memory associated with IP/SSL connectivity

m_disableuser
int m_disableuser(resource conn, string admin_password, string username)
   Disable an active MCVE user account

m_edituser
int m_edituser(resource conn, string admin_password, int usersetup)
   Edit MCVE user using usersetup structure

m_enableuser
int m_enableuser(resource conn, string admin_password, string username)
   Enable an inactive MCVE user account

m_force
int m_force(resiurce conn, string username, string password, string trackdata, string account, string expdate,
	float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum)
   Send a FORCE to MCVE.  (typically, a phone-authorization)

m_getcell
string m_getcell(resource conn, int identifier, string column, int row)
   Get a specific cell from a comma delimited response by column name

m_getcellbynum
string m_getcellbynum(resource conn, int identifier, int column, int row)
   Get a specific cell from a comma delimited response by column number

m_getcommadelimited
string m_getcommadelimited(resource conn, int identifier)
   Get the RAW comma delimited data returned from MCVE

m_getheader
string m_getheader(resource conn, int identifier, int column_num)
   Get the name of the column in a comma-delimited response

m_getuserarg
string m_getuserarg(resource usersetup, int argtype)
   Grab a value from usersetup structure

m_getuserparam
string m_getuserparam(resource conn, long identifier, int key)
   Get a user response parameter

m_gft
int m_gft(resource conn, string username, string password, int type, string account, string clerkid,
	string stationid, string comments, int ptrannum, string startdate, string enddate)
   Audit MCVE for Failed transactions

m_gl
int m_gl(int conn, string username, string password, int type, string account, string batch,
	string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
   Audit MCVE for settled transactions

m_gut
int m_gut(resource conn, string username, string password, int type, string account, string clerkid,
	string stationid, string comments, int ptrannum, string startdate, string enddate)
   Audit MCVE for Unsettled Transactions

m_initconn
resource m_initconn(void)
   Create and initialize an MCVE_CONN structure

m_initengine
int m_initengine(string location)
   Ready the client for IP/SSL Communication

m_initusersetup
resource m_initusersetup(void)
   Initialize structure to store user data

m_iscommadelimited
int m_iscommadelimited(resource conn, int identifier)
   Checks to see if response is comma delimited

m_liststats
int m_liststats(resource conn, string admin_password)
   List statistics for all users on MCVE system

m_listusers
int m_listusers(resource conn, string admin_password)
   List all users on MCVE system

m_maxconntimeout
bool m_maxconntimeout(resource conn, int secs)
   The maximum amount of time the API will attempt a connection to MCVE

m_monitor
int m_monitor(resource conn)
   Perform communication with MCVE (send/receive data)   Non-blocking

m_numcolumns
int m_numcolumns(resource conn, int identifier)
   Number of columns returned in a comma delimited response

m_numrows
int m_numrows(resource conn, int identifier)
   Number of rows returned in a comma delimited response

m_override
int m_override(resource conn, string username, string password, string trackdata, string account, string expdate,
	float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
   Send an OVERRIDE to MCVE

m_parsecommadelimited
int m_parsecommadelimited(resource conn, int identifier)
   Parse the comma delimited response so m_getcell, etc will work

m_ping
int m_ping(resource conn)
   Send a ping request to MCVE

m_preauth
int m_preauth(resource conn, string username, string password, string trackdata, string account, string expdate,
	float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
   Send a PREAUTHORIZATION to MCVE

m_preauthcompletion
int m_preauthcompletion(resource conn, string username, string password, float finalamount, int sid, int ptrannum)
   Complete a PREAUTHORIZATION... Ready it for settlement

m_qc
int m_qc(resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum)
   Audit MCVE for a list of transactions in the outgoing queue

m_responseparam
string m_responseparam(resource conn, long identifier, string key)
   Get a custom response parameter

m_return
int m_return(int conn, string username, string password, string trackdata, string account, string expdate,
	float amount, string comments, string clerkid, string stationid, int ptrannum)
   Issue a RETURN or CREDIT to MCVE

m_returncode
int m_returncode(resource conn, int identifier)
   Grab the exact return code from the transaction

m_returnstatus
int m_returnstatus(resource conn, int identifier)
   Check to see if the transaction was successful

m_sale
int m_sale(resource conn, string username, string password, string trackdata, string account, string expdate,
	float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
   Send a SALE to MCVE

m_setblocking
int m_setblocking(resource conn, int tf)
   Set blocking/non-blocking mode for connection

m_setdropfile
int m_setdropfile(resource conn, string directory)
   Set the connection method to Drop-File

m_setip
int m_setip(resource conn, string host, int port)
   Set the connection method to IP

m_setssl
int m_setssl(resource conn, string host, int port)
   Set the connection method to SSL

m_setssl_files
int m_setssl_files(string sslkeyfile, string sslcertfile)
   Set certificate key files and certificates if server requires
   client certificate verification

m_settimeout
int m_settimeout(resource conn, int seconds)
   Set maximum transaction time (per trans)

m_settle
int m_settle(resource conn, string username, string password, string batch)
   Issue a settlement command to do a batch deposit

m_text_avs
string m_text_avs(string code)
   Get a textual representation of the return_avs

m_text_code
string m_text_code(string code)
   Get a textual representation of the return_code

m_text_cv
string m_text_cv(int code)
   Get a textual representation of the return_cv

m_transactionauth
string m_transactionauth(resource conn, int identifier)
   Get the authorization number returned for the transaction (alpha-numeric)

m_transactionavs
int m_transactionavs(resource conn, int identifier)
   Get the Address Verification return status

m_transactionbatch
int m_transactionbatch(resource conn, int identifier)
   Get the batch number associated with the transaction

m_transactioncv
int m_transactioncv(resource conn, int identifier)
   Get the CVC2/CVV2/CID return status

m_transactionid
int m_transactionid(resource conn, int identifier)
   Get the unique system id for the transaction

m_transactionitem
int m_transactionitem(resource conn, int identifier)
   Get the ITEM number in the associated batch for this transaction

m_transactionssent
int m_transactionssent(resource conn)
   Check to see if outgoing buffer is clear

m_transactiontext
string m_transactiontext(resource conn, int identifier)
   Get verbiage (text) return from MCVE or processing institution

m_transinqueue
int m_transinqueue(resource conn)
   Number of transactions in client-queue

m_transnew
int m_transnew(resource conn)
   Start a new transaction

m_transparam
int m_transparam(resource conn, long identifier, int key, ...)
   Add a parameter to a transaction

m_transsend
int m_transsend(resource conn, long identifier)
   Finalize and send the transaction

m_ub
int m_ub(resource conn, string username, string password)
   Get a list of all Unsettled batches

m_uwait
int m_uwait(long microsecs)
   Wait x microsecs

m_verifyconnection
bool m_verifyconnection(resource conn, int tf)
   Set whether or not to PING upon connect to verify connection

m_verifysslcert
bool m_verifysslcert(resource conn, int tf)
   Set whether or not to verify the server ssl certificate

m_void
int m_void(resource conn, string username, string password, int sid, int ptrannum)
   VOID a transaction in the settlement queue

mhash
string mhash(int hash, string data [, string key])
   Hash data with hash

mhash_count
int mhash_count(void)
   Gets the number of available hashes

mhash_get_block_size
int mhash_get_block_size(int hash)
   Gets the block size of hash

mhash_get_hash_name
string mhash_get_hash_name(int hash)
   Gets the name of hash

mhash_keygen_s2k
string mhash_keygen_s2k(int hash, string input_password, string salt, int bytes)
   Generates a key using hash functions

mime_content_type
string mime_content_type(string filename|resource stream)
   Return content-type for file

ming_keypress
int ming_keypress(string str)
   Returns the action flag for keyPress(char)

ming_setcubicthreshold
void ming_setcubicthreshold(int threshold)
   Set cubic threshold (?)

ming_setscale
void ming_setscale(int scale)
   Set scale (?)

ming_useconstants
void ming_useconstants(int use)
   Use constant pool (?)

ming_useswfversion
void ming_useswfversion(int version)
   Use SWF version (?)

swfaction::__construct
object swfaction::__construct(string)
   Returns a new SWFAction object, compiling the given script

swfbitmap::__construct
class swfbitmap::__construct(mixed file [, mixed maskfile])
   Returns a new SWFBitmap object from jpg (with optional mask) or dbl file

swfbitmap::getHeight
float swfbitmap::getHeight()
   Returns the height of this bitmap

swfbitmap::getWidth
float swfbitmap::getWidth()
   Returns the width of this bitmap

swfbutton::__construct
object swfbutton::__construct()
   Returns a new SWFButton object

swfbutton::addASound
SWFSoundInstance swfbutton::addASound(SWFSound sound, int flags)
   associates a sound with a button transition
   NOTE: the transitions are all wrong _UP, _OVER, _DOWN _HIT

swfbutton::addAction
void swfbutton::addAction(object SWFAction, int flags)
   Sets the action to perform when conditions described in flags is met

swfbutton::addShape
void swfbutton::addShape(object SWFCharacter, int flags)
   Sets the character to display for the condition described in flags

swfbutton::setAction
void swfbutton::setAction(object SWFAction)
   Sets the action to perform when button is pressed

swfbutton::setDown
void swfbutton::setDown(object SWFCharacter)
   Sets the character for this button's down state

swfbutton::setHit
void swfbutton::setHit(object SWFCharacter)
   Sets the character for this button's hit test state

swfbutton::setMenu
void swfbutton::setMenu(int flag)
   enable track as menu button behaviour

swfbutton::setOver
void swfbutton::setOver(object SWFCharacter)
   Sets the character for this button's over state

swfbutton::setUp
void swfbutton::setUp(object SWFCharacter)
   Sets the character for this button's up state

swfdisplayitem::addAction
void swfdisplayitem::addAction(object SWFAction, int flags)
   Adds this SWFAction to the given SWFSprite instance

swfdisplayitem::addColor
void swfdisplayitem::addColor(int r, int g, int b [, int a])
   Sets the add color part of this SWFDisplayItem's CXform
   to (r, g, b [, a]), a defaults to 0

swfdisplayitem::endMask
void swfdisplayitem::endMask()
   another way of defining a MASK layer

swfdisplayitem::move
void swfdisplayitem::move(float dx, float dy)
   Displaces this SWFDisplayItem by (dx, dy) in movie coordinates

swfdisplayitem::moveTo
void swfdisplayitem::moveTo(int x, int y)
   Moves this SWFDisplayItem to movie coordinates (x, y)

swfdisplayitem::multColor
void swfdisplayitem::multColor(float r, float g, float b [, float a])
   Sets the multiply color part of this SWFDisplayItem's CXform
   to (r, g, b [, a]), a defaults to 1.0

swfdisplayitem::rotate
void swfdisplayitem::rotate(float degrees)
   Rotates this SWFDisplayItem the given (clockwise) degrees
   from its current orientation

swfdisplayitem::rotateTo
void swfdisplayitem::rotateTo(float degrees)
   Rotates this SWFDisplayItem the given (clockwise) degrees
   from its original orientation

swfdisplayitem::scale
void swfdisplayitem::scale(float xScale, float yScale)
   Multiplies this SWFDisplayItem's current x scale by xScale,
   its y scale by yScale

swfdisplayitem::scaleTo
void swfdisplayitem::scaleTo(float xScale [, float yScale])
   Scales this SWFDisplayItem by xScale in the x direction,
   yScale in the y, or both to xScale if only one arg

swfdisplayitem::setDepth
void swfdisplayitem::setDepth(int depth)
   Sets this SWFDisplayItem's z-depth to depth.
    Items with higher depth values are drawn on
    top of those with lower values

swfdisplayitem::setMaskLevel
void swfdisplayitem::setMaskLevel(int level)
   defines a MASK layer at level

swfdisplayitem::setMatrix
void swfdisplayitem::setMatrix(float a, float b, float c, float d, float x, float y)
   Sets the item's transform matrix

swfdisplayitem::setName
void swfdisplayitem::setName(string name)
   Sets this SWFDisplayItem's name to name

swfdisplayitem::setRatio
void swfdisplayitem::setRatio(float ratio)
   Sets this SWFDisplayItem's ratio to ratio.
    Obviously only does anything if displayitem
    was created from an SWFMorph

swfdisplayitem::skewX
void swfdisplayitem::skewX(float xSkew)
   Adds xSkew to this SWFDisplayItem's x skew value

swfdisplayitem::skewXTo
void swfdisplayitem::skewXTo(float xSkew)
   Sets this SWFDisplayItem's x skew value to xSkew

swfdisplayitem::skewY
void swfdisplayitem::skewY(float ySkew)
   Adds ySkew to this SWFDisplayItem's y skew value

swfdisplayitem::skewYTo
void swfdisplayitem::skewYTo(float ySkew)
   Sets this SWFDisplayItem's y skew value to ySkew

swffill::__construct
class swffill::__construct()
   Returns a new SWFFill object

swffill::moveTo
void swffill::moveTo(float x, float y)
   Moves this SWFFill to shape coordinates (x,y)

swffill::rotateTo
void swffill::rotateTo(float degrees)
   Rotates this SWFFill the given (clockwise) degrees
   from its original orientation

swffill::scaleTo
void swffill::scaleTo(float xScale [, float yScale])
   Scales this SWFFill by xScale in the x direction,
   yScale in the y, or both to xScale if only one arg

swffill::skewXTo
void swffill::skewXTo(float xSkew)
   Sets this SWFFill's x skew value to xSkew

swffill::skewYTo
void swffill::skewYTo(float ySkew)
   Sets this SWFFill's y skew value to ySkew

swffont::__construct
object swffont::__construct(string filename)
   Returns a new SWFFont object from given file

swffont::addChars
void swffont::addChars(string)
   adds characters to a font required within textfields

swffont::getAscent
float swffont::getAscent()
   Returns the ascent of the font, or 0 if not available

swffont::getDescent
float swffont::getDescent()
   Returns the descent of the font, or 0 if not available

swffont::getLeading
float swffont::getLeading()
   Returns the leading of the font, or 0 if not available

swffont::getShape
string swffont::getShape(code)
   Returns the glyph shape of a char as a text string

swffont::getUTF8Width
int swffont::getUTF8Width(string)
   Calculates the width of the given string in this font at full height

swffont::getWideWidth
int swffont::getWideWidth(string)
   Calculates the width of the given string in this font at full height

swffont::getWidth
float swffont::getWidth(string str)
   Calculates the width of the given string in this font at full height

swffontcha::raddChars
void swffontcha::raddChars(string)
   adds characters to a font for exporting font

swffontchar::addChars
void swffontchar::addChars(string)
   adds characters to a font for exporting font

swfgradient::__construct
class swfgradient::__construct()
   Returns a new SWFGradient object

swfgradient::addEntry
void swfgradient::addEntry(float ratio, int r, int g, int b [, int a])
   Adds given entry to the gradient

swfmorph::__construct
object swfmorph::__construct()
   Returns a new SWFMorph object

swfmorph::getShape1
object swfmorph::getShape1()
   Return's this SWFMorph's start shape object

swfmorph::getShape2
object swfmorph::getShape2()
   Return's this SWFMorph's start shape object

swfmovie::__construct
object swfmovie::__construct(int version)
   Creates swfmovie object according to the passed version

swfmovie::add
object swfmovie::add(object SWFBlock)

swfmovie::labelframe
void swfmovie::labelframe(object SWFBlock)
or
void swfmovie::labelframe(string label)
   Labels frame

swfmovie::nextframe
void swfmovie::nextframe()

swfmovie::output
int swfmovie::output([int compression])

swfmovie::save
int swfmovie::save(mixed where [, int compression])
   Saves the movie. 'where' can be stream
   and the movie will be saved there otherwise
   it is treated as string and written in file with that name

swfmovie::saveToFile
int swfmovie::saveToFile(stream x [, int compression])

swfmovie::setBackground
void swfmovie::setBackground(int r, int g, int b)
   Sets background color (r,g,b)

swfmovie::setDimension
void swfmovie::setDimension(float x, float y)
   Sets movie dimension

swfmovie::setFrames
void swfmovie::setFrames(int frames)
   Sets number of frames

swfmovie::setRate
void swfmovie::setRate(float rate)
   Sets movie rate

swfmovie::streamMP3
void swfmovie::streamMP3(mixed file)
   Sets sound stream of the SWF movie. The parameter can be stream or string.

swfprebuiltclip_init
class swfprebuiltclip_init([file])
   Returns a SWFPrebuiltClip object

swfshape::__construct
object swfshape::__construct()
   Returns a new SWFShape object

swfshape::addfill
object swfshape::addfill(mixed arg1, int arg2, [int b [, int a]])
   Returns a fill object, for use with swfshape_setleftfill
   and swfshape_setrightfill. If 1 or 2 parameter(s) is (are)
   passed first should be object (from gradient class) and
   the second int (flags). Gradient fill is performed.
   If 3 or 4 parameters are passed : r, g, b [, a].
   Solid fill is performed.

swfshape::drawarc
void swfshape::drawarc(float r, float startAngle, float endAngle)
   Draws an arc of radius r centered at the current location,
   from angle startAngle to angle endAngle measured
   counterclockwise from 12 o'clock

swfshape::drawcircle
void swfshape::drawcircle(float r)
   Draws a circle of radius r centered at the current location,
   in a counter-clockwise fashion

swfshape::drawcubic
void swfshape::drawcubic(float bx, float by, float cx, float cy, float dx, float dy)
   Draws a cubic bezier curve using the current position
   and the three given points as control points

swfshape::drawcurve
void swfshape::drawcurve(float adx, float ady, float bdx, float bdy [, float cdx, float cdy])
   Draws a curve from the current pen position (x, y)
   to the point (x+bdx, y+bdy) in the current line style,
   using point (x+adx, y+ady) as a control point
   or draws a cubic bezier to point (x+cdx, x+cdy)
   with control points (x+adx, y+ady) and (x+bdx, y+bdy)

swfshape::drawcurveto
void swfshape::drawcurveto(float ax, float ay, float bx, float by [, float dx, float dy])
   Draws a curve from the current pen position (x,y)
   to the point (bx, by) in the current line style,
   using point (ax, ay) as a control point.
   Or draws a cubic bezier to point (dx, dy) with
   control points (ax, ay) and (bx, by)

swfshape::drawglyph
void swfshape::drawglyph(SWFFont font, string character [, int size])
   Draws the first character in the given string
   into the shape using the glyph definition from the given font

swfshape::drawline
void swfshape::drawline(float dx, float dy)
   Draws a line from the current pen position (x, y)
   to the point (x+dx, y+dy) in the current line style

swfshape::drawlineto
void swfshape::drawlineto(float x, float y)
   Draws a line from the current pen position
   to shape coordinates (x, y) in the current line style

swfshape::movepen
void swfshape::movepen(float x, float y)
   Moves the pen from its current location by vector (x, y)

swfshape::movepento
void swfshape::movepento(float x, float y)
   Moves the pen to shape coordinates (x, y)

swfshape::setleftfill
void swfshape::setleftfill(int arg1 [, int g ,int b [,int a]])
   Sets the left side fill style to fill in case only
   one parameter is passed. When 3 or 4 parameters are
   passed they are treated as : int r, int g, int b, int a .
   Solid fill is performed in this case before setting left side fill type.

swfshape::setrightfill
void swfshape::setrightfill(int arg1 [, int g ,int b [,int a]])
   Sets the right side fill style to fill in case only
   one parameter is passed. When 3 or 4 parameters are
   passed they are treated as : int r, int g, int b, int a .
   Solid fill is performed in this case before setting right side fill type.

swfshape::setline
void swfshape::setline(int width, int r, int g, int b [, int a])
   Sets the current line style for this SWFShape

swfsound::__construct
class swfsound::__construct(string filename, int flags)
   Returns a new SWFSound object from given file

swfsprite::__construct
class swfsprite::__construct()
   Returns a new SWFSprite object

swfsprite::add
object swfsprite::add(object SWFCharacter)
   Adds the character to the sprite, returns a displayitem object

swfsprite::labelFrame
void swfsprite::labelFrame(string label)
   Labels frame

swfsprite::nextFrame
void swfsprite::nextFrame()
   Moves the sprite to the next frame

swfsprite::remove
void swfsprite::remove(object SWFDisplayItem)
   Remove the named character from the sprite's display list

swfsprite::setFrames
void swfsprite::setFrames(int frames)
   Sets the number of frames in this SWFSprite

swftext::__construct
class swftext::__construct()
   Returns new SWFText object

swftext::addString
void swftext::addString(string text)
   Writes the given text into this SWFText object
   at the current pen position, using the current font,
   height, spacing, and color

swftext::addUTF8String
void swftext::addUTF8String(string text)
   Writes the given text into this SWFText object
   at the current pen position, using the current font,
   height, spacing, and color

swftext::addWideString
void swftext::addWideString(string text)
   Writes the given text into this SWFText object
   at the current pen position, using the current font,
   height, spacing, and color

swftext::getAscent
float swftext::getAscent()
   Returns the ascent of the current font
   at its current size, or 0 if not available

swftext::getDescent
float swftext::getDescent()
   Returns the descent of the current font
   at its current size, or 0 if not available

swftext::getLeading
float swftext::getLeading()
   Returns the leading of the current font
   at its current size, or 0 if not available

swftext::getUTF8Width
double swftext::getUTF8Width(string)
   calculates the width of the given string
   in this text objects current font and size

swftext::getWideWidth
double swftext::getWideWidth(string)
   calculates the width of the given string
   in this text objects current font and size

swftext::getWidth
float swftext::getWidth(string str)
   Calculates the width of the given string
   in this text objects current font and size

swftext::moveTo
void swftext::moveTo(float x, float y)
   Moves this SWFText object's current pen position
   to (x, y) in text coordinates

swftext::setColor
void swftext::setColor(int r, int g, int b [, int a])
   Sets this SWFText object's current color to the given color

swftext::setFont
void swftext::setFont(object font)
   Sets this SWFText object's current font to given font

swftext::setHeight
void swftext::setHeight(float height)
   Sets this SWFText object's current height to given height

swftext::setSpacing
void swftext::setSpacing(float spacing)
   Sets this SWFText object's current letterspacing to given spacing

swftextfield::__construct
object swftextfield::__construct([int flags])
   Returns a new SWFTextField object

swftextfield::addChars
void swftextfield::addChars(string)
   adds characters to a font that will be available within a textfield

swftextfield::addString
void swftextfield::addString(string str)
   Adds the given string to this textfield

swftextfield::align
void swftextfield::align(int alignment)
   Sets the alignment of this textfield

swftextfield::setBounds
void swftextfield::setBounds(float width, float height)
   Sets the width and height of this textfield

swftextfield::setColor
void swftextfield::setColor(int r, int g, int b [, int a])
   Sets the color of this textfield

swftextfield::setFont
void swftextfield::setFont(object font)
   Sets the font for this textfield

swftextfield::setHeight
void swftextfield::setHeight(float height)
   Sets the font height of this textfield

swftextfield::setIndentation
void swftextfield::setIndentation(float indentation)
   Sets the indentation of the first line of this textfield

swftextfield::setLeftMargin
void swftextfield::setLeftMargin(float margin)
   Sets the left margin of this textfield

swftextfield::setLineSpacing
void swftextfield::setLineSpacing(float space)
   Sets the line spacing of this textfield

swftextfield::setMargins
void swftextfield::setMargins(float left, float right)
   Sets both margins of this textfield

swftextfield::setName
void swftextfield::setName(string var_name)
   Sets the variable name of this textfield

swftextfield::setPadding
void swftextfield::setPadding(float padding)
   Sets the padding of this textfield

swftextfield::setRightMargin
void swftextfield::setRightMargin(float margin)
   Sets the right margin of this textfield

swfvideostream_init
class swfvideostream_init([file])
   Returns a SWVideoStream object

udm_add_search_limit
int udm_add_search_limit(int agent, int var, string val)
   Add mnoGoSearch search restrictions

udm_alloc_agent
int udm_alloc_agent(string dbaddr [, string dbmode])
   Allocate mnoGoSearch session

udm_alloc_agent_array
int udm_alloc_agent_array(array dbaddr)
   Allocate mnoGoSearch session

udm_api_version
int udm_api_version()
   Get mnoGoSearch API version

udm_cat_list
array udm_cat_list(int agent, string category)
   Get mnoGoSearch categories list with the same root

udm_cat_path
array udm_cat_path(int agent, string category)
   Get mnoGoSearch categories path from the root to the given catgory

udm_check_charset
int udm_check_charset(int agent, string charset)
   Check if the given charset is known to mnogosearch

udm_clear_search_limits
int udm_clear_search_limits(int agent)
   Clear all mnoGoSearch search restrictions

udm_crc32
int udm_crc32(int agent, string str)
   Return CRC32 checksum of gived string

udm_errno
int udm_errno(int agent)
   Get mnoGoSearch error number

udm_error
string udm_error(int agent)
   Get mnoGoSearch error message

udm_find
int udm_find(int agent, string query)
   Perform search

udm_free_agent
int udm_free_agent(int agent)
   Free mnoGoSearch session

udm_free_ispell_data
int udm_free_ispell_data(int agent)
   Free memory allocated for ispell data

udm_free_res
int udm_free_res(int res)
   mnoGoSearch free result

udm_get_agent_param_ex
string udm_get_agent_param_ex(int agent, string field)
   Fetch mnoGoSearch environment parameters

udm_get_doc_count
int udm_get_doc_count(int agent)
   Get total number of documents in database

udm_get_res_field
string udm_get_res_field(int res, int row, int field)
   Fetch mnoGoSearch result field

udm_get_res_field_ex
string udm_get_res_field_ex(int res, int row, string field)
   Fetch mnoGoSearch result field

udm_get_res_param
string udm_get_res_param(int res, int param)
   Get mnoGoSearch result parameters

udm_hash32
int udm_hash32(int agent, string str)
   Return Hash32 checksum of gived string

udm_load_ispell_data
int udm_load_ispell_data(int agent, int var, string val1, [string charset], string val2, int flag)
   Load ispell data

udm_make_excerpt
int udm_make_excerpt(int agent, int res, int row)
   Perform search

udm_parse_query_string
int udm_parse_query_string(int agent, string str)
   Parses query string, initialises variables
   and search limits taken from it

udm_set_agent_param
int udm_set_agent_param(int agent, int var, string val)
   Set mnoGoSearch agent session parameters

udm_set_agent_param_ex
int udm_set_agent_param_ex(int agent, string var, string val)
   Set mnoGoSearch agent session parameters extended

udm_store_doc_cgi
int udm_store_doc_cgi(int agent)
   Get CachedCopy of document and return TRUE if cached copy found

msession_call
string msession_call(string fn_name, [, string param1 ], ... [,string param4])
   Call the plugin function named fn_name

msession_connect
bool msession_connect(string host, string port)
   Connect to msession sever

msession_count
int msession_count(void)
   Get session count

msession_create
bool msession_create(string session)
   Create a session

msession_ctl
int msession_ctl(string name)
   Lock a session

msession_destroy
bool msession_destroy(string name)
   Destroy a session

msession_disconnect
void msession_disconnect(void)
   Disconnect from msession server

msession_exec
string msession_exec(string cmdline)
   executes a program on msession system

msession_find
array msession_find(string name, string value)
   Find all sessions with name and value

msession_get
string msession_get(string session, string name, string default_value)
   Get value from session

msession_get_array
array msession_get_array(string session)
   Get array of msession variables

msession_get_data
string msession_get_data(string session)
   Get data session unstructured data. (PHP sessions use this)

msession_inc
string msession_inc(string session, string name)
   Increment value in session

msession_list
array msession_list(void)
   List all sessions

msession_listvar
array msession_listvar(string name)
   return associative array of value:session
   for all sessions with a variable named 'name'

msession_lock
int msession_lock(string name)
   Lock a session

msession_ping
bool msession_ping(void)
   returns non-zero if msession is alive

msession_plugin
string msession_plugin(string session, string val [, string param ])
   Call the personality plugin escape function

msession_randstr
string msession_randstr(int num_chars)
   Get random string

msession_set
bool msession_set(string session, string name, string value)
   Set value in session

msession_set_array
bool msession_set_array(string session, array tuples)
   Set msession variables from an array

msession_set_data
bool msession_set_data(string session, string value)
   Set data session unstructured data.
   (PHP sessions use this)

msession_timeout
int msession_timeout(string session [, int param ])
   Set/get session timeout

msession_uniq
string msession_uniq(int num_chars)
   Get uniq id

msession_unlock
int msession_unlock(string session, int key)
   Unlock a session

msql_affected_rows
int msql_affected_rows(resource query)
   Return number of affected rows

msql_close
bool msql_close([resource link_identifier])
   Close an mSQL connection

msql_connect
int msql_connect([string hostname[:port]] [, string username] [, string password])
   Open a connection to an mSQL Server

msql_create_db
bool msql_create_db(string database_name [, resource link_identifier])
   Create an mSQL database

msql_data_seek
bool msql_data_seek(resource query, int row_number)
   Move internal result pointer

msql_db_query
resource msql_db_query(string database_name, string query [, resource link_identifier])
   Send an SQL query to mSQL

msql_drop_db
bool msql_drop_db(string database_name [, resource link_identifier])
   Drop (delete) an mSQL database

msql_error
string msql_error(void)
   Returns the text of the error message from previous mSQL operation

msql_fetch_array
array msql_fetch_array(resource query [, int result_type])
   Fetch a result row as an associative array

msql_fetch_field
object msql_fetch_field(resource query [, int field_offset])
   Get column information from a result and return as an object

msql_fetch_object
object msql_fetch_object(resource query [, resource result_type])
   Fetch a result row as an object

msql_fetch_row
array msql_fetch_row(resource query)
   Get a result row as an enumerated array

msql_field_flags
string msql_field_flags(resource query, int field_offset)
   Get the flags associated with the specified field in a result

msql_field_len
int msql_field_len(int query, int field_offet)
   Returns the length of the specified field

msql_field_name
string msql_field_name(resource query, int field_index)
   Get the name of the specified field in a result

msql_field_seek
bool msql_field_seek(resource query, int field_offset)
   Set result pointer to a specific field offset

msql_field_table
string msql_field_table(resource query, int field_offset)
   Get name of the table the specified field is in

msql_field_type
string msql_field_type(resource query, int field_offset)
   Get the type of the specified field in a result

msql_free_result
bool msql_free_result(resource query)
   Free result memory

msql_list_dbs
resource msql_list_dbs([resource link_identifier])
   List databases available on an mSQL server

msql_list_fields
resource msql_list_fields(string database_name, string table_name [, resource link_identifier])
   List mSQL result fields

msql_list_tables
resource msql_list_tables(string database_name [, resource link_identifier])
   List tables in an mSQL database

msql_num_fields
int msql_num_fields(resource query)
   Get number of fields in a result

msql_num_rows
int msql_num_rows(resource query)
   Get number of rows in a result

msql_pconnect
int msql_pconnect([string hostname[:port]] [, string username] [, string password])
   Open a persistent connection to an mSQL Server

msql_query
resource msql_query(string query [, resource link_identifier])
   Send an SQL query to mSQL

msql_result
string msql_result(int query, int row [, mixed field])
   Get result data

msql_select_db
bool msql_select_db(string database_name [, resource link_identifier])
   Select an mSQL database

mssql_bind
bool mssql_bind(resource stmt, string param_name, mixed var, int type [, int is_output [, int is_null [, int maxlen]]])
   Adds a parameter to a stored procedure or a remote stored procedure

mssql_close
bool mssql_close([resource conn_id])
   Closes a connection to a MS-SQL server

mssql_connect
int mssql_connect([string servername [, string username [, string password]]])
   Establishes a connection to a MS-SQL server

mssql_data_seek
bool mssql_data_seek(resource result_id, int offset)
   Moves the internal row pointer of the MS-SQL
   result associated with the specified result identifier
   to pointer to the specified row number

mssql_execute
mixed mssql_execute(resource stmt [, bool skip_results = false])
   Executes a stored procedure on a MS-SQL server database

mssql_fetch_array
array mssql_fetch_array(resource result_id [, int result_type])
   Returns an associative array of the current row
   in the result set specified by result_id

mssql_fetch_assoc
array mssql_fetch_assoc(resource result_id)
   Returns an associative array of the current row
   in the result set specified by result_id

mssql_fetch_batch
int mssql_fetch_batch(resource result_index)
   Returns the next batch of records

mssql_fetch_field
object mssql_fetch_field(resource result_id [, int offset])
   Gets information about certain fields in a query result

mssql_fetch_object
object mssql_fetch_object(resource result_id [, int result_type])
   Returns a psuedo-object of the current row
   in the result set specified by result_id

mssql_fetch_row
array mssql_fetch_row(resource result_id)
   Returns an array of the current row
   in the result set specified by result_id

mssql_field_length
int mssql_field_length(resource result_id [, int offset])
   Get the length of a MS-SQL field

mssql_field_name
string mssql_field_name(resource result_id [, int offset])
   Returns the name of the field given by offset in
   the result set given by result_id

mssql_field_seek
bool mssql_field_seek(int result_id, int offset)
   Seeks to the specified field offset

mssql_field_type
string mssql_field_type(resource result_id [, int offset])
   Returns the type of a field

mssql_free_result
bool mssql_free_result(resource result_index)
   Free a MS-SQL result index

mssql_free_statement
bool mssql_free_statement(resource result_index)
   Free a MS-SQL statement index

mssql_get_last_message
string mssql_get_last_message(void)
   Gets the last message from the MS-SQL server

mssql_guid_string
string mssql_guid_string(string binary [,int short_format])
   Converts a 16 byte binary GUID to a string

mssql_init
int mssql_init(string sp_name [, resource conn_id])
   Initializes a stored procedure or a remote stored procedure

mssql_min_error_severity
void mssql_min_error_severity(int severity)
   Sets the lower error severity

mssql_min_message_severity
void mssql_min_message_severity(int severity)
   Sets the lower message severity

mssql_next_result
bool mssql_next_result(resource result_id)
   Move the internal result pointer to the next result

mssql_num_fields
int mssql_num_fields(resource mssql_result_index)
   Returns the number of fields fetched in from the result id specified

mssql_num_rows
int mssql_num_rows(resource mssql_result_index)
   Returns the number of rows fetched in from the result id specified

mssql_pconnect
int mssql_pconnect([string servername [, string username [, string password]]])
   Establishes a persistent connection to a MS-SQL server

mssql_query
resource mssql_query(string query [, resource conn_id [, int batch_size]])
   Perform an SQL query on a MS-SQL server database

mssql_result
string mssql_result(resource result_id, int row, mixed field)
   Returns the contents of one cell from a MS-SQL result set

mssql_rows_affected
int mssql_rows_affected(resource conn_id)
   Returns the number of records affected by the query

mssql_select_db
bool mssql_select_db(string database_name [, resource conn_id])
   Select a MS-SQL database

mysql_affected_rows
int mysql_affected_rows([int link_identifier])
   Gets number of affected rows
   in previous MySQL operation

mysql_client_encoding
string mysql_client_encoding([int link_identifier])
   Returns the default character set
   for the current connection

mysql_close
bool mysql_close([int link_identifier])
   Close a MySQL connection

mysql_connect
resource mysql_connect([string hostname[:port][:/path/to/socket] [, string username [, string password [, bool new [, int flags]]]]])
   Opens a connection to a MySQL Server

mysql_create_db
bool mysql_create_db(string database_name [, int link_identifier])
   Create a MySQL database

mysql_data_seek
bool mysql_data_seek(resource result, int row_number)
   Move internal result pointer

mysql_db_query
resource mysql_db_query(string database_name, string query [, int link_identifier])
   Sends an SQL query to MySQL

mysql_drop_db
bool mysql_drop_db(string database_name [, int link_identifier])
   Drops (delete) a MySQL database

mysql_errno
int mysql_errno([int link_identifier])
   Returns the number of the error message
   from previous MySQL operation

mysql_error
string mysql_error([int link_identifier])
   Returns the text of the error message
   from previous MySQL operation

mysql_escape_string
string mysql_escape_string(string to_be_escaped)
   Escape string for mysql query

mysql_fetch_array
array mysql_fetch_array(resource result [, int result_type])
   Fetch a result row as an array (associative, numeric or both)

mysql_fetch_assoc
array mysql_fetch_assoc(resource result)
   Fetch a result row as an associative array

mysql_fetch_field
object mysql_fetch_field(resource result [, int field_offset])
   Gets column information from a result and return as an object

mysql_fetch_lengths
array mysql_fetch_lengths(resource result)
   Gets max data size of each column in a result

mysql_fetch_object
object mysql_fetch_object(resource result [, string class_name [, NULL|array ctor_params]])
   Fetch a result row as an object

mysql_fetch_row
array mysql_fetch_row(resource result)
   Gets a result row as an enumerated array

mysql_field_flags
string mysql_field_flags(resource result, int field_offset)
   Gets the flags associated with the specified field in a result

mysql_field_len
int mysql_field_len(resource result, int field_offset)
   Returns the length of the specified field

mysql_field_name
string mysql_field_name(resource result, int field_index)
   Gets the name of the specified field in a result

mysql_field_seek
bool mysql_field_seek(resource result, int field_offset)
   Sets result pointer to a specific field offset

mysql_field_table
string mysql_field_table(resource result, int field_offset)
   Gets name of the table the specified field is in

mysql_field_type
string mysql_field_type(resource result, int field_offset)
   Gets the type of the specified field in a result

mysql_free_result
bool mysql_free_result(resource result)
   Free result memory

mysql_get_client_info
string mysql_get_client_info(void)
   Returns a string that represents the client library version

mysql_get_host_info
string mysql_get_host_info([int link_identifier])
   Returns a string describing the type of connection in use,
   including the server host name

mysql_get_proto_info
int mysql_get_proto_info([int link_identifier])
   Returns the protocol version used by current connection

mysql_get_server_info
string mysql_get_server_info([int link_identifier])
   Returns a string that represents the server version number

mysql_info
string mysql_info([int link_identifier])
   Returns a string containing information about the most recent query

mysql_insert_id
int mysql_insert_id([int link_identifier])
   Gets the ID generated from the previous INSERT operation

mysql_list_dbs
resource mysql_list_dbs([int link_identifier])
   List databases available on a MySQL server

mysql_list_fields
resource mysql_list_fields(string database_name, string table_name [, int link_identifier])
   List MySQL result fields

mysql_list_processes
resource mysql_list_processes([int link_identifier])
   Returns a result set describing the current server threads

mysql_list_tables
resource mysql_list_tables(string database_name [, int link_identifier])
   List tables in a MySQL database

mysql_num_fields
int mysql_num_fields(resource result)
   Gets number of fields in a result

mysql_num_rows
int mysql_num_rows(resource result)
   Gets number of rows in a result

mysql_pconnect
resource mysql_pconnect([string hostname[:port][:/path/to/socket] [, string username [, string password [, int flags]]]])
   Opens a persistent connection to a MySQL Server

mysql_ping
bool mysql_ping([int link_identifier])
   Ping a server connection. If no connection then reconnect.

mysql_query
resource mysql_query(string query [, int link_identifier])
   Sends an SQL query to MySQL

mysql_real_escape_string
string mysql_real_escape_string(string to_be_escaped [, int link_identifier])
   Escape special characters in a string for use
   in a SQL statement, taking into account the current
   charset of the connection

mysql_result
mixed mysql_result(resource result, int row [, mixed field])
   Gets result data

mysql_select_db
bool mysql_select_db(string database_name [, int link_identifier])
   Selects a MySQL database

mysql_stat
string mysql_stat([int link_identifier])
   Returns a string containing status information

mysql_thread_id
int mysql_thread_id([int link_identifier])
   Returns the thread id of current connection

mysql_unbuffered_query
resource mysql_unbuffered_query(string query [, int link_identifier])
   Sends an SQL query to MySQL, without fetching
   and buffering the result rows

mysqli_set_local_infile_default
mysqli_set_local_infile_default(object link)
   unsets user defined handler for load local infile command

mysqli_affected_rows
mixed mysqli_affected_rows(object link)
   Get number of affected rows in previous MySQL operation

mysqli_autocommit
bool mysqli_autocommit(object link, bool mode)
   Turn auto commit on or of

mysqli_change_user
bool mysqli_change_user(object link, string user, string password, string database)
   Change logged-in user of the active connection

mysqli_character_set_name
string mysqli_character_set_name(object link)
   Returns the name of the character set used for this connection

mysqli_close
bool mysqli_close(object link)
   Close connection

mysqli_commit
bool mysqli_commit(object link)
   Commit outstanding actions and close transaction

mysqli_data_seek
bool mysqli_data_seek(object result, int offset)
   Move internal result pointer

mysqli_debug
void mysqli_debug(string debug)

mysqli_dump_debug_info
bool mysqli_dump_debug_info(object link)

mysqli_errno
int mysqli_errno(object link)
   Returns the numerical value of the error message
   from previous MySQL operation

mysqli_error
string mysqli_error(object link)
   Returns the text of the error message
   from previous MySQL operation

mysqli_fetch_field
mixed mysqli_fetch_field(object result)
   Get column information from a result
   and return as an object

mysqli_fetch_field_direct
mixed mysqli_fetch_field_direct(object result, int offset)
   Fetch meta-data for a single field

mysqli_fetch_fields
mixed mysqli_fetch_fields(object result)
   Return array of objects containing field meta-data

mysqli_fetch_lengths
mixed mysqli_fetch_lengths(object result)
   Get the length of each output in a result

mysqli_fetch_row
array mysqli_fetch_row(object result)
   Get a result row as an enumerated array

mysqli_field_count
int mysqli_field_count(object link)
   Fetch the number of fields returned by the last query for the given link

mysqli_field_seek
int mysqli_field_seek(object result, int fieldnr)
   Set result pointer to a specified field offset

mysqli_field_tell
int mysqli_field_tell(object result)
   Get current field offset of result pointer

mysqli_free_result
void mysqli_free_result(object result)
   Free query result memory for the given result handle

mysqli_get_client_info
string mysqli_get_client_info(void)
   Get MySQL client info

mysqli_get_client_version
int mysqli_get_client_version(void)
   Get MySQL client info

mysqli_get_host_info
string mysqli_get_host_info(object link)
   Get MySQL host info

mysqli_get_proto_info
int mysqli_get_proto_info(object link)
   Get MySQL protocol information

mysqli_get_server_info
string mysqli_get_server_info(object link)
   Get MySQL server info

mysqli_get_server_version
int mysqli_get_server_version(object link)
   Return the MySQL version for the server referenced by the given link

mysqli_info
string mysqli_info(object link)
   Get information about the most recent query

mysqli_init
resource mysqli_init(void)
   Initialize mysqli and return a resource for use with mysql_real_connect

mysqli_insert_id
mixed mysqli_insert_id(object link)
   Get the ID generated from the previous INSERT operation

mysqli_kill
bool mysqli_kill(object link, int processid)
   Kill a mysql process on the server

mysqli_more_results
bool mysqli_more_results(object link)
   check if there any more query results from a multi query

mysqli_next_result
bool mysqli_next_result(object link)
   read next result from multi_query

mysqli_num_fields
int mysqli_num_fields(object result)
   Get number of fields in result

mysqli_num_rows
mixed mysqli_num_rows(object result)
   Get number of rows in result

mysqli_options
bool mysqli_options(object link, int flags, mixed values)
   Set options

mysqli_ping
bool mysqli_ping(object link)
   Ping a server connection or reconnect if there is no connection

mysqli_prepare
mixed mysqli_prepare(object link, string query)
   Prepare a SQL statement for execution

mysqli_real_connect
bool mysqli_real_connect(object link [,string hostname [,string username [,string passwd
	[,string dbname [,int port [,string socket [,int flags]]]]]]])
   Open a connection to a mysql server

mysqli_real_escape_string
string mysqli_real_escape_string(object link, string escapestr)
   Escapes special characters in a string for use
   in a SQL statement, taking into account the current
   charset of the connection

mysqli_real_query
bool mysqli_real_query(object link, string query)
   Binary-safe version of mysql_query()

mysqli_rollback
bool mysqli_rollback(object link)
   Undo actions from current transaction

mysqli_select_db
string mysqli_select_db(object link, string dbname)
   Select a MySQL database

mysqli_send_long_data
bool mysqli_send_long_data(object stmt, int param_nr, string data)

mysqli_server_end
void mysqli_server_end(void)

mysqli_server_init
bool mysqli_server_init(void)
   initialize embedded server

mysqli_set_local_infile_handler
bool mysqli_set_local_infile_handler(object link, callback read_func)
   Set callback functions for LOAD DATA LOCAL INFILE

mysqli_sqlstate
string mysqli_sqlstate(object link)
   Returns the SQLSTATE error from previous MySQL operation

mysqli_ssl_set
bool mysqli_ssl_set(object link, string key, string cert, string ca, string capath, string cipher])

mysqli_stat
mixed mysqli_stat(object link)
   Get current system status

mysqli_stmt_affected_rows
mixed mysqli_stmt_affected_rows(object stmt)
   Return the number of rows affected in the last query for the given link

mysqli_stmt_attr_get
int mysqli_stmt_attr_get(object stmt, long attr)

mysqli_stmt_attr_set
int mysqli_stmt_attr_set(object stmt, long attr, bool mode)

mysqli_stmt_bind_param
bool mysqli_stmt_bind_param(object stmt, string types, mixed variable [,mixed,....])
   Bind variables to a prepared statement as parameters

mysqli_stmt_bind_result
bool mysqli_stmt_bind_result(object stmt, mixed var, [,mixed, ...])
   Bind variables to a prepared statement for result storage

mysqli_stmt_close
bool mysqli_stmt_close(object stmt)
   Close statement

mysqli_stmt_data_seek
void mysqli_stmt_data_seek(object stmt, int offset)
   Move internal result pointer

mysqli_stmt_errno
int mysqli_stmt_errno(object stmt)

mysqli_stmt_error
string mysqli_stmt_error(object stmt)

mysqli_stmt_execute
bool mysqli_stmt_execute(object stmt)
   Execute a prepared statement

mysqli_stmt_fetch
mixed mysqli_stmt_fetch(object stmt)
   Fetch results from a prepared statement into the bound variables

mysqli_stmt_field_count
int mysqli_stmt_field_count(object stmt) {
   Return the number of result columns for the given statement

mysqli_stmt_free_result
void mysqli_stmt_free_result(object stmt)
   Free stored result memory for the given statement handle

mysqli_stmt_init
mixed mysqli_stmt_init(object link)
   Initialize statement object

mysqli_stmt_insert_id
mixed mysqli_stmt_insert_id(object stmt)
   Get the ID generated from the previous INSERT operation

mysqli_stmt_num_rows
mixed mysqli_stmt_num_rows(object stmt)
   Return the number of rows in statements result set

mysqli_stmt_param_count
int mysqli_stmt_param_count(object stmt) {
   Return the number of parameter for the given statement

mysqli_stmt_prepare
bool mysqli_stmt_prepare(object stmt, string query)
   prepare server side statement with query

mysqli_stmt_reset
bool mysqli_stmt_reset(object stmt)
   reset a prepared statement

mysqli_stmt_result_metadata
mixed mysqli_stmt_result_metadata(object stmt)
   return result set from statement

mysqli_stmt_sqlstate
string mysqli_stmt_sqlstate(object stmt)

mysqli_stmt_store_result
bool mysqli_stmt_store_result(stmt)

mysqli_store_result
object mysqli_store_result(object link)
   Buffer result set on client

mysqli_thread_id
int mysqli_thread_id(object link)
   Return the current thread ID

mysqli_thread_safe
bool mysqli_thread_safe(void)
   Return whether thread safety is given or not

mysqli_use_result
mixed mysqli_use_result(object link)
   Directly retrieve query results - do not buffer results on client side

mysqli_warning_count
int mysqli_warning_count(object link)
   Return number of warnings from the last query for the given link

mysqli_connect
object mysqli_connect([string hostname [,string username [,string passwd [,string dbname [,int port [,string socket]]]]]])
   Open a connection to a mysql server

mysqli_connect_errno
int mysqli_connect_errno(void)
   Returns the numerical value of the error message from last connect command

mysqli_connect_error
string mysqli_connect_error(void)
   Returns the text of the error message from previous MySQL operation

mysqli_embedded_connect
object mysqli_embedded_connect(void)
   Open a connection to a embedded mysql server

mysqli_fetch_array
mixed mysqli_fetch_array(object result [,int resulttype])
   Fetch a result row as an associative array, a numeric array, or both

mysqli_fetch_assoc
mixed mysqli_fetch_assoc(object result)
   Fetch a result row as an associative array

mysqli_fetch_object
mixed mysqli_fetch_object(object result [, string class_name [, NULL|array ctor_params]])
   Fetch a result row as an object

mysqli_multi_query
bool mysqli_multi_query(object link, string query)
   Binary-safe version of mysql_query()

mysqli_query
mixed mysqli_query(object link, string query [,int resultmode])

mysqli_disable_reads_from_master
void mysqli_disable_reads_from_master(object link)

mysqli_disable_rpl_parse
void mysqli_disable_rpl_parse(object link)

mysqli_enable_reads_from_master
void mysqli_enable_reads_from_master(object link)

mysqli_enable_rpl_parse
void mysqli_enable_rpl_parse(object link)

mysqli_master_query
bool mysqli_master_query(object link, string query)
   Enforce execution of a query on the master in a master/slave setup

mysqli_rpl_parse_enabled
int mysqli_rpl_parse_enabled(object link)

mysqli_rpl_probe
bool mysqli_rpl_probe(object link)

mysqli_rpl_query_type
int mysqli_rpl_query_type(string query)

mysqli_send_query
bool mysqli_send_query(object link, string query)

mysqli_slave_query
bool mysqli_slave_query(object link, string query)
   Enforce execution of a query on a slave in a master/slave setup

ncurses_addch
int ncurses_addch(int ch)
   Adds character at current position and advance cursor

ncurses_addchnstr
int ncurses_addchnstr(string s, int n)
   Adds attributed string with specified length at current position

ncurses_addchstr
int ncurses_addchstr(string s)
   Adds attributed string at current position

ncurses_addnstr
int ncurses_addnstr(string s, int n)
   Adds string with specified length at current position

ncurses_addstr
int ncurses_addstr(string text)
   Outputs text at current position

ncurses_assume_default_colors
int ncurses_assume_default_colors(int fg, int bg)
   Defines default colors for color 0

ncurses_attroff
int ncurses_attroff(int attributes)
   Turns off the given attributes

ncurses_attron
int ncurses_attron(int attributes)
   Turns on the given attributes

ncurses_attrset
int ncurses_attrset(int attributes)
   Sets given attributes

ncurses_baudrate
int ncurses_baudrate(void)
   Returns baudrate of terminal

ncurses_beep
int ncurses_beep(void)
   Let the terminal beep

ncurses_bkgd
int ncurses_bkgd(int attrchar)
   Sets background property for terminal screen

ncurses_bkgdset
void ncurses_bkgdset(int attrchar)
   Controls screen background

ncurses_border
int ncurses_border(int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
   Draws a border around the screen using attributed characters

ncurses_bottom_panel
int ncurses_bottom_panel(resource panel)
   Moves a visible panel to the bottom of the stack

ncurses_can_change_color
bool ncurses_can_change_color(void)
   Checks if we can change terminals colors

ncurses_cbreak
bool ncurses_cbreak(void)
   Switches of input buffering

ncurses_clear
bool ncurses_clear(void)
   Clears screen

ncurses_clrtobot
bool ncurses_clrtobot(void)
   Clears screen from current position to bottom

ncurses_clrtoeol
bool ncurses_clrtoeol(void)
   Clears screen from current position to end of line

ncurses_color_content
int ncurses_color_content(int color, int &r, int &g, int &b)
   Gets the RGB value for color

ncurses_color_set
int ncurses_color_set(int pair)
   Sets fore- and background color

ncurses_curs_set
int ncurses_curs_set(int visibility)
   Sets cursor state

ncurses_def_prog_mode
int ncurses_def_prog_mode(void)
   Saves terminals (program) mode

ncurses_def_shell_mode
int ncurses_def_shell_mode(void)
   Saves terminal (shell) mode

ncurses_define_key
int ncurses_define_key(string definition, int keycode)
   Defines a keycode

ncurses_del_panel
bool ncurses_del_panel(resource panel)
   Remove panel from the stack and delete it (but not the associated window)

ncurses_delay_output
int ncurses_delay_output(int milliseconds)
   Delays output on terminal using padding characters

ncurses_delch
int ncurses_delch(void)
   Deletes character at current position, move rest of line left

ncurses_deleteln
int ncurses_deleteln(void)
   Deletes line at current position, move rest of screen up

ncurses_delwin
int ncurses_delwin(resource window)
   Deletes a ncurses window

ncurses_doupdate
int ncurses_doupdate(void)
   Writes all prepared refreshes to terminal

ncurses_echo
int ncurses_echo(void)
   Activates keyboard input echo

ncurses_echochar
int ncurses_echochar(int character)
   Single character output including refresh

ncurses_end
int ncurses_end(void)
   Stops using ncurses, clean up the screen

ncurses_erase
int ncurses_erase(void)
   Erases terminal screen

ncurses_erasechar
string ncurses_erasechar(void)
   Returns current erase character

ncurses_filter
void ncurses_filter(void)

ncurses_flash
int ncurses_flash(void)
   Flashes terminal screen (visual bell)

ncurses_flushinp
int ncurses_flushinp(void)
   Flushes keyboard input buffer

ncurses_getch
int ncurses_getch(void)
   Reads a character from keyboard

ncurses_getmaxyx
void ncurses_getmaxyx(resource window, int &y, int &x)
   Returns the size of a window

ncurses_getmouse
bool ncurses_getmouse(array &mevent)
   Reads mouse event from queue. The content of mevent
   is cleared before new data is added.

ncurses_getyx
void ncurses_getyx(resource window, int &y, int &x)
   Returns the current cursor position for a window

ncurses_halfdelay
int ncurses_halfdelay(int tenth)
   Puts terminal into halfdelay mode

ncurses_has_colors
bool ncurses_has_colors(void)
   Checks if terminal has colors

ncurses_has_ic
int ncurses_has_ic(void)
   Checks for insert- and delete-capabilities

ncurses_has_il
int ncurses_has_il(void)
   Checks for line insert- and delete-capabilities

ncurses_has_key
int ncurses_has_key(int keycode)
   Checks for presence of a function key on terminal keyboard

ncurses_hide_panel
int ncurses_hide_panel(resource panel)
   Remove panel from the stack, making it invisible

ncurses_hline
int ncurses_hline(int charattr, int n)
   Draws a horizontal line at current position
   using an attributed character
   and max. n characters long

ncurses_inch
string ncurses_inch(void)
   Gets character and attribute at current position

ncurses_init
int ncurses_init(void)
   Initializes ncurses

ncurses_init_color
int ncurses_init_color(int color, int r, int g, int b)
   Sets new RGB value for color

ncurses_init_pair
int ncurses_init_pair(int pair, int fg, int bg)
   Allocates a color pair

ncurses_insch
int ncurses_insch(int character)
   Inserts character moving rest of line including
   character at current position

ncurses_insdelln
int ncurses_insdelln(int count)
   Inserts lines before current line scrolling down
   (negative numbers delete and scroll up)

ncurses_insertln
int ncurses_insertln(void)
   Inserts a line, move rest of screen down

ncurses_insstr
int ncurses_insstr(string text)
   Inserts string at current position, moving rest of line right

ncurses_instr
int ncurses_instr(string &buffer)
   Reads string from terminal screen

ncurses_isendwin
int ncurses_isendwin(void)
   Ncurses is in endwin mode, normal screen output may be performed

ncurses_keyok
int ncurses_keyok(int keycode, int enable)
   Enables or disable a keycode

ncurses_keypad
int ncurses_keypad(resource window, bool bf)
   Turns keypad on or off

ncurses_killchar
string ncurses_killchar(void)
   Returns current line kill character

ncurses_longname
string ncurses_longname(void)
   Returns terminal description

ncurses_meta
int ncurses_meta(resource window, bool 8bit)
   Enables/Disable 8-bit meta key information

ncurses_mouse_trafo
bool ncurses_mouse_trafo(int &y, int &x, bool toscreen)
   Transforms coordinates

ncurses_mouseinterval
int ncurses_mouseinterval(int milliseconds)
   Sets timeout for mouse button clicks

ncurses_mousemask
int ncurses_mousemask(int newmask, int &oldmask)
   Returns and sets mouse options

ncurses_move
int ncurses_move(int y, int x)
   Moves output position

ncurses_move_panel
int ncurses_move_panel(resource panel, int startx, int starty)
   Moves a panel so that it's upper-left corner is at [startx, starty]

ncurses_mvaddch
int ncurses_mvaddch(int y, int x, int c)
   Moves current position and add character

ncurses_mvaddchnstr
int ncurses_mvaddchnstr(int y, int x, string s, int n)
   Moves position and add attrributed string with specified length

ncurses_mvaddchstr
int ncurses_mvaddchstr(int y, int x, string s)
   Moves position and add attributed string

ncurses_mvaddnstr
int ncurses_mvaddnstr(int y, int x, string s, int n)
   Moves position and add string with specified length

ncurses_mvaddstr
int ncurses_mvaddstr(int y, int x, string s)
   Moves position and add string

ncurses_mvcur
int ncurses_mvcur(int old_y,int old_x, int new_y, int new_x)
   Moves cursor immediately

ncurses_mvdelch
int ncurses_mvdelch(int y, int x)
   Moves position and delete character, shift rest of line left

ncurses_mvgetch
int ncurses_mvgetch(int y, int x)
   Moves position and get character at new position

ncurses_mvhline
int ncurses_mvhline(int y, int x, int attrchar, int n)
   Sets new position and draw a horizontal line using an
   attributed character and max. n characters long

ncurses_mvinch
int ncurses_mvinch(int y, int x)
   Moves position and get attributed character at new position

ncurses_mvvline
int ncurses_mvvline(int y, int x, int attrchar, int n)
   Sets new position and draw a vertical line using an
   attributed character and max. n characters long

ncurses_mvwaddstr
int ncurses_mvwaddstr(resource window, int y, int x, string text)
   Adds string at new position in window

ncurses_napms
int ncurses_napms(int milliseconds)
   Sleep

ncurses_new_panel
resource ncurses_new_panel(resource window)
   Create a new panel and associate it with window

ncurses_newpad
resource ncurses_newpad(int rows, int cols)
   Creates a new pad (window)

ncurses_newwin
int ncurses_newwin(int rows, int cols, int y, int x)
   Creates a new window

ncurses_nl
int ncurses_nl(void)
   Translates newline and carriage return / line feed

ncurses_nocbreak
int ncurses_nocbreak(void)
   Switches terminal to cooked mode

ncurses_noecho
int ncurses_noecho(void)
   Switches off keyboard input echo

ncurses_nonl
int ncurses_nonl(void)
   Do not ranslate newline and carriage return / line feed

ncurses_noqiflush
int ncurses_noqiflush(void)
   Do not flush on signal characters

ncurses_noraw
bool ncurses_noraw(void)
   Switches terminal out of raw mode

ncurses_pair_content
int ncurses_pair_content(int pair, int &f, int &b)
   Gets the RGB value for color

ncurses_panel_above
resource ncurses_panel_above(resource panel)
   Returns the panel above panel. If panel is null,
   returns the bottom panel in the stack

ncurses_panel_below
resource ncurses_panel_below(resource panel)
   Returns the panel below panel. If panel is null,
   returns the top panel in the stack

ncurses_panel_window
resource ncurses_panel_window(resource panel)
   Returns the window associated with panel

ncurses_pnoutrefresh
int ncurses_pnoutrefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
   Copys a region from a pad into the virtual screen

ncurses_prefresh
int ncurses_prefresh(resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
   Copys a region from a pad into the virtual screen

ncurses_putp
int ncurses_putp(string text)
   ???

ncurses_qiflush
void ncurses_qiflush(void)
   Flushes on signal characters

ncurses_raw
int ncurses_raw(void)
   Switches terminal into raw mode

ncurses_refresh
int ncurses_refresh(int ch)
   Refresh screen

ncurses_replace_panel
int ncurses_replace_panel(resource panel, resource window)
   Replaces the window associated with panel

ncurses_reset_prog_mode
int ncurses_reset_prog_mode(void)
   Resets the prog mode saved by def_prog_mode

ncurses_reset_shell_mode
int ncurses_reset_shell_mode(void)
   Resets the shell mode saved by def_shell_mode

ncurses_resetty
int ncurses_resetty(void)
   Restores saved terminal state

ncurses_savetty
int ncurses_savetty(void)
   Saves terminal state

ncurses_scr_dump
int ncurses_scr_dump(string filename)
   Dumps screen content to file

ncurses_scr_init
int ncurses_scr_init(string filename)
   Initializes screen from file dump

ncurses_scr_restore
int ncurses_scr_restore(string filename)
   Restores screen from file dump

ncurses_scr_set
int ncurses_scr_set(string filename)
   Inherits screen from file dump

ncurses_scrl
int ncurses_scrl(int count)
   Scrolls window content up or down without changing current position

ncurses_show_panel
int ncurses_show_panel(resource panel)
   Places an invisible panel on top of the stack, making it visible

ncurses_slk_attr
int ncurses_slk_attr(void)
   Returns current soft label keys attribute

ncurses_slk_attroff
int ncurses_slk_attroff(int intarg)
   ???

ncurses_slk_attron
int ncurses_slk_attron(int intarg)
   ???

ncurses_slk_attrset
int ncurses_slk_attrset(int intarg)
   ???

ncurses_slk_clear
int ncurses_slk_clear(void)
   Clears soft label keys from screen

ncurses_slk_color
int ncurses_slk_color(int intarg)
   Sets color for soft label keys

ncurses_slk_init
int ncurses_slk_init(int intarg)
   Inits soft label keys

ncurses_slk_noutrefresh
int ncurses_slk_noutrefresh(void)
   Copies soft label keys to virtual screen

ncurses_slk_refresh
int ncurses_slk_refresh(void)
   Copies soft label keys to screen

ncurses_slk_restore
int ncurses_slk_restore(void)
   Restores soft label keys

ncurses_slk_set
bool ncurses_slk_set(int labelnr, string label, int format)
   Sets function key labels

ncurses_slk_touch
int ncurses_slk_touch(void)
   Forces output when ncurses_slk_noutrefresh is performed

ncurses_standend
int ncurses_standend(void)
   Stops using 'standout' attribute

ncurses_standout
int ncurses_standout(void)
   Starts using 'standout' attribute

ncurses_start_color
int ncurses_start_color(void)
   Starts using colors

ncurses_termattrs
int ncurses_termattrs(void)
   Returns a logical OR of all attribute flags supported by terminal

ncurses_termname
string ncurses_termname(void)
   Returns terminal name

ncurses_timeout
void ncurses_timeout(int millisec)
   Sets timeout for special key sequences

ncurses_top_panel
int ncurses_top_panel(resource panel)
   Moves a visible panel to the top of the stack

ncurses_typeahead
int ncurses_typeahead(int fd)
   Specifys different filedescriptor for typeahead checking

ncurses_ungetch
int ncurses_ungetch(int keycode)
   Puts a character back into the input stream

ncurses_ungetmouse
int ncurses_ungetmouse(array mevent)
   Pushes mouse event to queue

ncurses_update_panels
void ncurses_update_panels(void)
   Refreshes the virtual screen to reflect the relations
   between panels in the stack.

ncurses_use_default_colors
int ncurses_use_default_colors(void)
   Assigns terminal default colors to color id -1

ncurses_use_env
void ncurses_use_env(int flag)
   Controls use of environment information about terminal size

ncurses_use_extended_names
int ncurses_use_extended_names(bool flag)
   Controls use of extended names in terminfo descriptions

ncurses_vidattr
int ncurses_vidattr(int intarg)
   ???

ncurses_vline
int ncurses_vline(int charattr, int n)
   Draws a vertical line at current position using
   an attributed character and max. n characters long

ncurses_waddch
int ncurses_waddch(resource window, int ch)
   Adds character at current position in a window and advance cursor

ncurses_waddstr
int ncurses_waddstr(resource window, string str [, int n])
   Outputs text at current postion in window

ncurses_wattroff
int ncurses_wattroff(resource window, int attrs)
   Turns off attributes for a window

ncurses_wattron
int ncurses_wattron(resource window, int attrs)
   Turns on attributes for a window

ncurses_wattrset
int ncurses_wattrset(resource window, int attrs)
   Set the attributes for a window

ncurses_wborder
int ncurses_wborder(resource window, int left, int right, int top, int bottom,
	int tl_corner, int tr_corner, int bl_corner, int br_corner)
   Draws a border around the window using attributed characters

ncurses_wclear
int ncurses_wclear(resource window)
   Clears window

ncurses_wcolor_set
int ncurses_wcolor_set(resource window, int color_pair)
   Sets windows color pairings

ncurses_werase
int ncurses_werase(resource window)
   Erase window contents

ncurses_wgetch
int ncurses_wgetch(resource window)
   Reads a character from keyboard (window)

ncurses_whline
int ncurses_whline(resource window, int charattr, int n)
   Draws a horizontal line in a window at current position
   using an attributed character and max. n characters long

ncurses_wmouse_trafo
bool ncurses_wmouse_trafo(resource window, int &y, int &x, bool toscreen)
   Transforms window/stdscr coordinates

ncurses_wmove
int ncurses_wmove(resource window, int y, int x)
   Moves windows output position

ncurses_wnoutrefresh
int ncurses_wnoutrefresh(resource window)
   Copies window to virtual screen

ncurses_wrefresh
int ncurses_wrefresh(resource window)
   Refreshes window on terminal screen

ncurses_wstandend
int ncurses_wstandend(resource window)
   End standout mode for a window

ncurses_wstandout
int ncurses_wstandout(resource window)
   Enter standout mode for a window

ncurses_wvline
int ncurses_wvline(resource window, int charattr, int n)
   Draws a vertical line in a window at current position
   using an attributed character and max. n characters long

oci_bind_by_name
bool oci_bind_by_name(resource stmt, string name, mixed &var [, int maxlength [, int type]])
   Bind a PHP variable to an Oracle placeholder by name

oci_cancel
bool oci_cancel(resource stmt)
   Cancel reading from a cursor

oci_close
bool oci_close(resource conn)
   Disconnect from database

oci_collection_append
bool oci_collection_append(string value)
   Append an object to the collection

oci_collection_assign
bool oci_collection_assign(object from)
   Assign a collection from another existing collection

oci_collection_element_assign
bool oci_collection_element_assign(int index, string val)
   Assign element val to collection at index ndx

oci_collection_element_get
string oci_collection_element_get(int ndx)
   Retrieve the value at collection index ndx

oci_collection_max
int oci_collection_max()
   Return the max value of a collection.
   For a varray this is the maximum length of the array

oci_collection_size
int oci_collection_size()
   Return the size of a collection

oci_collection_trim
bool oci_collection_trim(int num)
   Trim num elements from the end of a collection

oci_commit
bool oci_commit(resource conn)
   Commit the current context

oci_connect
resource oci_connect(string user, string pass [, string db])
   Connect to an Oracle database and log on. Returns a new session.

oci_define_by_name
bool oci_define_by_name(resource stmt, string name, mixed &var [, int type])
   Define a PHP variable to an Oracle column by name

oci_error
array oci_error([resource stmt|conn|global])
   Return the last error of stmt|conn|global.
   If no error happened returns false.

oci_execute
bool oci_execute(resource stmt [, int mode])
   Execute a parsed statement

oci_fetch
bool oci_fetch(resource stmt)
   Prepare a new row of data for reading

oci_fetch_all
int oci_fetch_all(resource stmt, array &output [, int skip[, int maxrows[, int flags]]])
   Fetch all rows of result data into an array

oci_fetch_array
array oci_fetch_array( resource stmt [, int mode ])
   Fetch a result row as an array

oci_fetch_assoc
array oci_fetch_assoc( resource stmt )
   Fetch a result row as an associative array

oci_fetch_object
object oci_fetch_object( resource stmt )
   Fetch a result row as an object

oci_fetch_row
array oci_fetch_row( resource stmt )
   Fetch a result row as an enumerated array

oci_field_is_null
bool oci_field_is_null(resource stmt, int col)
   Tell whether a column is NULL

oci_field_name
string oci_field_name(resource stmt, int col)
   Tell the name of a column

oci_field_precision
int oci_field_precision(resource stmt, int col)
   Tell the precision of a column

oci_field_scale
int oci_field_scale(resource stmt, int col)
   Tell the scale of a column

oci_field_size
int oci_field_size(resource stmt, int col)
   Tell the maximum data size of a column

oci_field_type
mixed oci_field_type(resource stmt, int col)
   Tell the data type of a column

oci_field_type_raw
int oci_field_type_raw(resource stmt, int col)
   Tell the raw oracle data type of a column

oci_free_collection
bool oci_free_collection()
   Deletes collection object

oci_free_descriptor
bool oci_free_descriptor()
   Deletes large object description

oci_free_statement
bool oci_free_statement(resource stmt)
   Free all resources associated with a statement

oci_internal_debug
void oci_internal_debug(int onoff)
   Toggle internal debugging output for the OCI extension

oci_lob_append
bool oci_lob_append( object lob )
   Appends data from a LOB to another LOB

oci_lob_close
bool oci_lob_close()
   Closes lob descriptor

oci_lob_copy
bool oci_lob_copy( object lob_to, object lob_from [, int length ] )
   Copies data from a LOB to another LOB

oci_lob_eof
bool oci_lob_eof()
   Checks if EOF is reached

oci_lob_erase
int oci_lob_erase( [ int offset [, int length ] ] )
   Erases a specified portion of the internal LOB,
   starting at a specified offset

oci_lob_export
bool oci_lob_export([string filename [, int start [, int length]]])
   Writes a large object into a file

oci_lob_flush
bool oci_lob_flush( [ int flag ] )
   Flushes the LOB buffer

oci_lob_import
bool oci_lob_import( string filename )
   Saves a large object to file

oci_lob_is_equal
bool oci_lob_is_equal( object lob1, object lob2 )
   Tests to see if two LOB/FILE locators are equal

oci_lob_load
string oci_lob_load()
   Loads a large object

oci_lob_read
string oci_lob_read( int length )
   Reads particular part of a large object

oci_lob_rewind
bool oci_lob_rewind()
   Rewind pointer of a LOB

oci_lob_save
bool oci_lob_save( string data [, int offset ])
   Saves a large object

oci_lob_seek
bool oci_lob_seek( int offset [, int whence ])
   Moves the pointer of a LOB

oci_lob_size
int oci_lob_size()
   Returns size of a large object

oci_lob_tell
int oci_lob_tell()
   Tells LOB pointer position

oci_lob_truncate
bool oci_lob_truncate( [ int length ])
   Truncates a LOB

oci_lob_write
int oci_lob_write( string string [, int length ])
   Writes data to current position of a LOB

oci_lob_write_temporary
bool oci_lob_write_temporary(string var [, int lob_type])
   Writes temporary blob

oci_new_collection
object oci_new_collection(resource connection, string tdo [, string schema])
   Initialize a new collection

oci_new_connect
resource oci_new_connect(string user, string pass [, string db])
   Connect to an Oracle database and log on. Returns a new session.

oci_new_cursor
resource oci_new_cursor(resource conn)
   Return a new cursor (Statement-Handle)
   - use this to bind ref-cursors!

oci_new_descriptor
object oci_new_descriptor(resource connection [, int type])
   Initialize a new empty descriptor LOB/FILE (LOB is default)

oci_num_fields
int oci_num_fields(resource stmt)
   Return the number of result columns in a statement

oci_num_rows
int oci_num_rows(resource stmt)
   Return the row count of an OCI statement

oci_parse
resource oci_parse(resource conn, string query)
   Parse a query and return a statement

oci_password_change
bool oci_password_change(resource conn, string username, string old_password, string new_password)
   Changes the password of an account

oci_pconnect
resource oci_pconnect(string user, string pass [, string db])
   Connect to an Oracle database using a persistent connection
   and log on. Returns a new session.

oci_result
string oci_result(resource stmt, mixed column)
   Return a single column of result data

oci_rollback
bool oci_rollback(resource conn)
   Rollback the current context

oci_server_version
string oci_server_version(resource conn)
   Return a string containing server version information

oci_set_prefetch
bool oci_set_prefetch(resource stmt, int prefetch_rows)
   Sets the number of rows to be prefetched
   on execute to prefetch_rows for stmt

oci_statement_type
string oci_statement_type(resource stmt)
   Return the query type of an OCI statement

ocifetchinto
int ocifetchinto(resource stmt, array &output [, int mode])
   Fetch a row of result data into an array

ocigetbufferinglob
bool ocigetbufferinglob()
   Returns current state of buffering for a LOB

ocisetbufferinglob
bool ocisetbufferinglob( boolean flag )
   Enables/disables buffering for a LOB

birdstep_autocommit
bool birdstep_autocommit(int index)

birdstep_close
bool birdstep_close(int id)

birdstep_commit
bool birdstep_commit(int index)

birdstep_connect
int birdstep_connect(string server, string user, string pass)

birdstep_exec
int birdstep_exec(int index, string exec_str)

birdstep_fetch
bool birdstep_fetch(int index)

birdstep_fieldname
string birdstep_fieldname(int index, int col)

birdstep_fieldnum
int birdstep_fieldnum(int index)

birdstep_freeresult
bool birdstep_freeresult(int index)

birdstep_off_autocommit
bool birdstep_off_autocommit(int index)

birdstep_result
mixed birdstep_result(int index, int col)

birdstep_rollback
bool birdstep_rollback(int index)

odbc_autocommit
mixed odbc_autocommit(resource connection_id [, int OnOff])
   Toggle autocommit mode or get status

odbc_binmode
bool odbc_binmode(int result_id, int mode)
   Handle binary column data

odbc_close
void odbc_close(resource connection_id)
   Close an ODBC connection

odbc_close_all
void odbc_close_all(void)
   Close all ODBC connections

odbc_columnprivileges
resource odbc_columnprivileges(resource connection_id, string catalog, string schema, string table, string column)
   Returns a result identifier that can be used
   to fetch a list of columns and associated privileges
   for the specified table

odbc_columns
resource odbc_columns(resource connection_id, string qualifier, string owner, string table_name, string column_name)
   Returns a result identifier that can be used
   to fetch a list of column names in specified tables

odbc_commit
bool odbc_commit(resource connection_id)
   Commit an ODBC transaction

odbc_connect
resource odbc_connect(string DSN, string user, string password [, int cursor_option])
   Connect to a datasource

odbc_cursor
string odbc_cursor(resource result_id)
   Get cursor name

odbc_data_source
array odbc_data_source(resource connection_id, int fetch_type)
   Return information about the currently connected data source

odbc_error
string odbc_error([resource connection_id])
   Get the last error code

odbc_errormsg
string odbc_errormsg([resource connection_id])
   Get the last error message

odbc_exec
resource odbc_exec(resource connection_id, string query [, int flags])
   Prepare and execute an SQL statement

odbc_execute
bool odbc_execute(resource result_id [, array parameters_array])
   Execute a prepared statement

odbc_fetch_array
array odbc_fetch_array(int result [, int rownumber])
   Fetch a result row as an associative array

odbc_fetch_into
int odbc_fetch_into(resource result_id, array result_array, [, int rownumber])
   Fetch one result row into an array

odbc_fetch_object
object odbc_fetch_object(int result [, int rownumber])
   Fetch a result row as an object

odbc_fetch_row
bool odbc_fetch_row(resource result_id [, int row_number])
   Fetch a row

odbc_field_len
int odbc_field_len(resource result_id, int field_number)
   Get the length (precision) of a column

odbc_field_name
string odbc_field_name(resource result_id, int field_number)
   Get a column name

odbc_field_num
int odbc_field_num(resource result_id, string field_name)
   Return column number

odbc_field_scale
int odbc_field_scale(resource result_id, int field_number)
   Get the scale of a column

odbc_field_type
string odbc_field_type(resource result_id, int field_number)
   Get the datatype of a column

odbc_foreignkeys
resource odbc_foreignkeys(resource connection_id, string pk_qualifier, string pk_owner, string pk_table,
	string fk_qualifier, string fk_owner, string fk_table)
   Returns a result identifier to either a list of
   foreign keys in the specified table or a list of
   foreign keys in other tables that refer to the
   primary key in the specified table

odbc_free_result
bool odbc_free_result(resource result_id)
   Free resources associated with a result

odbc_gettypeinfo
resource odbc_gettypeinfo(resource connection_id [, int data_type])
   Returns a result identifier containing information
   about data types supported by the data source

odbc_longreadlen
bool odbc_longreadlen(int result_id, int length)
   Handle LONG columns

odbc_next_result
bool odbc_next_result(resource result_id)
   Checks if multiple results are avaiable

odbc_num_fields
int odbc_num_fields(resource result_id)
   Get number of columns in a result

odbc_num_rows
int odbc_num_rows(resource result_id)
   Get number of rows in a result

odbc_pconnect
resource odbc_pconnect(string DSN, string user, string password [, int cursor_option])
   Establish a persistent connection to a datasource

odbc_prepare
resource odbc_prepare(resource connection_id, string query)
   Prepares a statement for execution

odbc_primarykeys
resource odbc_primarykeys(resource connection_id, string qualifier, string owner, string table)
   Returns a result identifier listing the column
   names that comprise the primary key for a table

odbc_procedurecolumns
resource odbc_procedurecolumns(resource connection_id [, string qualifier, string owner, string proc, string column])
   Returns a result identifier containing the list
   of input and output parameters, as well as the
   columns that make up the result set for the specified procedures

odbc_procedures
resource odbc_procedures(resource connection_id [, string qualifier, string owner, string name])
   Returns a result identifier containg the list of
   procedure names in a datasource

odbc_result
mixed odbc_result(resource result_id, mixed field)
   Get result data

odbc_result_all
int odbc_result_all(resource result_id [, string format])
   Print result as HTML table

odbc_rollback
bool odbc_rollback(resource connection_id)
   Rollback a transaction

odbc_setoption
bool odbc_setoption(resource conn_id|result_id, int which, int option, int value)
   Sets connection or statement options

odbc_specialcolumns
resource odbc_specialcolumns(resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable)
   Returns a result identifier containing either
   the optimal set of columns that uniquely identifies
   a row in the table or columns that are automatically
   updated when any value in the row is updated by a transaction

odbc_statistics
resource odbc_statistics(resource connection_id, string qualifier, string owner, string name, int unique, int accuracy)
   Returns a result identifier that contains statistics
   about a single table and the indexes associated with the table

odbc_tableprivileges
resource odbc_tableprivileges(resource connection_id, string qualifier, string owner, string name)
   Returns a result identifier containing a list
   of tables and the privileges associated with each table

odbc_tables
resource odbc_tables(resource connection_id [, string qualifier, string owner, string name, string table_types])
   Call the SQLTables function

solid_fetch_prev
bool solid_fetch_prev(resource result_id)

openssl_csr_export
bool openssl_csr_export(resource csr, string &out [, bool notext=true])
   Exports a CSR to file or a var

openssl_csr_export_to_file
bool openssl_csr_export_to_file(resource csr, string outfilename [, bool notext=true])
   Exports a CSR to file

openssl_csr_new
bool openssl_csr_new(array dn, resource &privkey [, array configargs, array extraattribs])
   Generates a privkey and CSR

openssl_csr_sign
resource openssl_csr_sign(mixed csr, mixed x509, mixed priv_key, long days [, array config_args [, long serial]])
   Signs a cert with another CERT

openssl_error_string
mixed openssl_error_string(void)
   Returns a description of the last error,
   and alters the index of the error messages.
   Returns false when the are no more messages

openssl_open
bool openssl_open(string data, &string opendata, string ekey, mixed privkey)
   Opens data

openssl_pkcs7_decrypt
bool openssl_pkcs7_decrypt(string infilename, string outfilename, mixed recipcert [, mixed recipkey])
   Decrypts the S/MIME message in the file name infilename
   and output the results to the file name outfilename.
   recipcert is a CERT for one of the recipients.
   recipkey specifies the private key matching recipcert,
   if recipcert does not include the key

openssl_pkcs7_encrypt
bool openssl_pkcs7_encrypt(string infile, string outfile, mixed recipcerts, array headers [, long flags [, long cipher]])
   Encrypts the message in the file named infile with the certificates
   in recipcerts and output the result to the file named outfile

openssl_pkcs7_sign
bool openssl_pkcs7_sign(string infile, string outfile, mixed signcert, mixed signkey, array headers [, long flags [, string extracertsfilename]])
   Signs the MIME message in the file named infile with
   signcert/signkey and output the result to file name outfile.
   headers lists plain text headers to exclude from the
   signed portion of the message, and should include to,
   from and subject as a minimum

openssl_pkcs7_verify
bool openssl_pkcs7_verify(string filename, long flags [, string signerscerts [, array cainfo [, string extracerts]]])
   Verifys that the data block is intact, the signer is who they
   say they are, and returns the CERTs of the signers

openssl_pkey_export
bool openssl_pkey_export(mixed key, &mixed out [, string passphrase [, array config_args]])
   Gets an exportable representation of a key into a string or file

openssl_pkey_export_to_file
bool openssl_pkey_export_to_file(mixed key, string outfilename [, string passphrase, array config_args])
   Gets an exportable representation of a key into a file

openssl_pkey_free
void openssl_pkey_free(int key)
   Frees a key

openssl_pkey_get_private
int openssl_pkey_get_private(string key [, string passphrase])
   Gets private keys

openssl_pkey_get_public
int openssl_pkey_get_public(mixed cert)
   Gets public key from X.509 certificate

openssl_pkey_new
resource openssl_pkey_new([array configargs])
   Generates a new private key

openssl_private_decrypt
bool openssl_private_decrypt(string data, string decrypted, mixed key [, int padding])
   Decrypts data with private key

openssl_private_encrypt
bool openssl_private_encrypt(string data, string crypted, mixed key [, int padding])
   Encrypts data with private key

openssl_public_decrypt
bool openssl_public_decrypt(string data, string crypted, resource key [, int padding])
   Decrypts data with public key

openssl_public_encrypt
bool openssl_public_encrypt(string data, string crypted, mixed key [, int padding])
   Encrypts data with public key

openssl_seal
int openssl_seal(string data, &string sealdata, &array ekeys, array pubkeys)
   Seals data

openssl_sign
bool openssl_sign(string data, &string signature, mixed key)
   Signs data

openssl_verify
int openssl_verify(string data, string signature, mixed key)
   Verifys data

openssl_x509_check_private_key
bool openssl_x509_check_private_key(mixed cert, mixed key)
   Checks if a private key corresponds to a CERT

openssl_x509_checkpurpose
int openssl_x509_checkpurpose(mixed x509cert, int purpose, array cainfo [, string untrustedfile])
   Checks the CERT to see if it can be used for the purpose in purpose.
   cainfo holds information about trusted CAs

openssl_x509_export
bool openssl_x509_export(mixed x509, string &out [, bool notext = true])
   Exports a CERT to file or a var

openssl_x509_export_to_file
bool openssl_x509_export_to_file(mixed x509, string outfilename [, bool notext = true])
   Exports a CERT to file or a var

openssl_x509_free
void openssl_x509_free(resource x509)
   Frees X.509 certificates

openssl_x509_parse
array openssl_x509_parse(mixed x509 [, bool shortnames=true])
   Returns an array of the fields/values of the CERT

openssl_x509_read
resource openssl_x509_read(mixed cert)
   Reads X.509 certificates

ora_bind
bool ora_bind(resource cursor, string php_variable_name, string sql_parameter_name, int length [, int type])
   Bind a PHP variable to an Oracle parameter

ora_close
bool ora_close(resource cursor)
   Close an Oracle cursor

ora_columnname
string ora_columnname(resource cursor, int column)
   Get the name of an Oracle result column

ora_columnsize
int ora_columnsize(int cursor, int column)
   Return the size of the column

ora_columntype
string ora_columntype(resource cursor, int column)
   Get the type of an Oracle result column

ora_commit
bool ora_commit(resource connection)
   Commit an Oracle transaction

ora_commitoff
bool ora_commitoff(resource connection)
   Disable automatic commit

ora_commiton
bool ora_commiton(resource connection)
   Enable automatic commit

ora_do
resource ora_do(resource connection, resource cursor)
   Parse and execute a statement and fetch first result row

ora_error
string ora_error(resource cursor_or_connection)
   Get an Oracle error message

ora_errorcode
int ora_errorcode(resource cursor_or_connection)
   Get an Oracle error code

ora_exec
bool ora_exec(resource cursor)
   Execute a parsed statement

ora_fetch
bool ora_fetch(resource cursor)
   Fetch a row of result data from a cursor

ora_fetch_into
int ora_fetch_into(resource cursor, array result [, int flags])
   Fetch a row into the specified result array

ora_getcolumn
mixed ora_getcolumn(resource cursor, int column)
   Get data from a fetched row

ora_logoff
bool ora_logoff(resource connection)
   Close an Oracle connection

ora_logon
resource ora_logon(string user, string password)
   Open an Oracle connection

ora_numcols
int ora_numcols(resource cursor)
   Returns the numbers of columns in a result

ora_numrows
int ora_numrows(resource cursor)
   Returns the number of rows in a result

ora_open
resource ora_open(resource connection)
   Open an Oracle cursor

ora_parse
bool ora_parse(resource cursor, string sql_statement [, int defer])
   Parse an Oracle SQL statement

ora_plogon
resource ora_plogon(string user, string password)
   Open a persistent Oracle connection

ora_rollback
bool ora_rollback(resource connection)
   Roll back an Oracle transaction

ovrimos_autocommit
int ovrimos_autocommit(int connection_id, int OnOff)
   Toggle autocommit mode     There can be problems with pconnections!

ovrimos_close
void ovrimos_close(int connection)
   Close a connection

ovrimos_commit
bool ovrimos_commit(int connection_id)
   Commit an ovrimos transaction

ovrimos_connect
int ovrimos_connect(string host, string db, string user, string password)
   Connect to an Ovrimos database

ovrimos_cursor
string ovrimos_cursor(int result_id)
   Get cursor name

ovrimos_exec
int ovrimos_exec(int connection_id, string query)
   Prepare and execute an SQL statement

ovrimos_execute
bool ovrimos_execute(int result_id [, array parameters_array])
   Execute a prepared statement

ovrimos_fetch_into
bool ovrimos_fetch_into(int result_id, array result_array [, string how [, int rownumber]])
   Fetch one result row into an array

ovrimos_fetch_row
bool ovrimos_fetch_row(int result_id [, int how [, int row_number]])
   Fetch a row

ovrimos_field_len
int ovrimos_field_len(int result_id, int field_number)
   Get the length of a column

ovrimos_field_name
string ovrimos_field_name(int result_id, int field_number)
   Get a column name

ovrimos_field_num
int ovrimos_field_num(int result_id, string field_name)
   Return column number

ovrimos_field_type
int ovrimos_field_type(int result_id, int field_number)
   Get the datatype of a column

ovrimos_free_result
bool ovrimos_free_result(int result_id)
   Free resources associated with a result

ovrimos_longreadlen
bool ovrimos_longreadlen(int result_id, int length)
   Handle LONG columns

ovrimos_num_fields
int ovrimos_num_fields(int result_id)
   Get number of columns in a result

ovrimos_num_rows
int ovrimos_num_rows(int result_id)
   Get number of rows in a result

ovrimos_prepare
int ovrimos_prepare(int connection_id, string query)
   Prepares a statement for execution

ovrimos_result
string ovrimos_result(int result_id, mixed field)
   Get result data

ovrimos_result_all
int ovrimos_result_all(int result_id [, string format])
   Print result as HTML table

ovrimos_rollback
bool ovrimos_rollback(int connection_id)
   Rollback a transaction

ovrimos_setoption
int ovrimos_setoption(int conn_id|result_id, int which, int option, int value)
   Sets connection or statement options

pcntl_alarm
int pcntl_alarm(int seconds)
   Set an alarm clock for delivery of a signal

pcntl_exec
bool pcntl_exec(string path [, array args [, array envs]])
   Executes specified program in current process space
   as defined by exec(2)

pcntl_fork
int pcntl_fork(void)
   Forks the currently running process following
   the same behavior as the UNIX fork() system call

pcntl_getpriority
int pcntl_getpriority([int pid [, int process_identifier]])
   Get the priority of any process

pcntl_setpriority
bool pcntl_setpriority(int priority [, int pid [, int process_identifier]])
   Change the priority of any process

pcntl_signal
bool pcntl_signal(int signo, callback handle [, bool restart_syscalls])
   Assigns a system signal handler to a PHP function

pcntl_wait
int pcntl_wait(int &status)
   Waits on or returns the status of a forked child
   as defined by the waitpid() system call

pcntl_waitpid
int pcntl_waitpid(int pid, int &status, int options)
   Waits on or returns the status of a forked child
   as defined by the waitpid() system call

pcntl_wexitstatus
int pcntl_wexitstatus(int status)
   Returns the status code of a child's exit

pcntl_wifexited
bool pcntl_wifexited(int status)
   Returns true if the child status code
   represents a successful exit

pcntl_wifsignaled
bool pcntl_wifsignaled(int status)
   Returns true if the child status code represents
   a process that was terminated due to a signal

pcntl_wifstopped
bool pcntl_wifstopped(int status)
   Returns true if the child status code represents
   a stopped process (WUNTRACED must have been used with waitpid)

pcntl_wstopsig
int pcntl_wstopsig(int status)
   Returns the number of the signal that caused
   the process to stop who's status code is passed

pcntl_wtermsig
int pcntl_wtermsig(int status)
   Returns the number of the signal that terminated
   the process who's status code is passed

preg_grep
array preg_grep(string regex, array input)
   Searches array and returns entries which match regex

preg_match
int preg_match(string pattern, string subject [, array subpatterns [, int flags [, int offset]]])
   Perform a Perl-style regular expression match

preg_match_all
int preg_match_all(string pattern, string subject, array subpatterns [, int flags [, int offset]])
   Perform a Perl-style global regular expression match

preg_quote
string preg_quote(string str, string delim_char)
   Quote regular expression characters plus an optional character

preg_replace
string preg_replace(mixed regex, mixed replace, mixed subject [, int limit])
   Perform Perl-style regular expression replacement.

preg_replace_callback
string preg_replace_callback(mixed regex, mixed callback, mixed subject [, int limit])
   Perform Perl-style regular expression replacement
   using replacement callback.

preg_split
array preg_split(string pattern, string subject [, int limit [, int flags]])
   Split string into an array using a perl-style
   regular expression as a delimiter

pfpro_cleanup
bool pfpro_cleanup()
   Shuts down the Payflow Pro library

pfpro_init
bool pfpro_init()
   Initializes the Payflow Pro library

pfpro_process
array pfpro_process(array parmlist [, string hostaddress [, int port [, int timeout
	[, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]])
   Payflow Pro transaction processing using arrays

pfpro_process_raw
string pfpro_process_raw(string parmlist [, string hostaddress [, int port [, int timeout
	[, string proxyAddress [, int proxyPort [, string proxyLogon [, string proxyPassword]]]]]]])
   Raw Payflow Pro transaction processing

pfpro_version
string pfpro_version()
   Returns the version of the Payflow Pro library

pg_affected_rows
int pg_affected_rows(resource result)
   Returns the number of affected tuples

pg_cancel_query
bool pg_cancel_query(resource connection)
   Cancel request

pg_client_encoding
string pg_client_encoding([resource connection])
   Get the current client encoding

pg_close
bool pg_close([resource connection])
   Close a PostgreSQL connection

pg_connect
resource pg_connect(string connection_string [, int connect_type] | [string host, string port [, string options [, string tty,]]] string database)
   Open a PostgreSQL connection

pg_connection_busy
bool pg_connection_busy(resource connection)
   Get connection is busy or not

pg_connection_reset
bool pg_connection_reset(resource connection)
   Reset connection (reconnect)

pg_connection_status
int pg_connection_status(resource connnection)
   Get connection status

pg_convert
array pg_convert(resource db, string table, array values[, int options])
   Check and convert values for PostgreSQL SQL statement

pg_copy_from
bool pg_copy_from(resource connection, string table_name, array rows [, string delimiter [, string null_as]])
   Copy table from array

pg_copy_to
array pg_copy_to(resource connection, string table_name [, string delimiter [, string null_as]])
   Copy table to array

pg_dbname
string pg_dbname([resource connection])
   Get the database name

pg_delete
mixed pg_delete(resource db, string table, array ids[, int options])
   Delete records has ids (id=>value)

pg_end_copy
bool pg_end_copy([resource connection])
   Sync with backend. Completes the Copy command

pg_escape_bytea
string pg_escape_bytea(string data)
   Escape binary for bytea type

pg_escape_string
string pg_escape_string(string data)
   Escape string for text/char type

pg_fetch_all
array pg_fetch_all(resource result)
   Fetch all rows into array

pg_fetch_array
array pg_fetch_array(resource result [, int row [, int result_type]])
   Fetch a row as an array

pg_fetch_assoc
array pg_fetch_assoc(resource result [, int row])
   Fetch a row as an assoc array

pg_fetch_object
object pg_fetch_object(resource result [, int row [, string class_name [, NULL|array ctor_params]]])
   Fetch a row as an object

pg_fetch_result
mixed pg_fetch_result(resource result, [int row_number,] mixed field_name)
   Returns values from a result identifier

pg_fetch_row
array pg_fetch_row(resource result [, int row [, int result_type]])
   Get a row as an enumerated array

pg_field_is_null
int pg_field_is_null(resource result, [int row,] mixed field_name_or_number)
   Test if a field is NULL

pg_field_name
string pg_field_name(resource result, int field_number)
   Returns the name of the field

pg_field_num
int pg_field_num(resource result, string field_name)
   Returns the field number of the named field

pg_field_prtlen
int pg_field_prtlen(resource result, [int row,] mixed field_name_or_number)
   Returns the printed length

pg_field_size
int pg_field_size(resource result, int field_number)
   Returns the internal size of the field

pg_field_type
string pg_field_type(resource result, int field_number)
   Returns the type name for the given field

pg_free_result
bool pg_free_result(resource result)
   Free result memory

pg_get_notify
array pg_get_notify([resource connection[, result_type]])
   Get asynchronous notification

pg_get_pid
int pg_get_pid([resource connection)
   Get backend(server) pid

pg_get_result
resource pg_get_result(resource connection)
   Get asynchronous query result

pg_host
string pg_host([resource connection])
   Returns the host name associated with the connection

pg_insert
mixed pg_insert(resource db, string table, array values[, int options])
   Insert values (filed=>value) to table

pg_last_error
string pg_last_error([resource connection])
   Get the error message string

pg_last_notice
string pg_last_notice(resource connection)
   Returns the last notice set by the backend

pg_last_oid
string pg_last_oid(resource result)
   Returns the last object identifier

pg_lo_close
bool pg_lo_close(resource large_object)
   Close a large object

pg_lo_create
int pg_lo_create([resource connection])
   Create a large object

pg_lo_export
bool pg_lo_export([resource connection, ] int objoid, string filename)
   Export large object direct to filesystem

pg_lo_import
int pg_lo_import([resource connection, ] string filename)
   Import large object direct from filesystem

pg_lo_open
resource pg_lo_open([resource connection,] int large_object_oid, string mode)
   Open a large object and return fd

pg_lo_read
string pg_lo_read(resource large_object [, int len])
   Read a large object

pg_lo_read_all
int pg_lo_read_all(resource large_object)
   Read a large object and send straight to browser

pg_lo_seek
bool pg_lo_seek(resource large_object, int offset [, int whence])
   Seeks position of large object

pg_lo_tell
int pg_lo_tell(resource large_object)
   Returns current position of large object

pg_lo_unlink
bool pg_lo_unlink([resource connection,] string large_object_oid)
   Delete a large object

pg_lo_write
int pg_lo_write(resource large_object, string buf [, int len])
   Write a large object

pg_meta_data
array pg_meta_data(resource db, string table)
   Get meta_data

pg_num_fields
int pg_num_fields(resource result)
   Return the number of fields in the result

pg_num_rows
int pg_num_rows(resource result)
   Return the number of rows in the result

pg_options
string pg_options([resource connection])
   Get the options associated with the connection

pg_parameter_status
string|false pg_parameter_status([resource connection,] string param_name)
   Returns the value of a server parameter

pg_pconnect
resource pg_pconnect(string connection_string | [string host, string port [, string options [, string tty,]]] string database)
   Open a persistent PostgreSQL connection

pg_ping
bool pg_ping([resource connection])
   Ping database. If connection is bad, try to reconnect.

pg_port
int pg_port([resource connection])
   Return the port number associated with the connection

pg_put_line
bool pg_put_line([resource connection,] string query)
   Send null-terminated string to backend server

pg_query
resource pg_query([resource connection,] string query)
   Execute a query

pg_result_error
string pg_result_error(resource result)
   Get error message associated with result

pg_result_seek
bool pg_result_seek(resource result, int offset)
   Set internal row offset

pg_result_status
mixed pg_result_status(resource result[, long result_type])
   Get status of query result

pg_select
mixed pg_select(resource db, string table, array ids[, int options])
   Select records that has ids (id=>value)

pg_send_query
bool pg_send_query(resource connection, string qeury)
   Send asynchronous query

pg_set_client_encoding
int pg_set_client_encoding([resource connection,] string encoding)
   Set client encoding

pg_trace
bool pg_trace(string filename [, string mode [, resource connection]])
   Enable tracing a PostgreSQL connection

pg_tty
string pg_tty([resource connection])
   Return the tty name associated with the connection

pg_unescape_bytea
string pg_unescape_bytea(string data)
   Unescape binary for bytea type

pg_untrace
bool pg_untrace([resource connection])
   Disable tracing of a PostgreSQL connection

pg_update
mixed pg_update(resource db, string table, array fields, array ids[, int options])
   Update table using values (field=>value) and ids (id=>value)

pg_version
array pg_version([resource connection])
   Returns an array with client, protocol
   and server version (when available)

posix_ctermid
string posix_ctermid(void)
   Generate terminal path name (POSIX.1, 4.7.1)

posix_get_last_error
int posix_get_last_error(void)
   Retrieve the error number
   set by the last posix function which failed.

posix_getcwd
string posix_getcwd(void)
   Get working directory pathname (POSIX.1, 5.2.2)

posix_getegid
int posix_getegid(void)
   Get the current effective group id (POSIX.1, 4.2.1)

posix_geteuid
int posix_geteuid(void)
   Get the current effective user id (POSIX.1, 4.2.1)

posix_getgid
int posix_getgid(void)
   Get the current group id (POSIX.1, 4.2.1)

posix_getgrgid
array posix_getgrgid(long gid)
   Group database access (POSIX.1, 9.2.1)

posix_getgrnam
array posix_getgrnam(string groupname)
   Group database access (POSIX.1, 9.2.1)

posix_getgroups
array posix_getgroups(void)
   Get supplementary group id's (POSIX.1, 4.2.3)

posix_getlogin
string posix_getlogin(void)
   Get user name (POSIX.1, 4.2.4)

posix_getpgid
int posix_getpgid(void)
   Get the process group id of the specified process
   (This is not a POSIX function, but a SVR4ism,
   so we compile conditionally)

posix_getpgrp
int posix_getpgrp(void)
   Get current process group id (POSIX.1, 4.3.1)

posix_getpid
int posix_getpid(void)
   Get the current process id (POSIX.1, 4.1.1)

posix_getppid
int posix_getppid(void)
   Get the parent process id (POSIX.1, 4.1.1)

posix_getpwnam
array posix_getpwnam(string groupname)
   User database access (POSIX.1, 9.2.2)

posix_getpwuid
array posix_getpwuid(long uid)
   User database access (POSIX.1, 9.2.2)

posix_getrlimit
array posix_getrlimit(void)
   Get system resource consumption limits
   (This is not a POSIX function, but a BSDism and a SVR4ism.
   We compile conditionally)

posix_getsid
int posix_getsid(void)
   Get process group id of session leader
   (This is not a POSIX function, but a SVR4ism,
   so be compile conditionally)

posix_getuid
int posix_getuid(void)
   Get the current user id (POSIX.1, 4.2.1)

posix_isatty
bool posix_isatty(int fd)
   Determine if filedesc is a tty (POSIX.1, 4.7.1)

posix_kill
bool posix_kill(int pid, int sig)
   Send a signal to a process (POSIX.1, 3.3.2)

posix_mkfifo
bool posix_mkfifo(string pathname, int mode)
   Make a FIFO special file (POSIX.1, 5.4.2)

posix_setegid
bool posix_setegid(long uid)
   Set effective group id

posix_seteuid
bool posix_seteuid(long uid)
   Set effective user id

posix_setgid
bool posix_setgid(int uid)
   Set group id (POSIX.1, 4.2.2)

posix_setpgid
bool posix_setpgid(int pid, int pgid)
   Set process group id for job control (POSIX.1, 4.3.3)

posix_setsid
int posix_setsid(void)
   Create session and set process group id (POSIX.1, 4.3.2)

posix_setuid
bool posix_setuid(long uid)
   Set user id (POSIX.1, 4.2.2)

posix_strerror
string posix_strerror(int errno)
   Retrieve the system error message associated with the given errno.

posix_times
array posix_times(void)
   Get process times (POSIX.1, 4.5.2)

posix_ttyname
string posix_ttyname(int fd)
   Determine terminal device name (POSIX.1, 4.7.2)

posix_uname
array posix_uname(void)
   Get system name (POSIX.1, 4.4.1)

pspell_add_to_personal
bool pspell_add_to_personal(int pspell, string word)
   Adds a word to a personal list

pspell_add_to_session
bool pspell_add_to_session(int pspell, string word)
   Adds a word to the current session

pspell_check
bool pspell_check(int pspell, string word)
   Returns true if word is valid

pspell_clear_session
bool pspell_clear_session(int pspell)
   Clears the current session

pspell_config_create
int pspell_config_create(string language [, string spelling [, string jargon [, string encoding]]])
   Create a new config to be used later to create a manager

pspell_config_data_dir
bool pspell_config_data_dir(int conf, string directory)
   location of language data files

pspell_config_dict_dir
bool pspell_config_dict_dir(int conf, string directory)
   location of the main word list

pspell_config_ignore
bool pspell_config_ignore(int conf, int ignore)
   Ignore words <= n chars

pspell_config_mode
bool pspell_config_mode(int conf, long mode)
   Select mode for config (PSPELL_FAST, PSPELL_NORMAL or PSPELL_BAD_SPELLERS)

pspell_config_personal
bool pspell_config_personal(int conf, string personal)
   Use a personal dictionary for this config

pspell_config_repl
bool pspell_config_repl(int conf, string repl)
   Use a personal dictionary with replacement pairs for this config

pspell_config_runtogether
bool pspell_config_runtogether(int conf, bool runtogether)
   Consider run-together words as valid components

pspell_config_save_repl
bool pspell_config_save_repl(int conf, bool save)
   Save replacement pairs when personal list is saved for this config

pspell_new
int pspell_new(string language [, string spelling [, string jargon [, string encoding [, int mode]]]])
   Load a dictionary

pspell_new_config
int pspell_new_config(int config)
   Load a dictionary based on the given config

pspell_new_personal
int pspell_new_personal(string personal, string language [, string spelling [, string jargon [, string encoding [, int mode]]]])
   Load a dictionary with a personal wordlist

pspell_save_wordlist
bool pspell_save_wordlist(int pspell)
   Saves the current (personal) wordlist

pspell_store_replacement
bool pspell_store_replacement(int pspell, string misspell, string correct)
   Notify the dictionary of a user-selected replacement

pspell_suggest
array pspell_suggest(int pspell, string word)
   Returns array of suggestions

readline
string readline([string prompt])
   Reads a line

readline_add_history
bool readline_add_history([string prompt])
   Adds a line to the history

readline_callback_handler_install
void readline_callback_handler_install(string prompt, mixed callback)
   Initializes the readline callback interface and terminal,
   prints the prompt and returns immediately

readline_callback_handler_remove
bool readline_callback_handler_remove()
   Removes a previously installed callback handler
   and restores terminal settings

readline_callback_read_char
void readline_callback_read_char()
   Informs the readline callback interface
   that a character is ready for input

readline_clear_history
bool readline_clear_history(void)
   Clears the history

readline_completion_function
bool readline_completion_function(string funcname)
   Readline completion function?

readline_info
mixed readline_info([string varname] [, string newvalue])
   Gets/sets various internal readline variables.

readline_list_history
array readline_list_history(void)
   Lists the history

readline_read_history
bool readline_read_history([string filename] [, int from] [,int to])
   Reads the history

readline_write_history
bool readline_write_history([string filename])
   Writes the history

recode_file
bool recode_file(string request, resource input, resource output)
   Recode file input into file output according to request

recode_string
string recode_string(string request, string str)
   Recode string str according to request string

session_cache_expire
int session_cache_expire([int new_cache_expire])
   Return the current cache expire.
   If new_cache_expire is given, the current
   cache_expire is replaced with new_cache_expire

session_cache_limiter
string session_cache_limiter([string new_cache_limiter])
   Return the current cache limiter.
   If new_cache_limited is given, the current
   cache_limiter is replaced with new_cache_limiter

session_decode
bool session_decode(string data)
   Deserializes data and reinitializes the variables

session_destroy
bool session_destroy(void)
   Destroy the current session
   and all data associated with it

session_encode
string session_encode(void)
   Serializes the current setup
   and returns the serialized representation

session_get_cookie_params
array session_get_cookie_params(void)
   Return the session cookie parameters

session_id
string session_id([string newid])
   Return the current session id. If newid is given,
   the session id is replaced with newid

session_is_registered
bool session_is_registered(string varname)
   Checks if a variable is registered in session

session_module_name
string session_module_name([string newname])
   Return the current module name used for accessing session data.
   If newname is given, the module name is replaced with newname

session_name
string session_name([string newname])
   Return the current session name. If newname is given,
   the session name is replaced with newname

session_regenerate_id
bool session_regenerate_id()
   Update the current session id with a newly generated one.

session_register
bool session_register(mixed var_names [, mixed ...])
   Adds varname(s) to the list of variables
   which are freezed at the session end

session_save_path
string session_save_path([string newname])
   Return the current save path passed to module_name.
   If newname is given, the save path is replaced with newname

session_set_cookie_params
void session_set_cookie_params(int lifetime [, string path [, string domain [, bool secure]]])
   Set session cookie parameters

session_set_save_handler
void session_set_save_handler(string open, string close, string read, string write, string destroy, string gc)
   Sets user-level functions

session_start
bool session_start(void)
   Begin session - reinitializes freezed variables,
   registers browsers etc

session_unregister
bool session_unregister(string varname)
   Removes varname from the list of variables
   which are freezed at the session end

session_unset
void session_unset(void)
   Unset all registered variables

session_write_close
void session_write_close(void)
   Write session data and end session

shmop_close
void shmop_close(int shmid)
   closes a shared memory segment

shmop_delete
bool shmop_delete(int shmid)
   mark segment for deletion

shmop_open
int shmop_open(int key, string flags, int mode, int size)
   gets and attaches a shared memory segment

shmop_read
string shmop_read(int shmid, int start, int count)
   reads from a shm segment

shmop_size
int shmop_size(int shmid)
   returns the shm size

shmop_write
int shmop_write(int shmid, string data, int offset)
   writes to a shared memory segment

impleXMLElement::__construct
SimpleXMLElement::__construct()
   SimpleXMLElement constructor

SimpleXMLElement::asXML
string SimpleXMLElement::asXML([string filename])
   Return a well-formed XML string based on SimpleXML element

SimpleXMLElement::attributes
array SimpleXMLElement::attributes([string ns])
   Identifies an element's attributes

SimpleXMLElement::children
object SimpleXMLElement::children()
   Finds children of given node

simplexml_import_dom
simplemxml_element simplexml_import_dom(domNode node [, string class_name])
   Get a simplexml_element object from dom to allow for processing

simplexml_load_file
simplemxml_element simplexml_load_file(string filename [, string class_name])
   Load a filename and return a simplexml_element object
   to allow for processing

simplexml_load_string
simplemxml_element simplexml_load_string(string data [, string class_name])
   Load a string and return a simplexml_element object
   to allow for processing

confirm_extname_compiled
string confirm_extname_compiled(string arg)
   Return a string to confirm that the module is compiled in

snmp3_get
int snmp3_get(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase,
	string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
   Fetch the value of a SNMP object

snmp3_getnext
int snmp3_getnext(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase,
	string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
   Fetch the value of a SNMP object

snmp3_real_walk
int snmp3_real_walk(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase,
	string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
   Fetch the value of a SNMP object

snmp3_set
int snmp3_set(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase,
	string priv_protocol, string priv_passphrase, string object_id, string type, mixed value [, int timeout [, int retries]])
   Fetch the value of a SNMP object

snmp3_walk
int snmp3_walk(string host, string sec_name, string sec_level, string auth_protocol, string auth_passphrase,
	string priv_protocol, string priv_passphrase, string object_id [, int timeout [, int retries]])
   Fetch the value of a SNMP object

snmp_get_quick_print
bool snmp_get_quick_print(void)
   Return the current status of quick_print

snmp_get_valueretrieval
int snmp_get_valueretrieval()
   Return the method how the SNMP values will be returned

snmp_read_mib
int snmp_read_mib(string filename)
   Reads and parses a MIB file into the active MIB tree.

snmp_set_enum_print
void snmp_set_enum_print(int enum_print)
   Return all values that are enums with their enum value
   instead of the raw integer

snmp_set_oid_numeric_print
void snmp_set_oid_numeric_print(int oid_numeric_print)
   Return all objects including their respective object id
   withing the specified one

snmp_set_quick_print
void snmp_set_quick_print(int quick_print)
   Return all objects including their respective object id
   withing the specified one

snmp_set_valueretrieval
int snmp_set_valueretrieval(int method)
   Specify the method how the SNMP values will be returned

snmpget
string snmpget(string host, string community, string object_id [, int timeout [, int retries]])
   Fetch a SNMP object

snmpgetnext
string snmpgetnext(string host, string community, string object_id [, int timeout [, int retries]])
   Fetch a SNMP object

snmprealwalk
array snmprealwalk(string host, string community, string object_id [, int timeout [, int retries]])
   Return all objects including their respective object id
   withing the specified one

snmpset
int snmpset(string host, string community, string object_id, string type, mixed value [, int timeout [, int retries]])
   Set the value of a SNMP object

snmpwalk
array snmpwalk(string host, string community, string object_id [, int timeout [, int retries]])
   Return all objects under the specified object id

SoapClient::SoapClient
object SoapClient::SoapClient( mixed wsdl [, array options])
   SoapClient constructor

SoapClient::__call
mixed SoapClient::__call(string function_name [, array arguments [, array options [, array input_headers [, array output_headers]]]])
   Calls a SOAP function

SoapClient::__doRequest
string SoapClient::__doRequest()
   SoapClient::__doRequest()

SoapClient::__getFunctions
array SoapClient::__getFunctions( void )
   Returns list of SOAP functions

SoapClient::__getLastRequest
string SoapClient::__getLastRequest( void )
   Returns last SOAP request

SoapClient::__getLastRequestHeaders
string SoapClient::__getLastRequestHeaders(void)
   Returns last SOAP request headers

SoapClient::__getLastResponse
object SoapClient::__getLastResponse( void )
   Returns last SOAP response

SoapClient::__getLastResponseHeaders
string SoapClient::__getLastResponseHeaders(void)
   Returns last SOAP response headers

SoapClient::__getTypes
array SoapClient::__getTypes( void )
   Returns list of SOAP types

SoapFault::SoapFault
object SoapFault::SoapFault(string faultcode, string faultstring
	[, string faultactor [, mixed detail [, string faultname [, mixed headerfault]]]])
   SoapFault constructor

SoapHeader::SoapHeader
object SoapHeader::SoapHeader(string namespace, string name [, mixed data [, bool mustUnderstand [, mixed actor]]])
   SoapHeader constructor

SoapParam::SoapParam
object SoapParam::SoapParam( mixed data, string name)
   SoapParam constructor

SoapServer::SoapServer
object SoapServer::SoapServer( mixed wsdl [, array options])
   Sets persistence mode of SoapServer

SoapServer::addFunction
void SoapServer::addFunction(mixed functions)
   Adds one or several functions those will handle SOAP requests

SoapServer::getFunctions
array SoapServer::getFunctions(void)
   Returns list of defined functions

SoapServer::handle
void SoapServer::handle( [string soap_request])
   Handles a SOAP request

SoapServer::setClass
void SoapServer::setClass(string class_name [, mixed args])
   Sets class which will handle SOAP requests

SoapVar::SoapVar
object SoapVar::SoapVar(mixed data, int encoding
	[, string type_name [, string type_namespace [, string node_name [, string node_namespace]]]])
   SoapVar constructor

socket_accept
resource socket_accept(resource socket)
   Accepts a connection on the listening socket fd

socket_bind
bool socket_bind(resource socket, string addr [, int port])
   Binds an open socket to a listening port,
   port is only specified in AF_INET family.

socket_clear_error
void socket_clear_error([resource socket])
   Clears the error on the socket or the last error code.

socket_close
void socket_close(resource socket)
   Closes a file descriptor

socket_connect
bool socket_connect(resource socket, string addr [, int port])
   Opens a connection to addr:port on the socket specified by socket

socket_create
resource socket_create(int domain, int type, int protocol)
   Creates an endpoint for communication
   in the domain specified by domain,
   of type specified by type

socket_create_listen
resource socket_create_listen(int port[, int backlog])
   Opens a socket on port to accept connections

socket_create_pair
bool socket_create_pair(int domain, int type, int protocol, array &fd)
   Creates a pair of indistinguishable sockets and stores them in fds.

socket_get_option
mixed socket_get_option(resource socket, int level, int optname)
   Gets socket options for the socket

socket_getpeername
bool socket_getpeername(resource socket, string &addr[, int &port])
   Queries the remote side of the given socket
   which may either result in host/port
   or in a UNIX filesystem path, dependent on its type.

socket_getsockname
bool socket_getsockname(resource socket, string &addr[, int &port])
   Queries the remote side of the given socket
   which may either result in host/port
   or in a UNIX filesystem path, dependent on its type.

socket_last_error
int socket_last_error([resource socket])
   Returns the last socket error
   (either the last used or the provided socket resource)

socket_listen
bool socket_listen(resource socket[, int backlog])
   Sets the maximum number of connections allowed
   to be waited for on the socket specified by fd

socket_read
string socket_read(resource socket, int length [, int type])
   Reads a maximum of length bytes from socket

socket_recv
int socket_recv(resource socket, string &buf, int len, int flags)
   Receives data from a connected socket

socket_recvfrom
int socket_recvfrom(resource socket, string &buf, int len, int flags, string &name [, int &port])
   Receives data from a socket, connected or not

socket_select
int socket_select(array &read_fds, array &write_fds, &array except_fds, int tv_sec[, int tv_usec])
   Runs the select() system call on the sets
   mentioned with a timeout specified by tv_sec and tv_usec

socket_send
int socket_send(resource socket, string buf, int len, int flags)
   Sends data to a connected socket

socket_sendto
int socket_sendto(resource socket, string buf, int len, int flags, string addr [, int port])
   Sends a message to a socket, whether it is connected or not

socket_set_block
bool socket_set_block(resource socket)
   Sets blocking mode on a socket resource

socket_set_nonblock
bool socket_set_nonblock(resource socket)
   Sets nonblocking mode on a socket resource

socket_set_option
bool socket_set_option(resource socket, int level, int optname, int|array optval)
   Sets socket options for the socket

socket_shutdown
bool socket_shutdown(resource socket[, int how])
   Shuts down a socket for receiving, sending, or both.

socket_strerror
string socket_strerror(int errno)
   Returns a string describing an error

socket_write
int socket_write(resource socket, string buf[, int length])
   Writes the buffer to the socket resource, length is optional

ArrayIterator::current
mixed|NULL ArrayIterator::current()
   Return current array entry

ArrayIterator::key
mixed|NULL ArrayIterator::key()
   Return current array key

ArrayIterator::next
void ArrayIterator::next()
   Move to next entry

ArrayIterator::rewind
void ArrayIterator::rewind()
   Rewind array back to the start

ArrayIterator::seek
void ArrayIterator::seek(int $position)
   Seek to position.

ArrayIterator::valid
bool ArrayIterator::valid()
   Check whether array contains more entries

ArrayObject::__construct
void ArrayObject::__construct(array|object ar = array())
   Cronstructs a new array iterator from a path.

ArrayObject::append
void ArrayObject::append(mixed $newval)
   Appends the value (cannot be called for objects).

ArrayObject::count
int ArrayObject::count()
   Return the number of elements in the Iterator.

ArrayObject::getIterator
ArrayIterator ArrayObject::getIterator()
   Create a new iterator from a ArrayObject instance

ArrayObject::offsetExists
bool ArrayObject::offsetExists(mixed $index)
   Returns whether the requested $index exists.

ArrayObject::offsetGet
bool ArrayObject::offsetGet(mixed $index)
   Returns the value at the specified $index.

ArrayObject::offsetSet
void ArrayObject::offsetSet(mixed $index, mixed $newval)
   Sets the value at the specified $index to $newval.

ArrayObject::offsetUnset
void ArrayObject::offsetUnset(mixed $index)
   Unsets the value at the specified $index.

DirectoryIterator::__construct
void DirectoryIterator::__construct(string path)
   Cronstructs a new dir iterator from a path.

DirectoryIterator::current
DirectoryIterator DirectoryIterator::current()
   Return this (needed for Iterator interface)

DirectoryIterator::getATime
int DirectoryIterator::getATime()
   Get last access time of file

DirectoryIterator::getCTime
int DirectoryIterator::getCTime()
   Get inode modification time of file

DirectoryIterator::getChildren
RecursiveDirectoryIterator DirectoryIterator::getChildren()
   Returns an iterator fo rthe current entry if it is a directory

DirectoryIterator::getFilename
string DirectoryIterator::getFilename()
   Return filename of current dir entry

DirectoryIterator::getGroup
int DirectoryIterator::getGroup()
   Get file group

DirectoryIterator::getInode
int DirectoryIterator::getInode()
   Get file inode

DirectoryIterator::getMTime
int DirectoryIterator::getMTime()
   Get last modification time of file

DirectoryIterator::getOwner
int DirectoryIterator::getOwner()
   Get file owner

DirectoryIterator::getPath
string DirectoryIterator::getPath()
   Return directory path

DirectoryIterator::getPathname
string DirectoryIterator::getPathname()
   Return path and filename of current dir entry

DirectoryIterator::getPerms
int DirectoryIterator::getPerms()
   Get file permissions

DirectoryIterator::getSize
int DirectoryIterator::getSize()
   Get file size

DirectoryIterator::getType
string DirectoryIterator::getType()
   Get file type

DirectoryIterator::isDir
bool DirectoryIterator::isDir()
   Returns true if file is directory

DirectoryIterator::isDot
bool DirectoryIterator::isDot()
   Returns true if current entry is '.' or  '..'

DirectoryIterator::isExecutable
bool DirectoryIterator::isExecutable()
   Returns true if file is executable

DirectoryIterator::isFile
bool DirectoryIterator::isFile()
   Returns true if file is a regular file

DirectoryIterator::isLink
bool DirectoryIterator::isLink()
   Returns true if file is symbolic link

DirectoryIterator::isReadable
bool DirectoryIterator::isReadable()
   Returns true if file can be read

DirectoryIterator::isWritable
bool DirectoryIterator::isWritable()
   Returns true if file can be written

DirectoryIterator::key
string DirectoryIterator::key()
   Return current dir entry

DirectoryIterator::next
void DirectoryIterator::next()
   Move to next entry

DirectoryIterator::rewind
void DirectoryIterator::rewind()
   Rewind dir back to the start

DirectoryIterator::valid
string DirectoryIterator::valid()
   Check whether dir contains more entries

RecursiveDirectoryIterator::hasChildren
bool RecursiveDirectoryIterator::hasChildren([bool $allow_links = false])
   Returns whether current entry is a directory and not '.' or '..'

RecursiveDirectoryIterator::key
string RecursiveDirectoryIterator::key()
   Return path and filename of current dir entry

RecursiveDirectoryIterator::next
void RecursiveDirectoryIterator::next()
   Move to next entry

RecursiveDirectoryIterator::rewind
void RecursiveDirectoryIterator::rewind()
   Rewind dir back to the start

imitIterator::__construct
LimitIterator::__construct(Iterator $it [, int $offset, int $count])
   Construct a LimitIterator from an Iterator
   with a given starting offset and optionally a maximum count

ilterIterator::__construct
FilterIterator::__construct(Iterator $it)
   Create an Iterator from another iterator

achingIterator::__construct
CachingIterator::__construct(Iterator $it)
   Construct a CachingIterator from an Iterator

arentIterator::__construct
ParentIterator::__construct(RecursiveIterator $it)
   Create a ParentIterator from a RecursiveIterator

achingRecursiveIterator::__construct
CachingRecursiveIterator::__construct(RecursiveIterator $it)
   Create an iterator from a RecursiveIterator

ecursiveIteratorIterator::__construct
RecursiveIteratorIterator::__construct(RecursiveIterator $it)
   Creates a RecursiveIteratorIterator from a RecursiveIterator.

CachingIterator::__toString
string CachingIterator::__toString()
   Retrun the string representation of the current element

CachingIterator::hasNext
boolean CachingIterator::hasNext()
   Cehck whether the inner iterator has a valid next element

CachingIterator::next
void CachingIterator::next()
   Move the iterator forward

CachingIterator::rewind
void CachingIterator::rewind()
   Rewind the iterator

CachingIterator::valid
boolean CachingIterator::valid()
   Check whether the current element is valid

CachingRecursiveIterator::getChildren
CachingRecursiveIterator CachingRecursiveIterator::getChildren()
   Return the inenr iteraor's children as a CachingRecursiveIterator

CachingRecursiveIterator::hasChildren
boolean CachingRecursiveIterator::hasChildren()
   Cehck whether the current element of the inner iterator has children

FilterIterator::current
mixed FilterIterator::current()
   proto mixed CachingIterator::current()
   proto mixed LimitIterator::current()
   proto mixed ParentIterator::current()
   Get the current element value

FilterIterator::getInnerIterator
Iterator FilterIterator::getInnerIterator()
   proto Iterator CachingIterator::getInnerIterator()
   proto Iterator LimitIterator::getInnerIterator()
   proto Iterator ParentIterator::getInnerIterator()
   Get the inner iterator

FilterIterator::key
mixed FilterIterator::key()
   proto mixed CachingIterator::key()
   proto mixed LimitIterator::key()
   proto mixed ParentIterator::key()
   Get the current key

FilterIterator::next
void FilterIterator::next()
   Move the iterator forward

FilterIterator::rewind
void FilterIterator::rewind()
   Rewind the iterator

FilterIterator::valid
boolean FilterIterator::valid()
   proto boolean ParentIterator::valid()
   Check whether the current element is valid

LimitIterator::getPosition
int LimitIterator::getPosition()
   Return the current position

LimitIterator::next
void LimitIterator::next()
   Move the iterator forward

LimitIterator::rewind
void LimitIterator::rewind()
   Rewind the iterator to the specified starting offset

LimitIterator::seek
void LimitIterator::seek(int $position)
   Seek to the given position

LimitIterator::valid
boolean LimitIterator::valid()
   Check whether the current element is valid

ParentIterator::getChildren
ParentIterator ParentIterator::getChildren()
   Return the inner iterator's children contained in a ParentIterator

ParentIterator::hasChildren
boolean ParentIterator::hasChildren()
   Check whether the inner iterator's current element has children

ParentIterator::next
void ParentIterator::next()
   Move the iterator forward

ParentIterator::rewind
void ParentIterator::rewind()
   Rewind the iterator

RecursiveIteratorIterator::current
mixed RecursiveIteratorIterator::current()
   Access the current element value

RecursiveIteratorIterator::getDepth
int RecursiveIteratorIterator::getDepth()
   Get the current depth of the recursive iteration

RecursiveIteratorIterator::getSubIterator
RecursiveIterator RecursiveIteratorIterator::getSubIterator()
   The current active sub iterator

RecursiveIteratorIterator::key
mixed RecursiveIteratorIterator::key()
   Access the current key

RecursiveIteratorIterator::next
void RecursiveIteratorIterator::next()
   Move forward to the next element

RecursiveIteratorIterator::rewind
void RecursiveIteratorIterator::rewind()
   Rewind the iterator to the first element
   of the top level inner iterator.

RecursiveIteratorIterator::valid
boolean RecursiveIteratorIterator::valid()
   Check whether the current position is valid

sqlite_array_query
array sqlite_array_query(resource db, string query [, int result_type [, bool decode_binary]])
   Executes a query against a given database
   and returns an array of arrays.

sqlite_busy_timeout
void sqlite_busy_timeout(resource db, int ms)
   Set busy timeout duration. If ms <= 0, all busy handlers are disabled.

sqlite_changes
int sqlite_changes(resource db)
   Returns the number of rows that were changed by the
   most recent SQL statement.

sqlite_close
void sqlite_close(resource db)
   Closes an open sqlite database.

sqlite_column
mixed sqlite_column(resource result, mixed index_or_name [, bool decode_binary])
   Fetches a column from the current row of a result set.

sqlite_create_aggregate
bool sqlite_create_aggregate(resource db, string funcname, mixed step_func, mixed finalize_func [, long num_args])
   Registers an aggregate function for queries.

sqlite_create_function
bool sqlite_create_function(resource db, string funcname, mixed callback [, long num_args])
   Registers a "regular" function for queries.

sqlite_current
array sqlite_current(resource result [, int result_type [, bool decode_binary]])
   Fetches the current row from a result set as an array.

sqlite_error_string
string sqlite_error_string(int error_code)
   Returns the textual description of an error code.

sqlite_escape_string
string sqlite_escape_string(string item)
   Escapes a string for use as a query parameter.

sqlite_exec
boolean sqlite_exec(string query, resource db)
   Executes a result-less query against a given database

sqlite_factory
object sqlite_factory(string filename [, int mode [, string &error_message]])
   Opens a SQLite database and creates an object for it.
   Will create the database if it does not exist.

sqlite_fetch_all
array sqlite_fetch_all(resource result [, int result_type [, bool decode_binary]])
   Fetches all rows from a result set as an array of arrays.

sqlite_fetch_array
array sqlite_fetch_array(resource result [, int result_type [, bool decode_binary]])
   Fetches the next row from a result set as an array.

sqlite_fetch_column_types
resource sqlite_fetch_column_types(string table_name, resource db)
   Return an array of column types from a particular table.

sqlite_fetch_object
object sqlite_fetch_object(resource result [, string class_name [, NULL|array ctor_params [, bool decode_binary]]])
   Fetches the next row from a result set as an object.

sqlite_fetch_single
string sqlite_fetch_single(resource result [, bool decode_binary])
   Fetches the first column of a result set as a string.

sqlite_field_name
string sqlite_field_name(resource result, int field_index)
   Returns the name of a particular field of a result set.

sqlite_has_prev
bool sqlite_has_prev(resource result)
   * Returns whether a previous row is available.

sqlite_last_error
int sqlite_last_error(resource db)
   Returns the error code of the last error for a database.

sqlite_last_insert_rowid
int sqlite_last_insert_rowid(resource db)
   Returns the rowid of the most recently inserted row.

sqlite_libencoding
string sqlite_libencoding()
   Returns the encoding (iso8859 or UTF-8) of the linked SQLite library.

sqlite_libversion
string sqlite_libversion()
   Returns the version of the linked SQLite library.

sqlite_next
bool sqlite_next(resource result)
   Seek to the next row number of a result set.

sqlite_num_fields
int sqlite_num_fields(resource result)
   Returns the number of fields in a result set.

sqlite_num_rows
int sqlite_num_rows(resource result)
   Returns the number of rows in a buffered result set.

sqlite_open
resource sqlite_open(string filename [, int mode [, string &error_message]])
   Opens a SQLite database. Will create the database if it does not exist.

sqlite_popen
resource sqlite_popen(string filename [, int mode [, string &error_message]])
   Opens a persistent handle to a SQLite database.
   Will create the database if it does not exist.

sqlite_prev
bool sqlite_prev(resource result)
   * Seek to the previous row number of a result set.

sqlite_query
resource sqlite_query(string query, resource db [, int result_type ])
   Executes a query against a given database and returns a result handle.

sqlite_rewind
bool sqlite_rewind(resource result)
   Seek to the first row number of a buffered result set.

sqlite_seek
bool sqlite_seek(resource result, int row)
   Seek to a particular row number of a buffered result set.

sqlite_single_query
array sqlite_single_query(resource db, string query [, bool first_row_only [, bool decode_binary]])
   Executes a query and returns either an array for one
   single column or the value of the first row.

sqlite_udf_decode_binary
string sqlite_udf_decode_binary(string data)
   Decode binary encoding on a string parameter passed to an UDF.

sqlite_udf_encode_binary
string sqlite_udf_encode_binary(string data)
   Apply binary encoding (if required) to a string to return from an UDF.

sqlite_unbuffered_query
resource sqlite_unbuffered_query(string query, resource db [ , int result_type ])
   Executes a query that does not prefetch and buffer all data.

sqlite_valid
bool sqlite_valid(resource result)
   Returns whether more rows are available.

array_change_key_case
array array_change_key_case(array input [, int case=CASE_LOWER])
   Retuns an array with all string keys lowercased [or uppercased]

array_chunk
array array_chunk(array input, int size [, bool preserve_keys])
   Split array into chunks

array_combine
array array_combine(array keys, array values)
   Creates an array by using the elements
   of the first parameter as keys and the
   elements of the second as correspoding keys

array_count_values
array array_count_values(array input)
   Return the value as key and the frequency
   of that value in input as value

array_diff
array array_diff(array arr1, array arr2 [, array ...])
   Returns the entries of arr1 that have values which
   are not present in any of the others arguments.

array_diff_assoc
array array_diff_assoc(array arr1, array arr2 [, array ...])
   Returns the entries of arr1 that have values which
   are not present in any of the others arguments but
   do additional checks whether the keys are equal

array_diff_key
array array_diff_key(array arr1, array arr2 [, array ...])
   Returns the entries of arr1 that have keys which
   are not present in any of the others arguments.
   This function is like array_diff() but works on
   the keys instead of the values.
   The associativity is preserved.

array_diff_uassoc
array array_diff_uassoc(array arr1, array arr2 [, array ...], callback data_comp_func)
   Returns the entries of arr1 that have values which
   are not present in any of the others arguments
   but do additional checks whether the keys are equal.
   Elements are compared by user supplied function.

array_diff_ukey
array array_diff_ukey(array arr1, array arr2 [, array ...], callback key_comp_func)
   Returns the entries of arr1 that have keys
   which are not present in any of the others arguments.
   User supplied function is used for comparing the keys.
   This function is like array_udiff() but works on
   the keys instead of the values.
   The associativity is preserved.

array_fill
array array_fill(int start_key, int num, mixed val)
   Create an array containing num elements
   starting with index start_key each initialized to val

array_filter
array array_filter(array input [, mixed callback])
   Filters elements from the array via the callback.

array_flip
array array_flip(array input)
   Return array with key <-> value flipped

array_intersect
array array_intersect(array arr1, array arr2 [, array ...])
   Returns the entries of arr1 that have values
   which are present in all the other arguments

array_intersect_assoc
array array_intersect_assoc(array arr1, array arr2 [, array ...])
   Returns the entries of arr1 that have values
   which are present in all the other arguments.
   Keys are used to do more restrictive check

array_intersect_key
array array_intersect_key(array arr1, array arr2 [, array ...])
   Returns the entries of arr1 that have keys
   which are present in all the other arguments.
   Kind of equivalent to array_diff(array_keys($arr1),
   array_keys($arr2)[,array_keys(...)]). Equivalent of
   array_intersect_assoc() but does not do compare of the data.

array_intersect_uassoc
array array_intersect_uassoc(array arr1, array arr2 [, array ...], callback key_compare_func)
   Returns the entries of arr1 that have values which
   are present in all the other arguments. Keys are used
   to do more restrictive check and they are compared by
   using an user-supplied callback.

array_intersect_ukey
array array_intersect_ukey(array arr1, array arr2 [, array ...], callback key_compare_func)
   Returns the entries of arr1 that have keys
   which are present in all the other arguments.
   Kind of equivalent to array_diff(array_keys($arr1),
   array_keys($arr2)[,array_keys(...)]).
   The comparison of the keys is performed by a user
   supplied function. Equivalent of array_intersect_uassoc()
   but does not do compare of the data.

array_key_exists
bool array_key_exists(mixed key, array search)
   Checks if the given key or index exists in the array

array_keys
array array_keys(array input [, mixed search_value[, bool strict]])
   Return just the keys from the input array,
   optionally only for the specified search_value

array_map
array array_map(mixed callback, array input1 [, array input2 ,...])
   Applies the callback to the elements in given arrays.

array_merge
array array_merge(array arr1, array arr2 [, array ...])
   Merges elements from passed arrays into one array

array_merge_recursive
array array_merge_recursive(array arr1, array arr2 [, array ...])
   Recursively merges elements from passed arrays into one array

array_multisort
bool array_multisort(array ar1 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]]
	[, array ar2 [, SORT_ASC|SORT_DESC [, SORT_REGULAR|SORT_NUMERIC|SORT_STRING]], ...])
   Sort multiple arrays at once
   similar to how ORDER BY clause works in SQL

array_pad
array array_pad(array input, int pad_size, mixed pad_value)
   Returns a copy of input array padded with pad_value to size pad_size

array_pop
mixed array_pop(array stack)
   Pops an element off the end of the array

array_push
int array_push(array stack, mixed var [, mixed ...])
   Pushes elements onto the end of the array

array_rand
mixed array_rand(array input [, int num_req])
   Return key/keys for random entry/entries in the array

array_reduce
mixed array_reduce(array input, mixed callback [, int initial])
   Iteratively reduce the array to a single value via the callback.

array_reverse
array array_reverse(array input [, bool preserve keys])
   Return input as a new array with the order of the entries reversed

array_search
mixed array_search(mixed needle, array haystack [, bool strict])
   Searches the array for a given value and
   returns the corresponding key if successful

array_shift
mixed array_shift(array stack)
   Pops an element off the beginning of the array

array_slice
array array_slice(array input, int offset [, int length])
   Returns elements specified by offset and length

array_splice
array array_splice(array input, int offset [, int length [, array replacement]])
   Removes the elements designated by offset and length
   and replace them with supplied array

array_sum
mixed array_sum(array input)
   Returns the sum of the array entries

array_udiff
array array_udiff(array arr1, array arr2 [, array ...], callback data_comp_func)
   Returns the entries of arr1 that have values which
   are not present in any of the others arguments.
   Elements are compared by user supplied function.

array_udiff_assoc
array array_udiff_assoc(array arr1, array arr2 [, array ...], callback key_comp_func)
   Returns the entries of arr1 that have values which
   are not present in any of the others arguments but
   do additional checks whether the keys are equal.
   Keys are compared by user supplied function.

array_udiff_uassoc
array array_udiff_uassoc(array arr1, array arr2 [, array ...], callback data_comp_func, callback key_comp_func)
   Returns the entries of arr1 that have values which
   are not present in any of the others arguments but
   do additional checks whether the keys are equal.
   Keys and elements are compared by user supplied functions.

array_uintersect
array array_uintersect(array arr1, array arr2 [, array ...], callback data_compare_func)
   Returns the entries of arr1 that have values which
   are present in all the other arguments.
   Data is compared by using an user-supplied callback.

array_uintersect_assoc
array array_uintersect_assoc(array arr1, array arr2 [, array ...], callback data_compare_func)
   Returns the entries of arr1 that have values which
   are present in all the other arguments.
   Keys are used to do more restrictive check.
   Data is compared by using an user-supplied callback.

array_uintersect_uassoc
array array_uintersect_uassoc(array arr1, array arr2 [, array ...], callback data_compare_func, callback key_compare_func)
   Returns the entries of arr1 that have values
   which are present in all the other arguments.
   Keys are used to do more restrictive check.
   Both data and keys are compared by using user-supplied callbacks.

array_unique
array array_unique(array input)
   Removes duplicate values from array

array_unshift
int array_unshift(array stack, mixed var [, mixed ...])
   Pushes elements onto the beginning of the array

array_values
array array_values(array input)
   Return just the values from the input array

array_walk
bool array_walk(array input, string funcname [, mixed userdata])
   Apply a user function to every member of an array

array_walk_recursive
bool array_walk_recursive(array input, string funcname [, mixed userdata])
   Apply a user function recursively to every member of an array

arsort
bool arsort(array array_arg [, int sort_flags])
   Sort an array in reverse order and maintain index association

asort
bool asort(array array_arg [, int sort_flags])
   Sort an array and maintain index association

compact
array compact(mixed var_names [, mixed ...])
   Creates a hash containing variables and their values

count
int count(mixed var [, int mode])
   Count the number of elements in a variable (usually an array)

current
mixed current(array array_arg)
   Return the element currently pointed to
   by the internal array pointer

end
mixed end(array array_arg)
   Advances array argument's internal pointer to
   the last element and return it

extract
int extract(array var_array [, int extract_type [, string prefix]])
   Imports variables into symbol table from an array

in_array
bool in_array(mixed needle, array haystack [, bool strict])
   Checks if the given value exists in the array

key
mixed key(array array_arg)
   Return the key of the element currently pointed to
   by the internal array pointer

krsort
bool krsort(array array_arg [, int sort_flags])
   Sort an array by key value in reverse order

ksort
bool ksort(array array_arg [, int sort_flags])
   Sort an array by key

max
mixed max(mixed arg1 [, mixed arg2 [, mixed ...]])
   Return the highest value in an array or a series of arguments

min
mixed min(mixed arg1 [, mixed arg2 [, mixed ...]])
   Return the lowest value in an array or a series of arguments

natcasesort
void natcasesort(array array_arg)
   Sort an array using case-insensitive natural sort

natsort
void natsort(array array_arg)
   Sort an array using natural sort

next
mixed next(array array_arg)
   Move array argument's internal pointer to
   the next element and return it

prev
mixed prev(array array_arg)
   Move array argument's internal pointer to
   the previous element and return it

range
array range(mixed low, mixed high[, int step])
   Create an array containing the range of integers
   or characters from low to high (inclusive)

reset
mixed reset(array array_arg)
   Set array argument's internal pointer to the first element
   and return it

rsort
bool rsort(array array_arg [, int sort_flags])
   Sort an array in reverse order

shuffle
bool shuffle(array array_arg)
   Randomly shuffle the contents of an array

sort
bool sort(array array_arg [, int sort_flags])
   Sort an array

uasort
bool uasort(array array_arg, string cmp_function)
   Sort an array with a user-defined comparison function
   and maintain index association

uksort
bool uksort(array array_arg, string cmp_function)
   Sort an array by keys using a user-defined comparison function

usort
bool usort(array array_arg, string cmp_function)
   Sort an array by values using a user-defined comparison function

assert
int assert(string|bool assertion)
   Checks if assertion is false

assert_options
mixed assert_options(int what [, mixed value])
   Set/get the various assert flags

base64_decode
string base64_decode(string str)
   Decodes string using MIME base64 algorithm

base64_encode
string base64_encode(string str)
   Encodes string using MIME base64 algorithm

call_user_func
mixed call_user_func(string function_name [, mixed parmeter] [, mixed ...])
   Call a user function which is the first parameter

call_user_func_array
mixed call_user_func_array(string function_name, array parameters)
   Call a user function which is the first parameter with
   the arguments contained in array

call_user_method
mixed call_user_method(string method_name, mixed object [, mixed parameter] [, mixed ...])
   Call a user method on a specific object or class

call_user_method_array
mixed call_user_method_array(string method_name, mixed object, array params)
   Call a user method on a specific object
   or class using a parameter array

connection_aborted
int connection_aborted(void)
   Returns true if client disconnected

connection_status
int connection_status(void)
   Returns the connection status bitfield

constant
mixed constant(string const_name)
   Given the name of a constant this function
   will return the constants associated value

error_log
bool error_log(string message [, int message_type [, string destination [, string extra_headers]]])
   Send an error message somewhere

flush
void flush(void)
   Flush the output buffer

get_cfg_var
string get_cfg_var(string option_name)
   Get the value of a PHP configuration option

get_current_user
string get_current_user(void)
   Get the name of the owner of the current PHP script

get_include_path
string get_include_path()
   Get the current include_path configuration option

get_magic_quotes_gpc
int get_magic_quotes_gpc(void)
   Get the current active configuration setting of magic_quotes_gpc

get_magic_quotes_runtime
int get_magic_quotes_runtime(void)
   Get the current active configuration setting of magic_quotes_runtime

getenv
string getenv(string varname)
   Get the value of an environment variable

getopt
array getopt(string options [, array longopts])
   Get options from the command line argument list

getprotobyname
int getprotobyname(string name)
   Returns protocol number associated with name as per /etc/protocols

getprotobynumber
string getprotobynumber(int proto)
   Returns protocol name associated with protocol number proto

getservbyname
int getservbyname(string service, string protocol)
   Returns port associated with service.
   Protocol must be "tcp" or "udp"

getservbyport
string getservbyport(int port, string protocol)
   Returns service name associated with port.
   Protocol must be "tcp" or "udp"

highlight_file
bool highlight_file(string file_name [, bool return] )
   Syntax highlight a source file

highlight_string
bool highlight_string(string string [, bool return] )
   Syntax highlight a string or optionally return it

ignore_user_abort
int ignore_user_abort(bool value)
   Set whether we want to ignore a user abort event or not

import_request_variables
bool import_request_variables(string types [, string prefix])
   Import GET/POST/Cookie variables into the global scope

inet_ntop
string inet_ntop(string in_addr)
   Converts a packed inet address to a human readable IP address string

inet_pton
string inet_pton(string ip_address)
   Converts a human readable IP address to a packed binary string

ini_get
string ini_get(string varname)
   Get a configuration option

ini_get_all
array ini_get_all([string extension])
   Get all configuration options

ini_restore
void ini_restore(string varname)
   Restore the value of a configuration option specified by varname

ini_set
string ini_set(string varname, string newvalue)
   Set a configuration option, returns false on error
   and the old value of the configuration option on success

ip2long
int ip2long(string ip_address)
   Converts a string containing an (IPv4) Internet Protocol
   dotted address into a proper address

is_uploaded_file
bool is_uploaded_file(string path)
   Check if file was created by rfc1867 upload

long2ip
string long2ip(int proper_address)
   Converts an (IPv4) Internet network address into
   a string in Internet standard dotted format

move_uploaded_file
bool move_uploaded_file(string path, string new_path)
   Move a file if and only if it was created by an upload

parse_ini_file
array parse_ini_file(string filename [, bool process_sections])
   Parse configuration file

php_check_syntax
bool php_check_syntax(string file_name [, &$error_message])
   Check the syntax of the specified file.

php_strip_whitespace
string php_strip_whitespace(string file_name)
   Return source with stripped comments and whitespace

print_r
mixed print_r(mixed var [, bool return])
   Prints out or returns information about the specified variable

putenv
bool putenv(string setting)
   Set the value of an environment variable

register_shutdown_function
void register_shutdown_function(string function_name)
   Register a user-level function to be called on request termination

register_tick_function
bool register_tick_function(string function_name [, mixed arg [, mixed ... ]])
   Registers a tick callback function

restore_include_path
void restore_include_path()
   Restore the value of the include_path configuration option

set_include_path
string set_include_path(string varname, string newvalue)
   Sets the include_path configuration option

set_magic_quotes_runtime
bool set_magic_quotes_runtime(int new_setting)
   Set the current active configuration setting of
   magic_quotes_runtime and return previous

sleep
void sleep(int seconds)
   Delay for a given number of seconds

time_nanosleep
mixed time_nanosleep(long seconds, long nanoseconds)
   Delay for a number of seconds and nano seconds

unregister_tick_function
void unregister_tick_function(string function_name)
   Unregisters a tick callback function

usleep
void usleep(int micro_seconds)
   Delay for a given number of micro seconds

get_browser
mixed get_browser([string browser_name [, bool return_array]])
   Get information about the capabilities of a browser.
   If browser_name is omitted or null,
   HTTP_USER_AGENT is used.
   Returns an object by default;
   if return_array is true, returns an array.

crc32
string crc32(string str)
   Calculate the crc32 polynomial of a string

crypt
string crypt(string str [, string salt])
   Encrypt a string

convert_cyr_string
string convert_cyr_string(string str, string from, string to)
   Convert from one Cyrillic character set to another

checkdate
bool checkdate(int month, int day, int year)
   Returns true(1) if it is a valid date in gregorian calendar

date
string date(string format [, int timestamp])
   Format a local time/date

getdate
array getdate([int timestamp])
   Get date/time information

gmdate
string gmdate(string format [, int timestamp])
   Format a GMT/UTC date/time

gmmktime
int gmmktime(int hour, int min, int sec, int mon, int day, int year)
   Get UNIX timestamp for a GMT date

gmstrftime
string gmstrftime(string format [, int timestamp])
   Format a GMT/UCT time/date according to locale settings

idate
int idate(string format [, int timestamp])
   Format a local time/date as integer

localtime
array localtime([int timestamp [, bool associative_array]])
   Returns the results of the C system call localtime
   as an associative array if the associative_array argument
   is set to 1 other wise it is a regular array

mktime
int mktime(int hour, int min, int sec, int mon, int day, int year)
   Get UNIX timestamp for a date

strftime
string strftime(string format [, int timestamp])
   Format a local time/date according to locale settings

strtotime
int strtotime(string time, int now)
   Convert string representation of date and time to a timestamp

time
int time(void)
   Return current UNIX timestamp

chdir
bool chdir(string directory)
   Change the current directory

chroot
bool chroot(string directory)
   Change root directory

closedir
void closedir([resource dir_handle])
   Close directory connection identified by the dir_handle

dir
object dir(string directory[, resource context])
   Directory class with properties,
   handle and class and methods read,
   rewind and close

getcwd
mixed getcwd(void)
   Gets the current directory

glob
array glob(string pattern [, int flags])
   Find pathnames matching a pattern

opendir
mixed opendir(string path[, resource context])
   Open a directory and return a dir_handle

readdir
string readdir([resource dir_handle])
   Read directory entry from dir_handle

rewinddir
void rewinddir([resource dir_handle])
   Rewind dir_handle back to the start

scandir
array scandir(string dir [, int sorting_order [, resource context]])
   List files & directories inside the specified path

dl
int dl(string extension_filename)
   Load a PHP extension at runtime

dns_check_record
int dns_check_record(string host [, string type])
   Check DNS records corresponding to a given
   Internet host name or IP address

dns_get_mx
bool dns_get_mx(string hostname, array mxhosts [, array weight])
   Get MX records corresponding to a given Internet host name

dns_get_record
array|false dns_get_record(string hostname [, int type[, array authns, array addtl]])
   Get any Resource Record corresponding
   to a given Internet host name

gethostbyaddr
string gethostbyaddr(string ip_address)
   Get the Internet host name corresponding
   to a given IP address

gethostbyname
string gethostbyname(string hostname)
   Get the IP address corresponding to a given Internet host name

gethostbynamel
array gethostbynamel(string hostname)
   Return a list of IP addresses that a given hostname resolves to.

escapeshellarg
string escapeshellarg(string arg)
   Quote and escape an argument for use in a shell command

escapeshellcmd
string escapeshellcmd(string command)
   Escape shell metacharacters

exec
string exec(string command [, array &output [, int &return_value]])
   Execute an external program

passthru
void passthru(string command [, int &return_value])
   Execute an external program and display raw output

proc_nice
bool proc_nice(int priority)
   Change the priority of the current process

shell_exec
string shell_exec(string cmd)
   Execute command via shell and return complete output as string

system
int system(string command [, int &return_value])
   Execute an external program and display output

copy
bool copy(string source_file, string destination_file)
   Copy a file

fclose
bool fclose(resource fp)
   Close an open file pointer

feof
bool feof(resource fp)
   Test for end-of-file on a file pointer

fflush
bool fflush(resource fp)
   Flushes output

fgetc
string fgetc(resource fp)
   Get a character from file pointer

fgetcsv
array fgetcsv(resource fp [,int length [, string delimiter [, string enclosure]]])
   Get line from file pointer and parse for CSV fields

fgets
string fgets(resource fp[, int length])
   Get a line from file pointer

fgetss
string fgetss(resource fp [, int length, string allowable_tags])
   Get a line from file pointer and strip HTML tags

file
array file(string filename [, int flags[, resource context]])
   Read entire file into an array

file_get_contents
string file_get_contents(string filename [, bool use_include_path [, resource context]])
   Read the entire file into a string

file_put_contents
int file_put_contents(string file, mixed data [, int flags [, resource context]])
   Write/Create a file with contents data
   and return the number of bytes written

flock
bool flock(resource fp, int operation [, int &wouldblock])
   Portable file locking

fnmatch
bool fnmatch(string pattern, string filename [, int flags])
   Match filename against pattern

fopen
resource fopen(string filename, string mode [, bool use_include_path [, resource context]])
   Open a file or a URL and return a file pointer

fpassthru
int fpassthru(resource fp)
   Output all remaining data from a file pointer

fread
string fread(resource fp, int length)
   Binary-safe file read

fscanf
mixed fscanf(resource stream, string format [, string ...])
   Implements a mostly ANSI compatible fscanf()

fseek
int fseek(resource fp, int offset [, int whence])
   Seek on a file pointer

fstat
int fstat(resource fp)
   Stat() on a filehandle

ftell
int ftell(resource fp)
   Get file pointer's read/write position

ftruncate
bool ftruncate(resource fp, int size)
   Truncate file to 'size' length

fwrite
int fwrite(resource fp, string str [, int length])
   Binary-safe file write

get_meta_tags
array get_meta_tags(string filename [, bool use_include_path])
   Extracts all meta tag content attributes from a file
   and returns an array

mkdir
bool mkdir(string pathname [, int mode [, bool recursive [, resource context]]])
   Create a directory

pclose
int pclose(resource fp)
   Close a file pointer opened by popen()

popen
resource popen(string command, string mode)
   Execute a command and open either a read or a write pipe to it

readfile
int readfile(string filename [, bool use_include_path[, resource context]])
   Output a file or a URL

realpath
string realpath(string path)
   Return the resolved path

rename
bool rename(string old_name, string new_name[, resource context])
   Rename a file

rewind
bool rewind(resource fp)
   Rewind the position of a file pointer

rmdir
bool rmdir(string dirname[, resource context])
   Remove a directory

tempnam
string tempnam(string dir, string prefix)
   Create a unique filename in a directory

tmpfile
resource tmpfile(void)
   Create a temporary file that will be deleted automatically after use

umask
int umask([int mask])
   Return or change the umask

unlink
bool unlink(string filename[, context context])
   Delete a file

chgrp
bool chgrp(string filename, mixed group)
   Change file group

chmod
bool chmod(string filename, int mode)
   Change file mode

chown
bool chown(string filename, mixed user)
   Change file owner

clearstatcache
void clearstatcache(void)
   Clear file stat cache

disk_free_space
float disk_free_space(string path)
   Get free disk space for filesystem that path is on

disk_total_space
float disk_total_space(string path)
   Get total disk space for filesystem that path is on

file_exists
bool file_exists(string filename)
   Returns true if filename exists

fileatime
int fileatime(string filename)
   Get last access time of file

filectime
int filectime(string filename)
   Get inode modification time of file

filegroup
int filegroup(string filename)
   Get file group

fileinode
int fileinode(string filename)
   Get file inode

filemtime
int filemtime(string filename)
   Get last modification time of file

fileowner
int fileowner(string filename)
   Get file owner

fileperms
int fileperms(string filename)
   Get file permissions

filesize
int filesize(string filename)
   Get file size

filetype
string filetype(string filename)
   Get file type

is_dir
bool is_dir(string filename)
   Returns true if file is directory

is_executable
bool is_executable(string filename)
   Returns true if file is executable

is_file
bool is_file(string filename)
   Returns true if file is a regular file

is_link
bool is_link(string filename)
   Returns true if file is symbolic link

is_readable
bool is_readable(string filename)
   Returns true if file can be read

is_writable
bool is_writable(string filename)
   Returns true if file can be written

lstat
array lstat(string filename)
   Give information about a file or symbolic link

stat
array stat(string filename)
   Give information about a file

touch
bool touch(string filename [, int time [, int atime]])
   Set modification time of file

fprintf
int fprintf(resource stream, string format [, mixed arg1 [, mixed ...]])
   Output a formatted string into a stream

printf
int printf(string format [, mixed arg1 [, mixed ...]])
   Output a formatted string

sprintf
string sprintf(string format [, mixed arg1 [, mixed ...]])
   Return a formatted string

vfprintf
int vfprintf(resource stream, string format, array args)
   Output a formatted string into a stream

vprintf
int vprintf(string format, array args)
   Output a formatted string

vsprintf
string vsprintf(string format, array args)
   Return a formatted string

fsockopen
resource fsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]])
   Open Internet or Unix domain socket connection

pfsockopen
resource pfsockopen(string hostname, int port [, int errno [, string errstr [, float timeout]]])
   Open persistent Internet or Unix domain socket connection

ftok
int ftok(string pathname, string proj)
   Convert a pathname and a project identifier to a System V IPC key

header
void header(string header [, bool replace, [int http_response_code]])
   Sends a raw HTTP header

headers_list
array headers_list(void)
   Return list of headers to be sent / already sent

headers_sent
bool headers_sent([string &$file [, int &$line]])
   Returns true if headers have already been sent, false otherwise

setcookie
bool setcookie(string name [, string value [, int expires [, string path [, string domain [, bool secure]]]]])
   Send a cookie

setrawcookie
bool setrawcookie(string name [, string value [, int expires [, string path [, string domain [, bool secure]]]]])
   Send a cookie with no url encoding of the value

get_html_translation_table
array get_html_translation_table([int table [, int quote_style]])
   Returns the internal translation table used by
   htmlspecialchars and htmlentities

html_entity_decode
string html_entity_decode(string string [, int quote_style][, string charset])
   Convert all HTML entities to their applicable characters

htmlentities
string htmlentities(string string [, int quote_style][, string charset])
   Convert all applicable characters to HTML entities

htmlspecialchars
string htmlspecialchars(string string [, int quote_style][, string charset])
   Convert special characters to HTML entities

http_build_query
string http_build_query(mixed formdata [, string prefix])
   Generates a form-encoded query string
   from an associative array or object.

getimagesize
array getimagesize(string imagefile [, array info])
   Get the size of an image as 4-element array

image_type_to_extension
string image_type_to_extension(int imagetype [, bool include_dot])
   Get file extension for image-type returned by
   getimagesize, exif_read_data, exif_thumbnail, exif_imagetype

image_type_to_mime_type
string image_type_to_mime_type(int imagetype)
   Get Mime-Type for image-type returned by getimagesize,
   exif_read_data, exif_thumbnail, exif_imagetype

php_egg_logo_guid
string php_egg_logo_guid(void)
   Return the special ID used to request the PHP logo in phpinfo screens

php_ini_scanned_files
string php_ini_scanned_files(void)
   Return comma-separated string of .ini files
   parsed from the additional ini dir

php_logo_guid
string php_logo_guid(void)
   Return the special ID used to request the PHP logo in phpinfo screens

php_real_logo_guid
string php_real_logo_guid(void)
   Return the special ID used to request the PHP logo in phpinfo screens

php_sapi_name
string php_sapi_name(void)
   Return the current SAPI module name

php_uname
string php_uname(void)
   Return information about the system PHP was built on

phpcredits
void phpcredits([int flag])
   Prints the list of people who've contributed to the PHP project

phpinfo
void phpinfo([int what])
   Output a page of useful information about PHP and the current request

phpversion
string phpversion([string extension])
   Return the current PHP version

zend_logo_guid
string zend_logo_guid(void)
   Return the special ID used to request the Zend logo in phpinfo screens

iptcembed
array iptcembed(string iptcdata, string jpeg_file_name [, int spool])
   Embed binary IPTC data into a JPEG image.

iptcparse
array iptcparse(string iptcdata)
   Parse binary IPTC-data into associative array

lcg_value
float lcg_value()
   Returns a value from the combined linear congruential generator

levenshtein
int levenshtein(string str1, string str2)
   Calculate Levenshtein distance between two strings

link
int link(string target, string link)
   Create a hard link

linkinfo
int linkinfo(string filename)
   Returns the st_dev field of the UNIX C stat structure
   describing the link

readlink
string readlink(string filename)
   Return the target of a symbolic link

symlink
int symlink(string target, string link)
   Create a symbolic link

ezmlm_hash
int ezmlm_hash(string addr)
   Calculate EZMLM list hash value.

mail
int mail(string to, string subject, string message [, string additional_headers [, string additional_parameters]])
   Send an email message

abs
int abs(int number)
   Return the absolute value of the number

acos
float acos(float number)
   Return the arc cosine of the number in radians

acosh
float acosh(float number)
   Returns the inverse hyperbolic cosine of the number,
   i.e. the value whose hyperbolic cosine is number

asin
float asin(float number)
   Returns the arc sine of the number in radians

asinh
float asinh(float number)
   Returns the inverse hyperbolic sine of the number,
   i.e. the value whose hyperbolic sine is number

atan
float atan(float number)
   Returns the arc tangent of the number in radians

atan2
float atan2(float y, float x)
   Returns the arc tangent of y/x,
   with the resulting quadrant determined by the signs of y and x

atanh
float atanh(float number)
   Returns the inverse hyperbolic tangent of the number,
   i.e. the value whose hyperbolic tangent is number

base_convert
string base_convert(string number, int frombase, int tobase)
   Converts a number in a string from any base <= 36 to any base <= 36

bindec
int bindec(string binary_number)
   Returns the decimal equivalent of the binary number

ceil
float ceil(float number)
   Returns the next highest integer value of the number

cos
float cos(float number)
   Returns the cosine of the number in radians

cosh
float cosh(float number)
   Returns the hyperbolic cosine of the number,
   defined as (exp(number) exp(-number))/2

decbin
string decbin(int decimal_number)
   Returns a string containing a binary representation of the number

dechex
string dechex(int decimal_number)
   Returns a string containing a hexadecimal representation
   of the given number

decoct
string decoct(int decimal_number)
   Returns a string containing an octal representation of the given number

deg2rad
float deg2rad(float number)
   Converts the number in degrees to the radian equivalent

exp
float exp(float number)
   Returns e raised to the power of the number

expm1
float expm1(float number)
   Returns exp(number) - 1, computed in a way that
   accurate even when the value of number is close to zero

floor
float floor(float number)
   Returns the next lowest integer value from the number

fmod
float fmod(float x, float y)
   Returns the remainder of dividing x by y as a float

hexdec
int hexdec(string hexadecimal_number)
   Returns the decimal equivalent of the hexadecimal number

hypot
float hypot(float num1, float num2)
   Returns sqrt(num1*num1      num2*num2)

is_finite
bool is_finite(float val)
   Returns whether argument is finite

is_infinite
bool is_infinite(float val)
   Returns whether argument is infinite

is_nan
bool is_nan(float val)
   Returns whether argument is not a number

log
float log(float number, [float base])
   Returns the natural logarithm of the number,
   or the base log if base is specified

log10
float log10(float number)
   Returns the base-10 logarithm of the number

log1p
float log1p(float number)
   Returns log(1 number), computed in a way that
   accurate even when the value of number is close to zero

number_format
string number_format(float number [, int num_decimal_places
   [, string dec_seperator, string thousands_seperator]])
   Formats a number with grouped thousands

octdec
int octdec(string octal_number)
   Returns the decimal equivalent of an octal string

pi
float pi(void)
   Returns an approximation of pi

pow
number pow(number base, number exponent)
   Returns base raised to the power of exponent.
   Returns integer result when possible

rad2deg
float rad2deg(float number)
   Converts the radian number to the equivalent number in degrees

round
float round(float number [, int precision])
   Returns the number rounded to specified precision

sin
float sin(float number)
   Returns the sine of the number in radians

sinh
float sinh(float number)
   Returns the hyperbolic sine of the number,
   defined as (exp(number) - exp(-number))/2

sqrt
float sqrt(float number)
   Returns the square root of the number

tan
float tan(float number)
   Returns the tangent of the number in radians

tanh
float tanh(float number)
   Returns the hyperbolic tangent of the number,
   defined as sinh(number)/cosh(number)

md5
string md5(string str, [ bool raw_output])
   Calculate the md5 hash of a string

md5_file
string md5_file(string filename [, bool raw_output])
   Calculate the md5 hash of given filename

metaphone
string metaphone(string text, int phones)
   Break english phrases down into their phonemes

getrusage
array getrusage([int who])
   Returns an array of usage statistics

gettimeofday
array gettimeofday(void)
   Returns the current time as array

microtime
mixed microtime([bool get_as_float])
   Returns either a string or a float containing the current time
   in seconds and microseconds

pack
string pack(string format, mixed arg1 [, mixed arg2 [, mixed ...]])
   Takes one or more arguments and packs them into a binary string
   according to the format argument

unpack
array unpack(string format, string input)
   Unpack binary string into named array elements
   according to format argument

getlastmod
int getlastmod(void)
   Get time of last page modification

getmygid
int getmygid(void)
   Get PHP script owner's GID

getmyinode
int getmyinode(void)
   Get the inode of the current script being parsed

getmypid
int getmypid(void)
   Get current process ID

getmyuid
int getmyuid(void)
   Get PHP script owner's UID

proc_close
int proc_close(resource process)
   close a process opened by proc_open

proc_get_status
array proc_get_status(resource process)
   get information about a process opened by proc_open

proc_open
resource proc_open(string command, array descriptorspec, array &pipes
   [, string cwd [, array env [, array other_options]]])
   Run a process with more control over it's file descriptors

proc_terminate
int proc_terminate(resource process [, long signal])
   kill a process opened by proc_open

quoted_printable_decode
string quoted_printable_decode(string str)
   Convert a quoted-printable string to an 8 bit string

getrandmax
int getrandmax(void)
   Returns the maximum value a random number can have

mt_getrandmax
int mt_getrandmax(void)
   Returns the maximum value a random number from Mersenne Twister can have

mt_rand
int mt_rand([int min, int max])
   Returns a random number from Mersenne Twister

mt_srand
void mt_srand([int seed])
   Seeds Mersenne Twister random number generator

rand
int rand([int min, int max])
   Returns a random number

srand
void srand([int seed])
   Seeds random number generator

ereg
int ereg(string pattern, string string [, array registers])
   Regular expression match

ereg_replace
string ereg_replace(string pattern, string replacement, string string)
   Replace regular expression

eregi
int eregi(string pattern, string string [, array registers])
   Case-insensitive regular expression match

eregi_replace
string eregi_replace(string pattern, string replacement, string string)
   Case insensitive replace regular expression

split
array split(string pattern, string string [, int limit])
   Split string into array by regular expression

spliti
array spliti(string pattern, string string [, int limit])
   Split string into array by regular expression case-insensitive

sql_regcase
string sql_regcase(string string)
   Make regular expression for case insensitive match

sha1
string sha1(string str [, bool raw_output])
   Calculate the sha1 hash of a string

sha1_file
string sha1_file(string filename [, bool raw_output])
   Calculate the sha1 hash of given filename

soundex
string soundex(string str)
   Calculate the soundex key of a string

set_socket_blocking
bool set_socket_blocking(resource socket, int mode)
   Set blocking/non-blocking mode on a socket

stream_context_create
resource stream_context_create([array options])
   Create a file context and optionally set parameters

stream_context_get_default
resource stream_context_get_default([array options])
   Get a handle on the default file/stream context
   and optionally set parameters

stream_context_get_options
array stream_context_get_options(resource context|resource stream)
   Retrieve options for a stream/wrapper/context

stream_context_set_option
bool stream_context_set_option(resource context|resource stream, string wrappername, string optionname, mixed value)
   Set an option for a wrapper

stream_context_set_params
bool stream_context_set_params(resource context|resource stream, array options)
   Set parameters for a file context

stream_copy_to_stream
long stream_copy_to_stream(resource source, resource dest [, long maxlen ])
   Reads up to maxlen bytes from source stream
   and writes them to dest stream.

stream_filter_append
bool stream_filter_append(resource stream, string filtername [, int read_write [, string filterparams]])
   Append a filter to a stream

stream_filter_prepend
bool stream_filter_prepend(resource stream, string filtername [, int read_write [, string filterparams]])
   Prepend a filter to a stream

stream_get_contents
long stream_get_contents(resource source [, long maxlen ])
   Reads all remaining bytes (or up to maxlen bytes)
   from a stream and returns them as a string.

stream_get_line
string stream_get_line(resource stream, int maxlen, string ending)
   Read up to maxlen bytes from a stream or until the ending string is found

stream_get_meta_data
resource stream_get_meta_data(resource fp)
   Retrieves header/meta data from streams/file pointers

stream_get_transports
array stream_get_transports()
   Retrieves list of registered socket transports

stream_get_wrappers
array stream_get_wrappers()
   Retrieves list of registered stream wrappers

stream_select
int stream_select(array &read_streams, array &write_streams, array &except_streams, int tv_sec[, int tv_usec])
   Runs the select() system call on the sets of streams
   with a timeout specified by tv_sec and tv_usec

stream_set_blocking
bool stream_set_blocking(resource socket, int mode)
   Set blocking/non-blocking mode on a socket or stream

stream_set_timeout
bool stream_set_timeout(resource stream, int seconds, int microseconds)
   Set timeout on stream read to seconds  microseonds

stream_set_write_buffer
int stream_set_write_buffer(resource fp, int buffer)
   Set file write buffer

stream_socket_accept
resource stream_socket_accept(resource serverstream [, double timeout, string &peername ])
   Accept a client connection from a server socket

stream_socket_client
resource stream_socket_client(string remoteaddress [, long &errcode, string &errstring, double timeout, long flags, resource context])
   Open a client connection to a remote address

stream_socket_enable_crypto
bool stream_socket_enable_crypto(resource stream, bool enable [, int cryptokind, resource sessionstream])
   Enable or disable a specific kind of crypto on the stream

stream_socket_get_name
string stream_socket_get_name(resource stream, bool want_peer)
   Returns either the locally bound or remote name for a socket stream

stream_socket_recvfrom
string stream_socket_recvfrom(resource stream, long amount [, long flags [, string &remote_addr]])
   Receives data from a socket stream

stream_socket_sendto
long stream_socket_sendto(resouce stream, string data [, long flags [, string target_addr]])
   Send data to a socket stream.
   If target_addr is specified it must be in dotted quad (or [ipv6]) format

stream_socket_server
resource stream_socket_server(string localaddress [, long &errcode, string &errstring, long flags, resource context])
   Create a server socket bound to localaddress

addcslashes
string addcslashes(string str, string charlist)
   Escapes all chars mentioned in charlist with backslash.
   It creates octal representations if asked to backslash
   characters with 8th bit set or with ASCII<32
   (except '\n', '\r', '\t' etc...)

addslashes
string addslashes(string str)
   Escapes single quote, double quotes and backslash characters
   in a string with backslashes

basename
string basename(string path [, string suffix])
   Returns the filename component of the path

bin2hex
string bin2hex(string data)
   Converts the binary representation of data to hex

chr
string chr(int ascii)
   Converts ASCII code to a character

chunk_split
string chunk_split(string str [, int chunklen [, string ending]])
   Returns split line

count_chars
mixed count_chars(string input [, int mode])
   Returns info about what characters are used in input

dirname
string dirname(string path)
   Returns the directory name component of the path

explode
array explode(string separator, string str [, int limit])
   Splits a string on string separator
   and return array of components.
   If limit is positive only limit number of components
   is returned. If limit is negative all components
   except the last abs(limit) are returned.

hebrev
string hebrev(string str [, int max_chars_per_line])
   Converts logical Hebrew text to visual text

hebrevc
string hebrevc(string str [, int max_chars_per_line])
   Converts logical Hebrew text to visual text with newline conversion

implode
string implode([string glue,] array pieces)
   Joins array elements placing glue string between
   items and return one string

join
string join(array src, string glue)
   An alias for implode

localeconv
array localeconv(void)
   Returns numeric formatting information based on the current locale

ltrim
string ltrim(string str [, string character_mask])
   Strips whitespace from the beginning of a string

money_format
string money_format(string format , float value)
   Convert monetary value(s) to string

nl2br
string nl2br(string str)
   Converts newlines to HTML line breaks

nl_langinfo
string nl_langinfo(int item)
   Query language and locale information

ord
int ord(string character)
   Returns ASCII value of character

parse_str
void parse_str(string encoded_string [, array result])
   Parses GET/POST/COOKIE data and sets global variables

pathinfo
array pathinfo(string path)
   Returns information about a certain string

quotemeta
string quotemeta(string str)
   Quotes meta characters

rtrim
string rtrim(string str [, string character_mask])
   Removes trailing whitespace

setlocale
string setlocale(mixed category, string locale [, string ...])
   Set locale information

similar_text
int similar_text(string str1, string str2 [, float percent])
   Calculates the similarity between two strings

sscanf
mixed sscanf(string str, string format [, string ...])
   Implements an ANSI C compatible sscanf

str_ireplace
mixed str_ireplace(mixed search, mixed replace, mixed subject [, int &replace_count])
   Replaces all occurrences of search in haystack
   with replace / case-insensitive

str_pad
string str_pad(string input, int pad_length [, string pad_string [, int pad_type]])
   Returns input string padded on the left or right
   to specified length with pad_string

str_repeat
string str_repeat(string input, int mult)
   Returns the input string repeat mult times

str_replace
mixed str_replace(mixed search, mixed replace, mixed subject [, int &replace_count])
   Replaces all occurrences of search in haystack with replace

str_rot13
string str_rot13(string str)
   Perform the rot13 transform on a string

str_shuffle
void str_shuffle(string str)
   Shuffles string. One permutation of all possible is created

str_split
array str_split(string str [, int split_length])
   Convert a string to an array. If split_length is specified,
   break the string down into chunks each split_length characters long.

str_word_count
mixed str_word_count(string str, [int format])
   Counts the number of words inside a string.
   If format of 1 is specified, then the function will
   return an array containing all the words
   found inside the string.
   If format of 2 is specified, then the function will
   return an associated array where the position of the
   word is the key and the word itself is the value.
   For the purpose of this function, 'word' is defined
   as a locale dependent string containing alphabetic
   characters, which also may contain, but not start
   with "'" and "-" characters.

strchr
string strchr(string haystack, string needle)
   An alias for strstr

strcoll
int strcoll(string str1, string str2)
   Compares two strings using the current locale

strcspn
int strcspn(string str, string mask [, start [, len]])
   Finds length of initial segment consisting
   entirely of characters not found in mask.
   If start or/and length is provide works like
   strcspn(substr($s,$start,$len),$bad_chars)

strip_tags
string strip_tags(string str [, string allowable_tags])
   Strips HTML and PHP tags from a string

stripcslashes
string stripcslashes(string str)
   Strips backslashes from a string. Uses C-style conventions

stripos
int stripos(string haystack, string needle [, int offset])
   Finds position of first occurrence of a string within another,
   case insensitive

stripslashes
string stripslashes(string str)
   Strips backslashes from a string

stristr
string stristr(string haystack, string needle)
   Finds first occurrence of a string within another,
   case insensitive

strnatcasecmp
int strnatcasecmp(string s1, string s2)
   Returns the result of case-insensitive string comparison
   using 'natural' algorithm

strnatcmp
int strnatcmp(string s1, string s2)
   Returns the result of string comparison using 'natural' algorithm

strpbrk
array strpbrk(string haystack, string char_list)
   Search a string for any of a set of characters

strpos
int strpos(string haystack, string needle [, int offset])
   Finds position of first occurrence of a string within another

strrchr
string strrchr(string haystack, string needle)
   Finds the last occurrence of a character in a string within another

strrev
string strrev(string str)
   Reverse a string

strripos
int strripos(string haystack, string needle [, int offset])
   Finds position of last occurrence of a string within another string

strrpos
int strrpos(string haystack, string needle [, int offset])
   Finds position of last occurrence of a string within another string

strspn
int strspn(string str, string mask [, start [, len]])
   Finds length of initial segment consisting entirely
   of characters found in mask.
   If start or/and length is provided works like
   strspn(substr($s,$start,$len),$good_chars)

strstr
string strstr(string haystack, string needle)
   Finds first occurrence of a string within another

strtok
string strtok([string str,] string token)
   Tokenize a string

strtolower
string strtolower(string str)
   Makes a string lowercase

strtoupper
string strtoupper(string str)
   Makes a string uppercase

strtr
string strtr(string str, string from, string to)
   Translates characters in str using given translation tables

substr
string substr(string str, int start [, int length])
   Returns part of a string

substr_compare
int substr_compare(string main_str, string str, int offset [, int length [, bool case_sensitivity]])
   Binary safe optionally case insensitive comparison of 2 strings
   from an offset, up to length characters

substr_count
int substr_count(string haystack, string needle)
   Returns the number of times a substring occurs in the string

substr_replace
mixed substr_replace(mixed str, mixed repl, mixed start [, mixed length])
   Replaces part of a string with another string

trim
string trim(string str [, string character_mask])
   Strips whitespace from the beginning and end of a string

ucfirst
string ucfirst(string str)
   Makes a string's first character uppercase

ucwords
string ucwords(string str)
   Uppercase the first character of every word in a string

wordwrap
string wordwrap(string str [, int width [, string break [, boolean cut]]])
   Wraps buffer to selected number of characters using string break char

date_sunrise
mixed date_sunrise(mixed time [, int format [, float latitude [, float longitude [, float zenith [, float gmt_offset]]]]])
   Returns time of sunrise for a given day and location

date_sunset
mixed date_sunset(mixed time [, int format [, float latitude [, float longitude [, float zenith [, float gmt_offset]]]]])
   Returns time of sunset for a given day and location

closelog
bool closelog(void)
   Close connection to system logger

define_syslog_variables
void define_syslog_variables(void)
   Initializes all syslog-related variables

openlog
bool openlog(string ident, int option, int facility)
   Open connection to system logger

syslog
bool syslog(int priority, string message)
   Generate a system log message

floatval
float floatval(mixed var)
   Get the float value of a variable

gettype
string gettype(mixed var)
   Returns the type of the variable

intval
int intval(mixed var [, int base])
   Get the integer value of a variable
   using the optional base for the conversion

is_array
bool is_array(mixed var)
   Returns true if variable is an array

is_bool
bool is_bool(mixed var)
   Returns true if variable is a boolean

is_callable
bool is_callable(mixed var [, bool syntax_only [, string callable_name]])
   Returns true if var is callable.

is_float
bool is_float(mixed var)
   Returns true if variable is float point

is_long
bool is_long(mixed var)
   Returns true if variable is a long (integer)

is_null
bool is_null(mixed var)
   Returns true if variable is null

is_numeric
bool is_numeric(mixed value)
   Returns true if value is a number or a numeric string

is_object
bool is_object(mixed var)
   Returns true if variable is an object

is_resource
bool is_resource(mixed var)
   Returns true if variable is a resource

is_scalar
bool is_scalar(mixed value)
   Returns true if value is a scalar

is_string
bool is_string(mixed var)
   Returns true if variable is a string

settype
bool settype(mixed var, string type)
   Set the type of the variable

strval
string strval(mixed var)
   Get the string value of a variable

uniqid
string uniqid([string prefix , bool more_entropy])
   Generates a unique ID

get_headers
array get_headers(string url)
   fetches all the headers sent by the server in response to a HTTP request

parse_url
array parse_url(string url)
   Parse a URL and return its components

rawurldecode
string rawurldecode(string str)
   Decodes URL-encodes string

rawurlencode
string rawurlencode(string str)
   URL-encodes string

urldecode
string urldecode(string str)
   Decodes URL-encoded string

urlencode
string urlencode(string str)
   URL-encodes string

stream_bucket_append
void stream_bucket_append(resource brigade, resource bucket)
   Append bucket to brigade

stream_bucket_make_writeable
object stream_bucket_make_writeable(resource brigade)
   Return a bucket object from the brigade for operating on

stream_bucket_new
resource stream_bucket_new(resource stream, string buffer)
   Create a new bucket for use on the current stream

stream_bucket_prepend
void stream_bucket_prepend(resource brigade, resource bucket)
   Prepend bucket to brigade

stream_filter_register
bool stream_filter_register(string filtername, string classname)
   Registers a custom filter handler class

stream_get_filters
array stream_get_filters(void)
   Returns a list of registered filters

uudecode
string uudecode(string data)
   decode a uuencoded string

uuencode
string uuencode(string data)
   uuencode a string

debug_zval_dump
void debug_zval_dump(mixed var)
   Dumps a string representation of an internal zend value to output.

memory_get_usage
int memory_get_usage()
   Returns the allocated by PHP memory

serialize
string serialize(mixed variable)
   Returns a string representation of variable
   (which can later be unserialized)

unserialize
mixed unserialize(string variable_representation)
   Takes a string representation of variable and recreates it

var_dump
void var_dump(mixed var)
   Dumps a string representation of variable to output

var_export
mixed var_export(mixed var [, bool return])
   Outputs or returns a string representation of a variable

version_compare
int version_compare(string ver1, string ver2 [, string oper])
   Compares two "PHP-standardized" version number strings

sybase_affected_rows
int sybase_affected_rows([int link_id])
   Get number of affected rows in last query

sybase_close
bool sybase_close([int link_id])
   Close Sybase connection

sybase_connect
int sybase_connect([string host [, string user [, string password [, string charset [, string appname]]]]])
   Open Sybase server connection

sybase_data_seek
bool sybase_data_seek(int result, int offset)
   Move internal row pointer

sybase_deadlock_retry_count
void sybase_deadlock_retry_count(int retry_count)
   Sets deadlock retry count

sybase_fetch_array
array sybase_fetch_array(int result)
   Fetch row as array

sybase_fetch_assoc
array sybase_fetch_assoc(int result)
   Fetch row as array without numberic indices

sybase_fetch_field
object sybase_fetch_field(int result [, int offset])
   Get field information

sybase_fetch_object
object sybase_fetch_object(int result [, mixed object])
   Fetch row as object

sybase_fetch_row
array sybase_fetch_row(int result)
   Get row as enumerated array

sybase_field_seek
bool sybase_field_seek(int result, int offset)
   Set field offset

sybase_free_result
bool sybase_free_result(int result)
   Free result memory

sybase_get_last_message
string sybase_get_last_message(void)
   Returns the last message from server (over min_message_severity)

sybase_min_client_severity
void sybase_min_client_severity(int severity)
   Sets minimum client severity

sybase_min_server_severity
void sybase_min_server_severity(int severity)
   Sets minimum server severity

sybase_num_fields
int sybase_num_fields(int result)
   Get number of fields in result

sybase_num_rows
int sybase_num_rows(int result)
   Get number of rows in result

sybase_pconnect
int sybase_pconnect([string host [, string user [, string password [, string charset [, string appname]]]]])
   Open persistent Sybase connection

sybase_query
int sybase_query(string query [, int link_id])
   Send Sybase query

sybase_result
string sybase_result(int result, int row, mixed field)
   Get result data

sybase_select_db
bool sybase_select_db(string database [, int link_id])
   Select Sybase database

sybase_set_message_handler
bool sybase_set_message_handler(mixed error_func [, resource connection])
   Set the error handler, to be called when a server message is raised.
   If error_func is NULL the handler will be deleted

sybase_unbuffered_query
int sybase_unbuffered_query(string query [, int link_id])
   Send Sybase query

msg_get_queue
resource msg_get_queue(int key [, int perms])
   Attach to a message queue

msg_receive
mixed msg_receive(resource queue, int desiredmsgtype, int &msgtype, int maxsize, mixed message
	[, bool unserialize=true [, int flags=0 [, int errorcode]]])
   Send a message of type msgtype (must be > 0) to a message queue

msg_remove_queue
bool msg_remove_queue(resource queue)
   Destroy the queue

msg_send
bool msg_send(resource queue, int msgtype, mixed message [, bool serialize=true [, bool blocking=true [, int errorcode]]])
   Send a message of type msgtype (must be > 0) to a message queue

msg_set_queue
bool msg_set_queue(resource queue, array data)
   Set information for a message queue

msg_stat_queue
array msg_stat_queue(resource queue)
   Returns information about a message queue

sem_acquire
bool sem_acquire(resource id)
   Acquires the semaphore with the given id, blocking if necessary

sem_get
resource sem_get(int key [, int max_acquire [, int perm [, int auto_release]])
   Return an id for the semaphore with the given key,
   and allow max_acquire (default 1) processes
   to acquire it simultaneously

sem_release
bool sem_release(resource id)
   Releases the semaphore with the given id

sem_remove
bool sem_remove(resource id)
   Removes semaphore from Unix systems

shm_attach
int shm_attach(int key [, int memsize [, int perm]])
   Creates or open a shared memory segment

shm_detach
bool shm_detach(int shm_identifier)
   Disconnects from shared memory segment

shm_get_var
mixed shm_get_var(int id, int variable_key)
   Returns a variable from shared memory

shm_put_var
bool shm_put_var(int shm_identifier, int variable_key, mixed variable)
   Inserts or updates a variable in shared memory

shm_remove
bool shm_remove(int shm_identifier)
   Removes shared memory from Unix systems

shm_remove_var
bool shm_remove_var(int id, int variable_key)
   Removes variable from shared memory

tidyNode::tidyNode
tidyNode::tidyNode()
   Constructor.

tidyNode::hasChildren
boolean tidyNode::hasChildren()
   Returns true if this node has children

tidyNode::hasSiblings
boolean tidyNode::hasSiblings()
   Returns true if this node has siblings

tidyNode::isAsp
boolean tidyNode::isAsp()
   Returns true if this node is ASP

tidyNode::isComment
boolean tidyNode::isComment()
   Returns true if this node represents a comment

tidyNode::isHtml
boolean tidyNode::isHtml()
   Returns true if this node is part of a HTML document

tidyNode::isJste
boolean tidyNode::isJste()
   Returns true if this node is JSTE

tidyNode::isPhp
boolean tidyNode::isPhp()
   Returns true if this node is PHP

tidyNode::isText
boolean tidyNode::isText()
   Returns true if this node represents text (no markup)

tidyNode::isXhtml
boolean tidyNode::isXhtml()
   Returns true if this node is part of a XHTML document

tidyNode::isXml
boolean tidyNode::isXml()
   Returns true if this node is part of a XML document

tidy_access_count
int tidy_access_count()
   Returns the Number of Tidy accessibility warnings encountered
   for specified document.

tidy_clean_repair
boolean tidy_clean_repair()
   Execute configured cleanup and repair operations on parsed markup

tidy_config_count
int tidy_config_count()
   Returns the Number of Tidy configuration errors encountered
   for specified document.

tidy_diagnose
boolean tidy_diagnose()
   Run configured diagnostics on parsed and repaired markup.

tidy_error_count
int tidy_error_count()
   Returns the Number of Tidy errors encountered for specified document.

tidy_get_body
TidyNode tidy_get_body(resource tidy)
   Returns a TidyNode Object starting from the <BODY> tag
   of the tidy parse tree

tidy_get_config
array tidy_get_config()
   Get current Tidy configuarion

tidy_get_error_buffer
string tidy_get_error_buffer([boolean detailed])
   Return warnings and errors which occured parsing the specified document

tidy_get_head
TidyNode tidy_get_head()
   Returns a TidyNode Object starting from the <HEAD> tag
   of the tidy parse tree

tidy_get_html
TidyNode tidy_get_html()
   Returns a TidyNode Object starting from the <HTML> tag
   of the tidy parse tree

tidy_get_html_ver
int tidy_get_html_ver()
   Get the Detected HTML version for the specified document.

tidy_get_output
string tidy_get_output()
   Return a string representing the parsed tidy markup

tidy_get_release
string tidy_get_release()
   Get release date (version) for Tidy library

tidy_get_root
TidyNode tidy_get_root()
   Returns a TidyNode Object representing the root of the tidy parse tree

tidy_get_status
int tidy_get_status()
   Get status of specfied document.

tidy_getopt
mixed tidy_getopt(string option)
   Returns the value of the specified configuration option
   for the tidy document.

tidy_is_xhtml
boolean tidy_is_xhtml()
   Indicates if the document is a XHTML document.

tidy_is_xml
boolean tidy_is_xml()
   Indicates if the document is a generic (non HTML/XHTML) XML document.

tidy_parse_file
boolean tidy_parse_file(string file [, mixed config_options [, string encoding [, bool use_include_path]]])
   Parse markup in file or URI

tidy_parse_string
bool tidy_parse_string(string input [, mixed config_options [, string encoding]])
   Parse a document stored in a string

tidy_repair_file
boolean tidy_repair_file(string filename [, mixed config_file [, string encoding [, bool use_include_path]]])
   Repair a file using an optionally provided configuration file

tidy_repair_string
boolean tidy_repair_string(string data [, mixed config_file [, string encoding]])
   Repair a string using an optionally provided configuration file

tidy_warning_count
int tidy_warning_count()
   Returns the Number of Tidy warnings encountered for specified document.

token_get_all
array token_get_all(string source)

token_name
string token_name(int type)
   *	Unregisters a previously loaded function

wddx_add_vars
int wddx_add_vars(int packet_id,  mixed var_names [, mixed ...])
   Serializes given variables and adds them to packet given by packet_id

wddx_deserialize
mixed wddx_deserialize(mixed packet)
   Deserializes given packet and returns a PHP value

wddx_packet_end
string wddx_packet_end(int packet_id)
   Ends specified WDDX packet and returns the string containing the packet

wddx_packet_start
int wddx_packet_start([string comment])
   Starts a WDDX packet with optional comment and returns the packet id

wddx_serialize_value
string wddx_serialize_value(mixed var [, string comment])
   Creates a new packet and serializes the given value

wddx_serialize_vars
string wddx_serialize_vars(mixed var_name [, mixed ...])
   Creates a new packet and serializes given variables into a struct

utf8_decode
string utf8_decode(string data)
   Converts a UTF-8 encoded string to ISO-8859-1

utf8_encode
string utf8_encode(string data)
   Encodes an ISO-8859-1 string to UTF-8

xml_error_string
string xml_error_string(int code)
   Get XML parser error string

xml_get_current_byte_index
int xml_get_current_byte_index(resource parser)
   Get current byte index for an XML parser

xml_get_current_column_number
int xml_get_current_column_number(resource parser)
   Get current column number for an XML parser

xml_get_current_line_number
int xml_get_current_line_number(resource parser)
   Get current line number for an XML parser

xml_get_error_code
int xml_get_error_code(resource parser)
   Get XML parser error code

xml_parse
int xml_parse(resource parser, string data [, int isFinal])
   Start parsing an XML document

xml_parse_into_struct
int xml_parse_into_struct(resource parser, string data, array &struct, array &index)
   Parsing a XML document

xml_parser_create
resource xml_parser_create([string encoding])
   Create an XML parser

xml_parser_create_ns
resource xml_parser_create_ns([string encoding [, string sep]])
   Create an XML parser

xml_parser_free
int xml_parser_free(resource parser)
   Free an XML parser

xml_parser_get_option
int xml_parser_get_option(resource parser, int option)
   Get options from an XML parser

xml_parser_set_option
int xml_parser_set_option(resource parser, int option, mixed value)
   Set options in an XML parser

xml_set_character_data_handler
int xml_set_character_data_handler(resource parser, string hdl)
   Set up character data handler

xml_set_default_handler
int xml_set_default_handler(resource parser, string hdl)
   Set up default handler

xml_set_element_handler
int xml_set_element_handler(resource parser, string shdl, string ehdl)
   Set up start and end element handlers

xml_set_end_namespace_decl_handler
int xml_set_end_namespace_decl_handler(resource parser, string hdl)
   Set up character data handler

xml_set_external_entity_ref_handler
int xml_set_external_entity_ref_handler(resource parser, string hdl)
   Set up external entity reference handler

xml_set_notation_decl_handler
int xml_set_notation_decl_handler(resource parser, string hdl)
   Set up notation declaration handler

xml_set_object
int xml_set_object(resource parser, object &obj)
   Set up object which should be used for callbacks

xml_set_processing_instruction_handler
int xml_set_processing_instruction_handler(resource parser, string hdl)
   Set up processing instruction (PI) handler

xml_set_start_namespace_decl_handler
int xml_set_start_namespace_decl_handler(resource parser, string hdl)
   Set up character data handler

xml_set_unparsed_entity_decl_handler
int xml_set_unparsed_entity_decl_handler(resource parser, string hdl)
   Set up unparsed entity declaration handler

xmlrpc_decode
array xmlrpc_decode(string xml [, string encoding])
   Decodes XML into native PHP types

xmlrpc_decode_request
array xmlrpc_decode_request(string xml, string& method [, string encoding])
   Decodes XML into native PHP types

xmlrpc_encode
string xmlrpc_encode(mixed value)
   Generates XML for a PHP value

xmlrpc_encode_request
string xmlrpc_encode_request(string method, mixed params)
   Generates XML for a method request

xmlrpc_get_type
string xmlrpc_get_type(mixed value)
   Gets xmlrpc type for a PHP value.
   Especially useful for base64 and datetime strings

xmlrpc_is_fault
bool xmlrpc_is_fault(array)
   Determines if an array value represents an XMLRPC fault.

xmlrpc_parse_method_descriptions
array xmlrpc_parse_method_descriptions(string xml)
   Decodes XML into a list of method descriptions

xmlrpc_server_add_introspection_data
int xmlrpc_server_add_introspection_data(resource server, array desc)
   Adds introspection documentation

xmlrpc_server_call_method
mixed xmlrpc_server_call_method(resource server, string xml, mixed user_data [, array output_options])
   Parses XML requests and call methods

xmlrpc_server_create
resource xmlrpc_server_create(void)
   Creates an xmlrpc server

xmlrpc_server_destroy
int xmlrpc_server_destroy(resource server)
   Destroys server resources

xmlrpc_server_register_introspection_callback
bool xmlrpc_server_register_introspection_callback(resource server, string function)
   Register a PHP function to generate documentation

xmlrpc_server_register_method
bool xmlrpc_server_register_method(resource server, string method_name, string function)
   Register a PHP function to handle method matching method_name

xmlrpc_set_type
bool xmlrpc_set_type(string value, string type)
   Sets xmlrpc type, base64 or datetime, for a PHP string value

sl_xsltprocessor_has_exslt_support
xsl_xsltprocessor_has_exslt_support();

sl_xsltprocessor_register_php_functions
xsl_xsltprocessor_register_php_functions();

xsl_xsltprocessor_get_parameter
xsl_ xsl_xsltprocessor_get_parameter(string namespace, string name);

xsl_xsltprocessor_import_stylesheet
xsl_xsltdocucument xsl_xsltprocessor_import_stylesheet(node index);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#

xsl_xsltprocessor_remove_parameter
xsl_ xsl_xsltprocessor_remove_parameter(string namespace, string name);

xsl_xsltprocessor_set_parameter
xsl_ xsl_xsltprocessor_set_parameter(string namespace, mixed name [, string value]);

xsl_xsltprocessor_transform_to_doc
xsl_document xsl_xsltprocessor_transform_to_doc(node doc [,boolean clone]);
   URL: http://www.w3.org/TR/2003/WD-DOM-Level-3-Core-20030226/DOM3-Core.html#

xsl_xsltprocessor_transform_to_uri
xsl_ xsl_xsltprocessor_transform_to_uri(node doc, string uri [,boolean clone]);

xsl_xsltprocessor_transform_to_xml
xsl_string xsl_xsltprocessor_transform_to_xml(node doc [,boolean clone]);

yp_all
bool yp_all(string domain, string map, string callback)
   Traverse the map and call a function on each entry

yp_cat
array yp_cat(string domain, string map)
   Return an array containing the entire map

yp_err_string
string yp_err_string(int errorcode)
   Returns the corresponding error string for the given error code

yp_errno
int yp_errno()
   Returns the error code from the last call or 0 if no error occured

yp_first
array yp_first(string domain, string map)
   Returns the first key as array with $var[$key]
   and the the line as the value

yp_get_default_domain
string yp_get_default_domain(void)
   Returns the domain or false

yp_master
string yp_master(string domain, string map)
   Returns the machine name of the master

yp_match
string yp_match(string domain, string map, string key)
   Returns the matched line or false

yp_next
array yp_next(string domain, string map, string key)
   Returns an array with $var[$key] and the the line as the value

yp_order
int yp_order(string domain, string map)
   Returns the order number or false

gzcompress
string gzcompress(string data [, int level])
   Gzip-compress a string

gzdeflate
string gzdeflate(string data [, int level])
   Gzip-compress a string

gzencode
string gzencode(string data [, int level [, int encoding_mode]])
   GZ encode a string

gzfile
array gzfile(string filename [, int use_include_path])
   Read und uncompress entire .gz-file into an array

gzinflate
string gzinflate(string data [, int length])
   Unzip a gzip-compressed string

gzopen
resource gzopen(string filename, string mode [, int use_include_path])
   Open a .gz-file and return a .gz-file pointer

gzuncompress
string gzuncompress(string data [, int length])
   Unzip a gzip-compressed string

ob_gzhandler
string ob_gzhandler(string str, int mode)
   Encode str based on accept-encoding setting -
   designed to be called from ob_start()

readgzfile
int readgzfile(string filename [, int use_include_path])
   Output a .gz-file

zlib_get_coding_type
string zlib_get_coding_type(void)
   Returns the coding type used for output compression

set_time_limit
bool set_time_limit(int seconds)
   Sets the maximum time a script can run

ob_clean
bool ob_clean(void)
   Clean (delete) the current output buffer

ob_end_clean
bool ob_end_clean(void)
   Clean the output buffer, and delete current output buffer

ob_end_flush
bool ob_end_flush(void)
   Flush (send) the output buffer, and delete current output buffer

ob_flush
bool ob_flush(void)
   Flush (send) contents of the output buffer.
   The last buffer content is sent to next buffer

ob_get_clean
bool ob_get_clean(void)
   Get current buffer contents and delete current output buffer

ob_get_contents
string ob_get_contents(void)
   Return the contents of the output buffer

ob_get_flush
bool ob_get_flush(void)
   Get current buffer contents, flush (send) the output buffer,
   and delete current output buffer

ob_get_length
int ob_get_length(void)
   Return the length of the output buffer

ob_get_level
int ob_get_level(void)
   Return the nesting level of the output buffer

ob_get_status
false|array ob_get_status([bool full_status])
   Return the status of the active or all output buffers

ob_implicit_flush
void ob_implicit_flush([int flag])
   Turn implicit flush on/off and
   is equivalent to calling flush() after every output call

ob_list_handlers
false|array ob_list_handlers()
   *  List all output_buffers in an array

ob_start
bool ob_start([ string|array user_function [, int chunk_size [, bool erase]]])
   Turn on Output Buffering (specifying an optional output handler).

output_add_rewrite_var
bool output_add_rewrite_var(string name, string value)
   Add URL rewriter values

output_reset_rewrite_vars
bool output_reset_rewrite_vars(void)
   Reset(clear) URL rewriter values

stream_wrapper_register
bool stream_wrapper_register(string protocol, string classname)
   Registers a custom URL protocol handler class

getallheaders
array getallheaders(void)
   Alias for apache_request_headers()

apache_request_basic_auth_pw
apache_request_basic_auth_pw()

ApacheRequest::allowed
int ApacheRequest::allowed([int allowed])

ApacheRequest::args
string ApacheRequest::args([string new_args])

ApacheRequest::assbackwards
int ApacheRequest::assbackwards()

ApacheRequest::boundary
string ApacheRequest::boundary()

ApacheRequest::bytes_sent
int ApacheRequest::bytes_sent()

ApacheRequest::chunked
int ApacheRequest::chunked()

ApacheRequest::content_encoding
string ApacheRequest::content_encoding([string new_encoding])

ApacheRequest::content_length
int ApacheRequest::content_length([int new_content_length])

ApacheRequest::content_type
string ApacheRequest::content_type([string new_type])

ApacheRequest::filename
string ApacheRequest::filename([string new_filename])

ApacheRequest::handler
string ApacheRequest::handler([string new_handler])

ApacheRequest::header_only
int ApacheRequest::header_only()

ApacheRequest::hostname
string ApacheRequest::hostname()

ApacheRequest::method
string ApacheRequest::method()

ApacheRequest::method_number
int ApacheRequest::method_number([int method_number])

ApacheRequest::mtime
int ApacheRequest::mtime()

ApacheRequest::no_cache
int ApacheRequest::no_cache()

ApacheRequest::no_local_copy
int ApacheRequest::no_local_copy()

ApacheRequest::path_info
string ApacheRequest::path_info([string new_path_info])

ApacheRequest::proto_num
int ApacheRequest::proto_num()

ApacheRequest::protocol
string ApacheRequest::protocol()

ApacheRequest::proxyreq
int ApacheRequest::proxyreq([int new_proxyreq])

ApacheRequest::read_body
int ApacheRequest::read_body()

ApacheRequest::remaining
int ApacheRequest::remaining()

ApacheRequest::request_time
int ApacheRequest::request_time()

ApacheRequest::status
int ApacheRequest::status([int new_status])

ApacheRequest::status_line
string ApacheRequest::status_line([string new_status_line])

ApacheRequest::the_request
string ApacheRequest::the_request()

ApacheRequest::unparsed_uri
string ApacheRequest::unparsed_uri([string new_unparsed_uri])

ApacheRequest::uri
string ApacheRequest::uri([string new_uri])

apache_child_terminate
bool apache_child_terminate(void)
   Terminate apache process after this request

apache_get_modules
array apache_get_modules(void)
   Get a list of loaded Apache modules

apache_get_version
string apache_get_version(void)
   Fetch Apache version

apache_lookup_uri
object apache_lookup_uri(string URI)
   Perform a partial request of the given URI
   to obtain information about it

apache_note
string apache_note(string note_name [, string note_value])
   Get and set Apache request notes

apache_request_auth_name
string apache_request_auth_name()

apache_request_auth_type
string apache_request_auth_type()

apache_request_discard_request_body
long apache_request_discard_request_body()

apache_request_err_headers_out
array apache_request_err_headers_out([{string name|array list} [, string value [, bool replace = false]]])
   * fetch all headers that go out in case of an error or a subrequest

apache_request_headers
array apache_request_headers(void)
   Fetch all HTTP request headers

apache_request_headers_in
array apache_request_headers_in()
   * fetch all incoming request headers

apache_request_headers_out
array apache_request_headers_out([{string name|array list} [, string value [, bool replace = false]]])
   * fetch all outgoing request headers

apache_request_is_initial_req
bool apache_request_is_initial_req()

apache_request_log_error
boolean apache_request_log_error(string message, [long facility])

apache_request_meets_conditions
long apache_request_meets_conditions()

apache_request_remote_host
int apache_request_remote_host([int type])

apache_request_run
long apache_request_run()
   This is a wrapper for ap_sub_run_req and ap_destory_sub_req.
   It takes sub_request, runs it, destroys it, and returns it's status.

apache_request_satisfies
long apache_request_satisfies()

apache_request_server_port
int apache_request_server_port()

apache_request_set_etag
void apache_request_set_etag()

apache_request_set_last_modified
void apache_request_set_last_modified()

apache_request_some_auth_required
bool apache_request_some_auth_required()

apache_request_sub_req_lookup_file
object apache_request_sub_req_lookup_file(string file)
   Returns sub-request for the specified file.
   You would need to run it yourself with run().

apache_request_sub_req_lookup_uri
object apache_request_sub_req_lookup_uri(string uri)
   Returns sub-request for the specified uri.
   You would need to run it yourself with run()

apache_request_sub_req_method_uri
object apache_request_sub_req_method_uri(string method, string uri)
   Returns sub-request for the specified file.
   You would need to run it yourself with run().

apache_request_update_mtime
long apache_request_update_mtime([int dependency_mtime])

apache_response_headers
array apache_response_headers(void)
   Fetch all HTTP response headers

apache_setenv
bool apache_setenv(string variable, string value [, bool walk_to_top])
   Set an Apache subprocess_env variable

virtual
bool virtual(string filename)
   Perform an Apache sub-request

smfi_addheader
string smfi_addheader(string headerf, string headerv)
   Adds a header to the current message.

smfi_addrcpt
string smfi_addrcpt(string rcpt)
   Add a recipient to the message envelope.

smfi_chgheader
string smfi_chgheader(string headerf, string headerv)
   Changes a header's value for the current message.

smfi_delrcpt
string smfi_delrcpt(string rcpt)
   Removes the named recipient from the current message's envelope.

smfi_getsymval
string smfi_getsymval(string macro)
   Returns the value of the given macro or NULL if the macro is not defined.

smfi_replacebody
string smfi_replacebody(string body)
   Replaces the body of the current message. If called more than once,
   subsequent calls result in data being appended to the new body.

smfi_setflags
string smfi_setflags(long flags)
   Sets the flags describing the actions the filter may take.

smfi_setreply
string smfi_setreply(string rcode, string xcode, string message)
   Directly set the SMTP error reply code for this connection.
   This code will be used on subsequent error replies resulting
   from actions taken by this filter.

smfi_settimeout
string smfi_settimeout(long timeout)
   Sets the number of seconds libmilter will wait
   for an MTA connection before timing out a socket.

nsapi_request_headers
array nsapi_request_headers(void)
   Get all headers from the request

nsapi_response_headers
array nsapi_response_headers(void)
   Get all headers from the response

nsapi_virtual
bool nsapi_virtual(string uri)
   Perform an NSAPI sub-request
